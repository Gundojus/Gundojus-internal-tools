{"version":3,"sources":["theme/index.js","global-page-styles.js","pages/utils/login.js","pages/utils/firebaseConfig.js","pages/utils/navbar.js","pages/orders/ordersManagers.js","pages/orders/ordersAdd.js","pages/orders/ordersEdit.js","pages/orders/ordersView.js","pages/sudo/sudoAddUser.js","pages/utils/page404.js","pages/calendar/calendar.js","pages/customers/AddCustomer.js","pages/customers/ViewCustomers.js","pages/customers/EditCustomer.js","App.js","index.js","qapi.js"],"names":["pageStyles","PageStyles","createGlobalStyle","_ref","styles","Object","entries","map","_ref2","prop","value","transformVar","GlobalQuarklyPageStyles","_ref3","pageUrl","React","createElement","Login","email","setEmail","useState","password","setPassword","error","setError","history","useHistory","Theme","theme","Helmet","rel","href","type","Section","height","background","padding","sm-padding","Override","slot","align-items","Text","as","font","md-font","margin","text-align","color","align-self","display","Box","flex-wrap","overflow","align-content","flex-direction","justify-content","width","lg-width","gap","grid-gap","sm-width","min-width","Input","onChange","e","target","border-radius","grid-column","Button","onClick","handleLogin","db","getDatabase","usersRef","ref","onValue","snapshot","users","val","userFound","userId","user","sessionStorage","setItem","role","push","RawHtml","place","rawKey","decryptShiftedAscii","text","Array","from","char","String","fromCharCode","charCodeAt","join","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","storage","getStorage","database","uploadImage","async","storageReference","file","name","uploadBytes","getDownloadURL","uploadAudio","audioName","Date","getTime","audioRef","audioBlob","fetchOrderById","uuid","callback","orderRef","dbRef","order","fetchOrdersByDate","ordersRef","ordersQuery","query","orderByChild","equalTo","date","get","orders","exists","forEach","childSnapshot","id","key","deleteImageFromStorage","imageRef","storagePath","deleteObject","pages","title","path","NavBar","current","pages_content","filter","page","cursor","transition","hover-background","hover-color","Boolean","length","deleteOrder","remove","deleteOrderById","window","location","reload","console","alert","setOrders","useEffect","data","ordersArray","keys","fetchOrders","getItem","quarkly-title","sm-margin","Icon","category","icon","MdNoteAdd","size","style","border-width","border-style","border-color","Strong","_order$pieces","progress","orderCreationDate","orderCreationTime","customer_name","pieces","number_of_pieces","deadline_formatted","MdCreate","editOrder","MdDeleteSweep","handleDelete","confirm","FileUploader","handleFile","hiddenFileInput","useRef","Fragment","className","handleClick","click","event","files","multiple","accept","AudioRecorder","handleAudioUpload","handleDeleteAudio","audioLink","isRecording","setIsRecording","mediaRecorderRef","audioChunks","handleStopRecording","stop","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","onstop","Blob","start","controls","src","aria-label","customerName","setCustomerName","countryCode","setCountryCode","phoneNumber","setPhoneNumber","images","setImages","setPieces","setAudioLink","deadlineDate","setDeadlineDate","totalPieces","reduce","acc","piece","quantity","position","MdArrowBack","left","min-height","placeholder-color","required","Hr","uploadedImageUrls","Promise","all","prevImages","grid-template-columns","Math","min","grid-auto-rows","border","image","index","File","URL","createObjectURL","object-fit","top","right","updatedImages","_","i","handleDeleteImage","backgroundColor","borderRadius","audioURL","addPieceRow","remarks","textAlign","Select","handleTypeChange","updatedPieces","fontSize","handleQuantityChange","Number","placeholder","handleRemarksChange","removePieceRow","toISOString","split","now","toLocaleTimeString","hour","minute","hour12","toLocaleDateString","day","year","month","replace","orderUUID","generateUUID","characters","result","charAt","floor","random","validImages","undefined","deadline_raw","getFullYear","getMonth","slice","getDate","orderData","phone_number","details","audio_link","set","saveOrderToDatabase","sendWhatsAppMessage","message","log","encodeURIComponent","URLSearchParams","useLocation","search","setOrderData","setProgress","loading","setLoading","imageUrls","setImageUrls","setAudioURL","modalOpen","setModalOpen","modalImageUrl","setModalImageUrl","deadline","setDeadline","_data$pieces","dateString","parsedDate","convertToInputDateFormat","err","fetchData","extractStoragePathFromURL","url","baseURL","startsWith","encodedPath","substring","indexOf","decodeURIComponent","AudioRecorderWithDeletion","FaWhatsapp","marginLeft","handleWhatsAppClick","open","readOnly","prevUrls","openImageInModal","alt","imageToDelete","deleteAudioFromStorage","convertToReadableDate","inputDate","updatedOrderData","updatedFields","update","editOrderById","justifyContent","alignItems","zIndex","closeModal","maxHeight","maxWidth","stopPropagation","_orderData$pieces","_orderData$pieces$det","ProgressBar","completed","Pending","Completed","bgColor","labelAlignment","labelColor","setRole","preventDefault","newUserRef","addUserToDatabase","max-width","sm-font","letter-spacing","Link","text-decoration-line","hover-opacity","CalendarPage","myEvents","setEvents","selectedDate","setSelectedDate","toastMessage","setToastMessage","formatDateLocal","loadEventsForMonth","startOfMonth","endOfMonth","datesInMonth","d","setDate","allOrders","dateStr","getEventsForDate","formattedDate","flexDirection","Calendar","pendingEvents","sum","toDateString","tileContent","view","some","marginTop","onActiveStartDateChange","activeStartDate","borderCollapse","fullPhoneNumber","phone","measurements","customersRef","newCustomerRef","addCustomerToDatabase","deleteCustomer","customerRef","deleteCustomerById","customers","setCustomers","searchTerm","setSearchTerm","customersArray","fetchCustomers","normalizePhoneNumber","filteredCustomers","customer","nameField","toLowerCase","trim","term","nameMatch","includes","phoneField","normalizedPhoneField","normalizedSearchTerm","phoneMatch","MdPersonAdd","flex","editCustomer","customerData","setCustomerData","fetchCustomerById","updatedCustomerData","updatedData","editCustomerById","PrivateRoute","component","Component","rest","Route","assign","render","props","Redirect","to","SudoRoute","App","Router","Switch","exact","OrdersView","Orders","OrdersAdd","OrdersEdit","ViewCustomers","AddCustomer","EditCustomer","UsersAdd","Page404","QAPI","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.852aad3d.chunk.js","sourcesContent":["export default {\r\n\t\"defaultWidth\": 1280,\r\n\t\"breakpoints\": {\r\n\t\t\"sm\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"max-width\",\r\n\t\t\t\t\"value\": 576\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"md\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"max-width\",\r\n\t\t\t\t\"value\": 768\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"lg\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"max-width\",\r\n\t\t\t\t\"value\": 992\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"color\": {\r\n\t\t\"dark\": \"#04080C\",\r\n\t\t\"darkL1\": \"#0E1317\",\r\n\t\t\"darkL2\": \"#191E22\",\r\n\t\t\"grey\": \"#6F839F\",\r\n\t\t\"greyD1\": \"#637897\",\r\n\t\t\"greyD2\": \"#586D8E\",\r\n\t\t\"light\": \"#F7FBFF\",\r\n\t\t\"lightD1\": \"#EDF2F6\",\r\n\t\t\"lightD2\": \"#E4E8EC\",\r\n\t\t\"green\": \"#00875A\",\r\n\t\t\"primary\": \"#0077CC\",\r\n\t\t\"secondary\": \"#FFC400\",\r\n\t\t\"orange\": \"#FF7C22\",\r\n\t\t\"red\": \"#DE350B\",\r\n\t\t\"purple\": \"#FD6DF9\",\r\n\t\t\"indigo\": \"#9B6CFC\"\r\n\t},\r\n\t\"fontFamily\": {\r\n\t\t\"sans\": \"-apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n\t\t\"sansHeavy\": \"Impact, Haettenschweiler, 'Franklin Gothic Bold', Charcoal, 'Helvetica Inserat', 'Bitstream Vera Sans Bold', 'Arial Black', sans-serif\",\r\n\t\t\"sansHelvetica\": \"Frutiger, 'Frutiger Linotype', Univers, Calibri, 'Gill Sans', 'Gill Sans MT', 'Myriad Pro', Myriad, 'DejaVu Sans Condensed', 'Liberation Sans', 'Nimbus Sans L', Tahoma, Geneva, 'Helvetica Neue', Helvetica, Arial, sans-serif\",\r\n\t\t\"sansVerdana\": \"Corbel, 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', 'Bitstream Vera Sans', 'Liberation Sans', Verdana, 'Verdana Ref', sans-serif\",\r\n\t\t\"sansTrebuchet\": \"'Segoe UI', Candara, 'Bitstream Vera Sans', 'DejaVu Sans', 'Trebuchet MS', Verdana, 'Verdana Ref', sans-serif\",\r\n\t\t\"mono\": \"Consolas, 'Andale Mono WT', 'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L', Monaco, 'Courier New', Courier, monospace\",\r\n\t\t\"serifTimes\": \"Cambria, 'Hoefler Text', Utopia, 'Liberation Serif', 'Nimbus Roman No9 L Regular', Times, 'Times New Roman', serif\",\r\n\t\t\"serifGeorgia\": \"Constantia, 'Lucida Bright', Lucidabright, 'Lucida Serif', Lucida, 'DejaVu Serif', 'Bitstream Vera Serif', 'Liberation Serif', Georgia, serif\",\r\n\t\t\"serifGaramond\": \"'Palatino Linotype', Palatino, Palladio, 'URW Palladio L', 'Book Antiqua', Baskerville, 'Bookman Old Style', 'Bitstream Charter', 'Nimbus Roman No9 L', Garamond, 'Apple Garamond', 'ITC Garamond Narrow', 'New Century Schoolbook', 'Century Schoolbook', 'Century Schoolbook L', Georgia, serif\"\r\n\t},\r\n\t\"font\": {\r\n\t\t\"headline1\": \"normal 900 72px/1.2 --fontFamily-sans\",\r\n\t\t\"headline2\": \"normal 900 42px/1.2 --fontFamily-sans\",\r\n\t\t\"headline3\": \"normal 500 28px/1.2 --fontFamily-sans\",\r\n\t\t\"base\": \"normal 300 16px/1.5 --fontFamily-sans\",\r\n\t\t\"lead\": \"normal 300 20px/1.5 --fontFamily-sans\"\r\n\t},\r\n\t\"boxShadow\": {\r\n\t\t\"m\": \"0 4px 5px -1px rgba(0, 0, 0, 0.1)\",\r\n\t\t\"l\": \"0 10px 15px -3px rgba(0, 0, 0, 0.1)\",\r\n\t\t\"xl\": \"0 20px 25px -5px rgba(0, 0, 0, 0.1)\",\r\n\t\t\"xxl\": \"0 25px 50px -12px rgba(0, 0, 0, 0.25)\"\r\n\t},\r\n\t\"background\": {\r\n\t\t\"primaryGradient\": \"linear-gradient(180deg, --color-primary, transparent) no-repeat 0 0\",\r\n\t\t\"secondaryGradient\": \"linear-gradient(180deg, --color-secondary, transparent) no-repeat 0 0\"\r\n\t},\r\n\t\"transform\": {\r\n\t\t\"rotate90\": \"rotate(90deg)\",\r\n\t\t\"rotate180\": \"rotate(180deg)\",\r\n\t\t\"flipX\": \"scaleX(-1)\",\r\n\t\t\"flipY\": \"scaleY(-1)\"\r\n\t},\r\n\t\"transition\": {\r\n\t\t\"opacityOut\": \"opacity --transitionDuration-normal --transitionTimingFunction-easeOut\",\r\n\t\t\"transformOut\": \"transform --transitionDuration-normal --transitionTimingFunction-easeOut\",\r\n\t\t\"transformInOut\": \"transform --transitionDuration-normal --transitionTimingFunction-easeInOut\"\r\n\t},\r\n\t\"transitionTimingFunction\": {\r\n\t\t\"easeIn\": \"cubic-bezier(0.4, 0, 1, 1)\",\r\n\t\t\"easeOut\": \"cubic-bezier(0, 0, 0.2, 1)\",\r\n\t\t\"easeInOut\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\r\n\t\t\"sharp\": \"cubic-bezier(0.4, 0, 0.6, 1)\"\r\n\t},\r\n\t\"transitionDuration\": {\r\n\t\t\"fastest\": \"0.1s\",\r\n\t\t\"fast\": \"0.2s\",\r\n\t\t\"normal\": \"0.3s\"\r\n\t},\r\n\t\"filter\": {\r\n\t\t\"grayscale\": \"grayscale(100%)\",\r\n\t\t\"invert\": \"invert(100%)\",\r\n\t\t\"blur\": \"blur(10px)\"\r\n\t},\r\n\t\"animation\": {},\r\n\t\"keyframes\": {\r\n\t\t\"fadeIn\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"from\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 0\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"to\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"fadeOut\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"from\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"to\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 0\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"components\": {\r\n\t\t\"section\": {\r\n\t\t\t\"maxWidth\": {\r\n\t\t\t\t\"default\": \"1280px\"\r\n\t\t\t},\r\n\t\t\t\"minWidth\": {\r\n\t\t\t\t\"default\": \"300px\"\r\n\t\t\t},\r\n\t\t\t\"width\": {\r\n\t\t\t\t\"default\": \"90%\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"stack\": {\r\n\t\t\t\"gap\": {\r\n\t\t\t\t\"default\": \"32px\",\r\n\t\t\t\t\"small\": \"16px\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\"version\": 1\r\n}","import React from \"react\";\r\nimport { transformVar } from \"@quarkly/atomize\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst pageStyles = {\r\n    \"404\": {},\r\n    \"index\": {},\r\n    \"login\": {},\r\n    \"orders-customers\": {}\r\n};\r\n\r\nconst PageStyles = createGlobalStyle`\r\n    body {\r\n        ${({ styles }) =>\r\n            Object.entries(styles || {}).map(\r\n                ([prop, value]) => `${prop}: ${transformVar(prop, value)};`\r\n            )}\r\n    }\r\n`;\r\nexport const GlobalQuarklyPageStyles = ({ pageUrl }) => <PageStyles styles={pageStyles[pageUrl]} />\r\n","import React, { useState } from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Text, Section, Input, Box, Button } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { RawHtml, Override } from \"@quarkly/components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDatabase, ref, onValue } from \"firebase/database\"; // Import Firebase\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory(); // Used for redirection\r\n\r\n  // Handle login with Firebase\r\n  const handleLogin = () => {\r\n    const db = getDatabase();\r\n    const usersRef = ref(db, \"users\");\r\n\r\n    onValue(usersRef, (snapshot) => {\r\n      const users = snapshot.val();\r\n      let userFound = false;\r\n\r\n      // Check for matching email and password in Firebase Realtime Database\r\n      for (const userId in users) {\r\n        const user = users[userId];\r\n        if (user.email === email && user.password === password) {\r\n          userFound = true;\r\n\r\n          // Store user role in sessionStorage\r\n          sessionStorage.setItem(\"role\", user.role);\r\n\r\n          // Redirect based on role\r\n          if (user.role === \"manager\" || user.role === \"sudo\") {\r\n            history.push(\"/orders\");\r\n          }\r\n        }\r\n      }\r\n\r\n      // Show error if no match found\r\n      if (!userFound) {\r\n        setError(\"Invalid email or password\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"index\"} />\r\n      <Helmet>\r\n        <title>Login</title>\r\n        <link rel={\"shortcut icon\"} href={\"https://i.imgur.com/crcVWqA.png\"} type={\"image/x-icon\"} />\r\n      </Helmet>\r\n      <Section height=\"auto\" background=\"--color-light\" padding=\"0 0 0px 0\">\r\n        <Section padding=\"80px 0\" sm-padding=\"40px 0\">\r\n          <Override slot=\"SectionContent\" align-items=\"center\" />\r\n          <Text as=\"h2\" font=\"--headline1\" md-font=\"--headline2\" margin=\"20px 0 0 0\">\r\n            Gundoju's Internal Tools\r\n          </Text>\r\n          <Text as=\"p\" font=\"--lead\" margin=\"0px 0 0px 0\" text-align=\"center\">\r\n            Manager Login\r\n          </Text>\r\n        </Section>\r\n      </Section>\r\n\r\n      <Section background=\"--color-light\" color=\"--dark\" padding=\"0px 0 64px 0\" text-align=\"left\">\r\n        <Override slot=\"SectionContent\" align-self=\"auto\" display=\"flex\" align-items=\"center\" />\r\n        <Box\r\n          margin=\"16px 16px 16px 16px\"\r\n          display=\"inline-block\"\r\n          flex-wrap=\"wrap\"\r\n          overflow=\"visible\"\r\n          align-content=\"space-around\"\r\n          align-items=\"center\"\r\n          flex-direction=\"row\"\r\n          justify-content=\"center\"\r\n          align-self=\"center\"\r\n          text-align=\"left\"\r\n        >\r\n          <Box width=\"100%\" padding=\"8px 8px 8px 8px\" lg-width=\"100%\">\r\n            <Box>\r\n              <Box\r\n                gap=\"16px\"\r\n                display=\"grid\"\r\n                flex-direction=\"row\"\r\n                flex-wrap=\"wrap\"\r\n                grid-gap=\"16px\"\r\n              >\r\n                {/* Error Message */}\r\n                {error && (\r\n                  <Text color=\"red\" text-align=\"center\">\r\n                    {error}\r\n                  </Text>\r\n                )}\r\n\r\n                <Box\r\n                  sm-width=\"100%\"\r\n                  display=\"flex\"\r\n                  flex-direction=\"column\"\r\n                  width=\"100%\"\r\n                  min-width=\"100%\"\r\n                >\r\n                  <Text font=\"--base\" margin=\"0 0 4px 0\">\r\n                    Email\r\n                  </Text>\r\n                  <Input\r\n                    width=\"312px\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)} // Set email state\r\n                    border-radius=\"7.5px\"\r\n                  />\r\n                </Box>\r\n                <br />\r\n                <Box sm-width=\"100%\" display=\"flex\" flex-direction=\"column\">\r\n                  <Text font=\"--base\" margin=\"0 0 4px 0\">\r\n                    Password\r\n                  </Text>\r\n                  <Input\r\n                    width=\"100%\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)} // Set password state\r\n                    border-radius=\"7.5px\"\r\n                  />\r\n                </Box>\r\n\r\n                <Box display=\"flex\" flex-direction=\"column\" align-items=\"flex-start\" grid-column=\"1 / span 2\">\r\n                  <Button onClick={handleLogin} border-radius=\"7.5px\">\r\n                    Login\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Section>\r\n\r\n      <RawHtml>\r\n        <style place={\"endOfHead\"} rawKey={\"66f6d1359710450018a331b3\"}>\r\n          {\":root {\\n  box-sizing: border-box;\\n}\\n\\n* {\\n  box-sizing: inherit;\\n}\"}\r\n        </style>\r\n      </RawHtml>\r\n    </Theme>\r\n  );\r\n}\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\"; // Import 'ref' directly\r\nimport {\r\n  getDatabase,\r\n  ref as dbRef,\r\n  set,\r\n  onValue,\r\n  query,\r\n  orderByChild,\r\n  equalTo,\r\n  get,\r\n  remove,\r\n  push,\r\n  update,\r\n  off\r\n} from \"firebase/database\"; // Import Realtime Database functions\r\nimport { deleteObject } from \"firebase/storage\";\r\nconst REACT_APP_FIREBASE_API_KEY = \"BJ{bTzCojnx`woWCerUe9PsvpyU3VIXyI.dj5Od\";\r\nconst REACT_APP_FIREBASE_AUTH_DOMAIN = \"hvoepkvt.qspe/gjsfcbtfbqq/dpn\";\r\nconst REACT_APP_FIREBASE_DATABASE_URL =\r\n  \"iuuqt;00hvoepkvt.qspe.efgbvmu.suec/btjb.tpvuifbtu2/gjsfcbtfebubcbtf/bqq\";\r\nconst REACT_APP_FIREBASE_PROJECT_ID = \"hvoepkvt.qspe\";\r\nconst REACT_APP_FIREBASE_STORAGE_BUCKET = \"hvoepkvt.qspe/bqqtqpu/dpn\";\r\nconst REACT_APP_FIREBASE_MESSAGING_SENDER_ID = \":43279::131:\";\r\nconst REACT_APP_FIREBASE_APP_ID = \"2;:43279::131:;xfc;25geg8c4ef97cd987gdb11\";\r\n\r\nfunction decryptShiftedAscii(text) {\r\n  return Array.from(text)\r\n    .map((char) => String.fromCharCode(char.charCodeAt(0) - 1))\r\n    .join(\"\");\r\n}\r\n\r\n// Firebase credentials (move to .env)\r\nconst firebaseConfig = {\r\n  apiKey: decryptShiftedAscii(REACT_APP_FIREBASE_API_KEY),\r\n  authDomain: decryptShiftedAscii(REACT_APP_FIREBASE_AUTH_DOMAIN),\r\n  databaseURL: decryptShiftedAscii(REACT_APP_FIREBASE_DATABASE_URL), // This is required to initialize the Realtime Database\r\n  projectId: decryptShiftedAscii(REACT_APP_FIREBASE_PROJECT_ID),\r\n  storageBucket: decryptShiftedAscii(REACT_APP_FIREBASE_STORAGE_BUCKET),\r\n  messagingSenderId: decryptShiftedAscii(\r\n    REACT_APP_FIREBASE_MESSAGING_SENDER_ID\r\n  ),\r\n  appId: decryptShiftedAscii(REACT_APP_FIREBASE_APP_ID),\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase services\r\nconst storage = getStorage(app);\r\nconst database = getDatabase(app);\r\n\r\n// Function to upload image to Firebase Storage\r\nexport const uploadImage = async (file) => {\r\n  const storageReference = ref(storage, `images/${file.name}`); // Use 'ref' directly for creating storage references\r\n  await uploadBytes(storageReference, file);\r\n  return getDownloadURL(storageReference); // Return the URL of the uploaded image\r\n};\r\n\r\n// Function to upload audio to Firebase Storage\r\nexport const uploadAudio = async (audioBlob) => {\r\n  const audioName = `audio_${new Date().getTime()}.wav`; // Generate a unique filename\r\n  const audioRef = ref(storage, `audio/${audioName}`);\r\n  await uploadBytes(audioRef, audioBlob); // Upload audio to Firebase Storage\r\n  return getDownloadURL(audioRef); // Return the download URL for the uploaded audio\r\n};\r\n\r\n// Function to save order to Firebase Realtime Database\r\nexport const saveOrderToDatabase = async (orderData, orderUUID) => {\r\n  const orderRef = dbRef(database, `orders/${orderUUID}`);\r\n  await set(orderRef, orderData);\r\n};\r\n\r\n// Function to fetch an order by UUID\r\nexport const fetchOrderById = async (uuid, callback) => {\r\n  const orderRef = dbRef(database, `orders/${uuid}`);\r\n  onValue(orderRef, (snapshot) => {\r\n    const order = snapshot.val();\r\n    callback(order); // Return the found order or null if not found\r\n  });\r\n};\r\n\r\n// Function to delete an order by UUID\r\nexport const deleteOrderById = async (uuid) => {\r\n  const orderRef = dbRef(database, `orders/${uuid}`);\r\n  await remove(orderRef);\r\n};\r\n\r\n// Function to edit an order by UUID\r\nexport const editOrderById = async (uuid, updatedFields) => {\r\n  const orderRef = dbRef(database, `orders/${uuid}`);\r\n  await update(orderRef, updatedFields);\r\n};\r\n\r\nexport const fetchOrdersByDate = async (date) => {\r\n  const ordersRef = dbRef(database, \"orders\");\r\n  const ordersQuery = query(\r\n    ordersRef,\r\n    orderByChild(\"deadline_raw\"),\r\n    equalTo(date)\r\n  ); // Use 'deadline' as the field\r\n\r\n  const snapshot = await get(ordersQuery);\r\n  const orders = [];\r\n  if (snapshot.exists()) {\r\n    snapshot.forEach((childSnapshot) => {\r\n      orders.push({ id: childSnapshot.key, ...childSnapshot.val() });\r\n    });\r\n  }\r\n\r\n  return orders; // Return the list of orders for the specified date\r\n};\r\n\r\nexport const deleteCustomerById = async (uuid) => {\r\n  const customerRef = dbRef(database, `customers/${uuid}`);\r\n  await remove(customerRef);\r\n};\r\n\r\nexport const addCustomerToDatabase = async (name, phone, measurements) => {\r\n  const db = getDatabase();\r\n  const customersRef = dbRef(db, \"customers\"); // Reference to 'customers' node\r\n  const newCustomerRef = push(customersRef); // Create a new customer entry\r\n  await set(newCustomerRef, {\r\n    name,\r\n    phone,\r\n    measurements, // Array of image URLs\r\n  });\r\n  alert(\"Customer added successfully\");\r\n};\r\n\r\nexport const deleteImageFromStorage = async (storagePath) => {\r\n  const storage = getStorage();\r\n  const imageRef = ref(storage, storagePath);\r\n  await deleteObject(imageRef);\r\n};\r\n\r\n// Function to delete audio from Firebase Storage\r\nexport const deleteAudioFromStorage = async (storagePath) => {\r\n  const storage = getStorage();\r\n  const audioRef = ref(storage, storagePath);\r\n  await deleteObject(audioRef);\r\n};\r\n\r\nexport const editCustomerById = async (uuid, updatedData) => {\r\n  try {\r\n    // Reference to the specific customer in the database\r\n    const customerRef = ref(database, `customers/${uuid}`);\r\n\r\n    // Update the customer data\r\n    await update(customerRef, updatedData);\r\n\r\n    console.log(`Customer with UUID ${uuid} updated successfully.`);\r\n  } catch (error) {\r\n    console.error(\"Error updating customer:\", error);\r\n    throw error; // Rethrow the error for further handling if needed\r\n  }\r\n};\r\n\r\nexport const fetchCustomerById = (uuid, callback) => {\r\n  console.log(uuid);\r\n  const orderRef = dbRef(database, `orders/${uuid}`);\r\n  onValue(orderRef, (snapshot) => {\r\n    const order = snapshot.val();\r\n    callback(order); // Return the found order or null if not found\r\n  });\r\n};","import { Text, Box } from \"@quarkly/widgets\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst pages = [\r\n  // { title: \"Summary\", role: \"manager\", path: \"/summary\" },\r\n  { title: \"Calendar\", role: \"manager\", path: \"/calendar\" },\r\n  { title: \"Orders\", role: \"manager\", path: \"/orders\" },\r\n  { title: \"Add Users\", role: \"sudo\", path: \"/sudo/users/add\" },\r\n  { title: \"View Customers\", role: \"manager\", path: \"/customers/view\" }\r\n];\r\n\r\nexport const NavBar = ({ role, current }) => {\r\n  const history = useHistory();\r\n\r\n  const pages_content = pages\r\n    .filter((page) => page.role === role || role === \"sudo\")\r\n    .map((page) =>\r\n      page.title !== current ? (\r\n        <Text\r\n          key={page.path}\r\n          onClick={() => history.push(page.path)}\r\n          cursor=\"pointer\"\r\n          margin=\"0 10px\"\r\n          font=\"--lead\"\r\n          padding=\"10px\"\r\n          border-radius=\"5px\"\r\n          transition=\"background-color 0.3s\"\r\n          hover-background=\"--color-light\"\r\n          hover-color=\"--primary\"\r\n        >\r\n          {page.title}\r\n        </Text>\r\n      ) : null\r\n    )\r\n    .filter(Boolean); // Removes any `null` or `false` values from the array\r\n\r\n  if (pages_content.length > 0) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justify-content=\"space-around\"\r\n        align-items=\"center\"\r\n        padding=\"20px\"\r\n        background=\"--color-lightD2\"\r\n      >\r\n        {pages_content}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Text, Icon, Box, Section, Strong } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdCreate, MdDeleteSweep, MdNoteAdd } from \"react-icons/md\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDatabase, ref as dbRef, onValue } from \"firebase/database\";\r\nimport { deleteOrderById } from \"../utils/firebaseConfig\";\r\nimport { NavBar } from \"../utils/navbar\";\r\n\r\n// Fetch orders from Firebase Realtime Database\r\nconst fetchOrders = (setOrders) => {\r\n  const db = getDatabase();\r\n  const ordersRef = dbRef(db, \"orders\");\r\n\r\n  onValue(ordersRef, (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data) {\r\n      const ordersArray = Object.keys(data).map((key) => ({\r\n        uuid: key,\r\n        ...data[key],\r\n      }));\r\n      setOrders(ordersArray);\r\n    }\r\n  });\r\n};\r\n\r\n// Function to delete an order and reload the page\r\nconst deleteOrder = async (uuid) => {\r\n  try {\r\n    await deleteOrderById(uuid); // Deletes the order from Firebase Database\r\n    window.location.reload(); // Forces page reload after successful deletion\r\n  } catch (error) {\r\n    console.error(\"Error deleting order: \", error);\r\n    alert(\"Failed to delete the order. Please try again.\");\r\n  }\r\n};\r\n\r\nexport default () => {\r\n  const [orders, setOrders] = useState([]); // State to store all orders\r\n  const history = useHistory();\r\n\r\n  // Fetch all orders on component mount\r\n  useEffect(() => {\r\n    fetchOrders(setOrders);\r\n  }, []);\r\n\r\n  // Handle editing an order\r\n  const editOrder = (uuid) => {\r\n    history.push(`/orders/edit?uuid=${uuid}`);\r\n  };\r\n\r\n  // Handle deleting an order\r\n  const handleDelete = (uuid) => {\r\n    if (window.confirm(\"Are you sure you want to delete this order?\")) {\r\n      deleteOrder(uuid);\r\n    }\r\n  };\r\n\r\n  // Determine the color of the status text based on the order's progress\r\n  const getStatusColor = (progress) => {\r\n    if (progress === \"Completed\") return \"#31a931\"; // Green for completed\r\n    if (progress === \"In Progress\") return \"#ffaa00\"; // Orange for in progress\r\n    return \"#ff0000\"; // Red for others (e.g., Pending)\r\n  };\r\n\r\n  const addOrder = () => {\r\n    history.push(\"/orders/add\");\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-managers\"} />\r\n      <Helmet>\r\n        <title>Orders Manager</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://i.imgur.com/crcVWqA.png\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"Orders\"} />\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Orders-Manager\">\r\n        <Text\r\n          margin=\"0px 0px 20px 0px\"\r\n          text-align=\"center\"\r\n          font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n          color=\"--dark\"\r\n          sm-margin=\"0px 0px 30px 0px\"\r\n        >\r\n          Orders\r\n        </Text>\r\n        <Icon\r\n          category=\"md\"\r\n          icon={MdNoteAdd}\r\n          onClick={() => addOrder()}\r\n          size=\"32px\"\r\n          align-self=\"flex-end\"\r\n          margin=\"16px 0px 16px 0px\"\r\n          style={{ cursor: \"pointer\" }}\r\n        />\r\n\r\n        {/* Begin Fixed-Width Container */}\r\n        <Box\r\n          min-width=\"1200px\"\r\n          overflow=\"auto\"\r\n          margin=\"0 auto\"\r\n          padding=\"0 10px\" // Optional: Add horizontal padding\r\n        >\r\n          {/* Header Row */}\r\n          <Box\r\n            display=\"flex\"\r\n            justify-content=\"space-between\"\r\n            align-items=\"center\"\r\n            padding=\"10px\"\r\n            border-width=\"0 0 2px 0\"\r\n            border-style=\"solid\"\r\n            border-color=\"#d1d7de\"\r\n            margin=\"0px 0px 10px 0px\"\r\n          >\r\n            <Text width=\"20%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Order Time</Strong>\r\n            </Text>\r\n            <Text width=\"25%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Customer Name</Strong>\r\n            </Text>\r\n            <Text width=\"15%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Status</Strong>\r\n            </Text>\r\n            <Text width=\"10%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Pieces</Strong>\r\n            </Text>\r\n            <Text width=\"20%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Deadline</Strong>\r\n            </Text>\r\n            <Text width=\"5%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Edit</Strong>\r\n            </Text>\r\n            <Text width=\"5%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Delete</Strong>\r\n            </Text>\r\n          </Box>\r\n\r\n          {orders.length > 0 ? (\r\n            <Box>\r\n              {orders.map((order) => (\r\n                <Box\r\n                  key={order.uuid}\r\n                  display=\"flex\"\r\n                  justify-content=\"space-between\"\r\n                  align-items=\"center\"\r\n                  padding=\"10px\"\r\n                  border-width=\"0 0 1px 0\"\r\n                  border-style=\"solid\"\r\n                  border-color=\"#d1d7de\"\r\n                  background=\"#ffffff\"\r\n                  margin=\"0px 0px 10px 0px\"\r\n                >\r\n                  {/* Order Time */}\r\n                  <Text\r\n                    width=\"20%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.orderCreationDate} / {order.orderCreationTime}\r\n                  </Text>\r\n\r\n                  {/* Order Name */}\r\n                  <Text\r\n                    width=\"25%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 500 28px/1.2 --fontFamily-serifGeorgia\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.customer_name}\r\n                  </Text>\r\n\r\n                  {/* Status with Conditional Color */}\r\n                  <Text\r\n                    width=\"15%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color={getStatusColor(order.progress)}\r\n                  >\r\n                    <Strong>{order.progress}</Strong>\r\n                  </Text>\r\n\r\n                  {/* Pieces */}\r\n                  <Text\r\n                    width=\"10%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.pieces?.number_of_pieces || \"N/A\"}\r\n                  </Text>\r\n\r\n                  {/* Deadline */}\r\n                  <Text\r\n                    width=\"20%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.deadline_formatted || \"N/A\"}\r\n                  </Text>\r\n\r\n                  {/* Edit Icon */}\r\n                  <Box\r\n                    width=\"5%\"\r\n                    display=\"flex\"\r\n                    justify-content=\"center\"\r\n                    align-items=\"center\"\r\n                  >\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdCreate}\r\n                      size=\"32px\"\r\n                      margin=\"0px\"\r\n                      onClick={() => editOrder(order.uuid)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Delete Icon */}\r\n                  <Box\r\n                    width=\"5%\"\r\n                    display=\"flex\"\r\n                    justify-content=\"center\"\r\n                    align-items=\"center\"\r\n                  >\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"32px\"\r\n                      margin=\"0px\"\r\n                      onClick={() => handleDelete(order.uuid)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Text>No orders available</Text>\r\n          )}\r\n        </Box>\r\n        {/* End Fixed-Width Container */}\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","// Import necessary modules and components\r\nimport React, { useState, useRef } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Hr,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Icon,\r\n  Select,\r\n} from \"@quarkly/widgets\";\r\nimport { Override } from \"@quarkly/components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdDeleteSweep, MdNoteAdd, MdArrowBack } from \"react-icons/md\";\r\nimport {\r\n  uploadImage,\r\n  uploadAudio,\r\n  saveOrderToDatabase,\r\n} from \"../utils/firebaseConfig\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// UUID generation function\r\nconst generateUUID = () => {\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  let result = \"\";\r\n  for (let i = 0; i < 7; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\r\n  }\r\n  return result;\r\n};\r\n\r\n// WhatsApp message sending function\r\nconst sendWhatsAppMessage = (phoneNumber, orderUUID) => {\r\n  const message = `Hi, your order with UUID: ${orderUUID} has been successfully placed.`;\r\n  console.log(\r\n    `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n      message\r\n    )}`\r\n  );\r\n  // const whatsappAPIUrl = `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n  //   message\r\n  // )}`;\r\n  // window.open(whatsappAPIUrl, \"_blank\");\r\n};\r\n\r\n// Custom File Uploader Component\r\nconst FileUploader = ({ handleFile }) => {\r\n  const hiddenFileInput = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    handleFile(files);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"button-upload\"\r\n        onClick={handleClick}\r\n        margin=\"20px 0\"\r\n        background=\"#cb7731\"\r\n        color=\"white\"\r\n        padding=\"10px 20px\"\r\n        border-radius=\"7.5px\"\r\n      >\r\n        Upload Images\r\n      </Button>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleChange}\r\n        ref={hiddenFileInput}\r\n        style={{ display: \"none\" }}\r\n        multiple\r\n        accept=\"image/*\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// Audio Recorder Component\r\nconst AudioRecorder = ({ handleAudioUpload, handleDeleteAudio, audioLink }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunks = useRef([]);\r\n\r\n  const handleStartRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      mediaRecorderRef.current = mediaRecorder;\r\n\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        audioChunks.current.push(event.data);\r\n      };\r\n\r\n      mediaRecorder.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunks.current, { type: \"audio/wav\" });\r\n        const audioLink = await handleAudioUpload(audioBlob);\r\n        audioChunks.current = [];\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error accessing microphone:\", error);\r\n      alert(\"Error accessing microphone\");\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        margin=\"20px 0\"\r\n        background=\"#cb7731\"\r\n        color=\"white\"\r\n        padding=\"10px 20px\"\r\n        border-radius=\"7.5px\"\r\n        onClick={isRecording ? handleStopRecording : handleStartRecording}\r\n      >\r\n        {isRecording ? \"Stop Recording\" : \"Record Audio\"}\r\n      </Button>\r\n      {audioLink && (\r\n        <Box display=\"flex\" align-items=\"center\">\r\n          <audio controls>\r\n            <source src={audioLink} type=\"audio/wav\" />\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n          <Icon\r\n            category=\"md\"\r\n            icon={MdDeleteSweep}\r\n            size=\"24px\"\r\n            color=\"#ff0000\"\r\n            margin=\"0 0 0 10px\"\r\n            onClick={handleDeleteAudio}\r\n            style={{ cursor: \"pointer\" }}\r\n            aria-label=\"Delete Audio\"\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const [customerName, setCustomerName] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"+91\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [pieces, setPieces] = useState([]);\r\n  const [audioLink, setAudioLink] = useState(\"\"); // To store audio URL\r\n  const [deadlineDate, setDeadlineDate] = useState(new Date()); // Added state for deadline date\r\n  const history = useHistory();\r\n\r\n  // Handle file upload and store image paths\r\n  const handleFileUpload = async (files) => {\r\n    try {\r\n      const uploadedImageUrls = await Promise.all(\r\n        files.map((file) => uploadImage(file)) // Use uploadImage function\r\n      );\r\n      setImages((prevImages) => [...prevImages, ...uploadedImageUrls]); // Store URLs\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n      alert(\"Failed to upload images. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Handle audio upload and return the uploaded audio URL\r\n  const handleAudioUpload = async (audioBlob) => {\r\n    try {\r\n      const audioURL = await uploadAudio(audioBlob);\r\n      setAudioLink(audioURL);\r\n      return audioURL;\r\n    } catch (error) {\r\n      console.error(\"Error uploading audio:\", error);\r\n      alert(\"Failed to upload audio. Please try again.\");\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  // Handle deleting an image\r\n  const handleDeleteImage = (index) => {\r\n    const updatedImages = images.filter((_, i) => i !== index);\r\n    setImages(updatedImages);\r\n  };\r\n\r\n  // Handle deleting audio\r\n  const handleDeleteAudio = () => {\r\n    setAudioLink(\"\");\r\n  };\r\n\r\n  // Add a new piece row\r\n  const addPieceRow = () => {\r\n    setPieces([...pieces, { type: \"Blouse\", quantity: 1, remarks: \"\" }]);\r\n  };\r\n\r\n  // Remove a piece row\r\n  const removePieceRow = (index) => {\r\n    setPieces(pieces.filter((_, i) => i !== index));\r\n  };\r\n\r\n  // Handle piece data updates\r\n  const handleTypeChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, type: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const handleQuantityChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, quantity: Number(value) } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const handleRemarksChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, remarks: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const totalPieces = pieces.reduce((acc, piece) => acc + piece.quantity, 0);\r\n\r\n  const formatDateLocal = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = `0${date.getMonth() + 1}`.slice(-2); // Months are zero-based\r\n    const day = `0${date.getDate()}`.slice(-2);\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Submit the order\r\n  const handleSubmitOrder = async () => {\r\n    // Validate form fields\r\n    if (!customerName || !phoneNumber) {\r\n      alert(\"Please fill in customer name and phone number.\");\r\n      return;\r\n    }\r\n\r\n    if (pieces.length === 0) {\r\n      alert(\"Please add at least one piece.\");\r\n      return;\r\n    }\r\n\r\n    if (!deadlineDate) {\r\n      alert(\"Please select a deadline date.\");\r\n      return;\r\n    }\r\n\r\n    // Get the current date and time\r\n    const now = new Date();\r\n    const orderCreationTime = now.toLocaleTimeString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: true,\r\n    });\r\n    const orderCreationDate = now\r\n      .toLocaleDateString(\"en-US\", {\r\n        day: \"numeric\",\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n      })\r\n      .replace(/(\\d+)(th|st|nd|rd)/, \"$1th\");\r\n\r\n    // Generate UUID\r\n    const orderUUID = generateUUID();\r\n\r\n    // Filter out undefined or null images\r\n    const validImages = images.filter(\r\n      (image) => image !== undefined && image !== null\r\n    );\r\n\r\n    const deadline_raw = formatDateLocal(deadlineDate);\r\n    const deadline_formatted = deadlineDate\r\n      .toLocaleDateString(\"en-US\", {\r\n        day: \"numeric\",\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n      })\r\n      .replace(/(\\d+)(th|st|nd|rd)/, \"$1th\");\r\n    // Prepare order data\r\n    const orderData = {\r\n      customer_name: customerName,\r\n      phone_number: `${countryCode}${phoneNumber}`,\r\n      images: validImages, // Ensure only valid image URLs are saved\r\n      pieces: { number_of_pieces: totalPieces, details: pieces },\r\n      audio_link: audioLink,\r\n      orderCreationTime,\r\n      orderCreationDate,\r\n      progress: \"Pending\",\r\n      uuid: orderUUID,\r\n      deadline_raw: deadline_raw,\r\n      deadline_formatted: deadline_formatted,\r\n      // Include the formatted deadline date\r\n    };\r\n    // console.log(orderData);\r\n    // Save order to Firebase Realtime Database\r\n    try {\r\n      await saveOrderToDatabase(orderData, orderUUID);\r\n    } catch (error) {\r\n      console.error(\"Error saving order to database:\", error);\r\n      alert(\"Failed to save order. Please try again.\");\r\n      return;\r\n    }\r\n\r\n    // Send WhatsApp message\r\n    sendWhatsAppMessage(`${countryCode}${phoneNumber}`, orderUUID);\r\n\r\n    // Redirect to orders page\r\n    history.push(\"/orders\");\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-customers\"} />\r\n      <Helmet>\r\n        <title>Add Order</title>\r\n\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://i.imgur.com/crcVWqA.png\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      {/* Main Content */}\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Schedule-5\">\r\n        <Box\r\n          display=\"flex\"\r\n          align-items=\"center\"\r\n          justify-content=\"center\"\r\n          position=\"relative\"\r\n        >\r\n          <Icon\r\n            category=\"md\"\r\n            icon={MdArrowBack}\r\n            size=\"40px\"\r\n            margin=\"16px\"\r\n            padding=\"0px 0px 16px 0px\"\r\n            onClick={() => history.push(\"/orders\")}\r\n            style={{ cursor: \"pointer\", position: \"absolute\", left: \"0\" }}\r\n            aria-label=\"Back to Orders\"\r\n          />\r\n          <Text\r\n            margin=\"0px 0px 20px 0px\"\r\n            text-align=\"center\"\r\n            font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n            color=\"--dark\"\r\n            sm-margin=\"0px 0px 30px 0px\"\r\n          >\r\n            New Order\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          {/* Customer Name Input */}\r\n          <Text margin=\"15px 0px 15px 0px\">Customer Name</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            required\r\n            value={customerName}\r\n            onChange={(e) => setCustomerName(e.target.value)}\r\n          />\r\n          <Hr\r\n            min-height=\"10px\"\r\n            min-width=\"100%\"\r\n            margin=\"15px 0px 15px 0px\"\r\n            border-color=\"--color-darkL2\"\r\n            width=\"1200px\"\r\n          />\r\n\r\n          {/* Phone Number Input */}\r\n          <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n          <Box\r\n            min-width=\"100px\"\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            padding=\"15px 0px 15px 0px\"\r\n          >\r\n            <Input\r\n              display=\"inline-block\"\r\n              background=\"white\"\r\n              value={countryCode}\r\n              border-color=\"--color-darkL2\"\r\n              width=\"5%\"\r\n              padding=\"6px 8px\"\r\n              border-radius=\"7.5px\"\r\n              margin=\"0px 4px 0px 0px\"\r\n              required\r\n              onChange={(e) => setCountryCode(e.target.value)}\r\n            />\r\n            <Input\r\n              display=\"inline-block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              required\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n            />\r\n          </Box>\r\n\r\n          {/* Image Upload Section */}\r\n          <Text margin=\"15px 0px 15px 0px\">Upload Images</Text>\r\n          <FileUploader handleFile={handleFileUpload} />\r\n          {images.length === 0 ? null : (\r\n            <Box\r\n              display=\"grid\"\r\n              grid-template-columns={`repeat(${Math.min(\r\n                images.length,\r\n                4\r\n              )}, 225px)`}\r\n              grid-auto-rows=\"225px\"\r\n              grid-gap=\"15px\"\r\n              width={`${\r\n                Math.min(images.length, 4) * 225 +\r\n                (Math.min(images.length, 4) - 1) * 15\r\n              }px`}\r\n              overflow=\"auto\"\r\n              padding=\"15px\"\r\n              border=\"1px solid #ccc\"\r\n              margin=\"15px 0\"\r\n            >\r\n              {images.map((image, index) => (\r\n                <Box\r\n                  key={index}\r\n                  as=\"div\"\r\n                  position=\"relative\" // To position the delete icon\r\n                >\r\n                  {/* Image Thumbnail */}\r\n                  <Box\r\n                    as=\"img\"\r\n                    src={image instanceof File ? URL.createObjectURL(image) : image}\r\n                    width=\"225px\"\r\n                    height=\"225px\"\r\n                    object-fit=\"cover\"\r\n                    border-radius=\"5px\"\r\n                  />\r\n                  {/* Delete Icon */}\r\n                  <Icon\r\n                    category=\"md\"\r\n                    icon={MdDeleteSweep}\r\n                    size=\"24px\"\r\n                    color=\"#ff0000\"\r\n                    position=\"absolute\"\r\n                    top=\"5px\"\r\n                    right=\"5px\"\r\n                    onClick={() => handleDeleteImage(index)}\r\n                    style={{ cursor: \"pointer\", backgroundColor: \"rgba(255,255,255,0.7)\", borderRadius: \"50%\" }}\r\n                    aria-label={`Delete image ${index + 1}`}\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          )}\r\n\r\n          <Hr\r\n            min-height=\"10px\"\r\n            min-width=\"100%\"\r\n            margin=\"15px 0px 15px 0px\"\r\n            border-color=\"--color-darkL2\"\r\n            width=\"1200px\"\r\n          />\r\n\r\n          {/* Audio Recording Section */}\r\n          <Text margin=\"15px 0px 15px 0px\">Record Audio</Text>\r\n          <AudioRecorder\r\n            handleAudioUpload={handleAudioUpload}\r\n            handleDeleteAudio={handleDeleteAudio}\r\n            audioLink={audioLink}\r\n          />\r\n\r\n          {/* Pieces Section */}\r\n          <Box\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            justify-content=\"space-between\"\r\n          >\r\n            <Text margin=\"15px 0px 15px 0px\">Add Pieces</Text>\r\n            <Icon\r\n              category=\"md\"\r\n              icon={MdNoteAdd}\r\n              size=\"32px\"\r\n              margin=\"16px 0px 16px 0px\"\r\n              onClick={addPieceRow}\r\n              style={{ cursor: \"pointer\" }}\r\n              aria-label=\"Add Piece\"\r\n            />\r\n          </Box>\r\n\r\n          {pieces.length > 0 && (\r\n            <>\r\n              {pieces.map((piece, index) => (\r\n                <Box\r\n                  key={index}\r\n                  display=\"flex\"\r\n                  align-items=\"center\"\r\n                  margin=\"10px 0\"\r\n                >\r\n                  <Text width=\"5%\" textAlign=\"center\">\r\n                    {index + 1}\r\n                  </Text>\r\n                  <Select\r\n                    value={piece.type}\r\n                    onChange={(e) => handleTypeChange(index, e.target.value)}\r\n                    background=\"white\"\r\n                    width=\"20%\"\r\n                    padding=\"5px\"\r\n                    fontSize=\"16px\"\r\n                    margin=\"0 10px\"\r\n                  >\r\n                    <option value=\"Blouse\">Blouse</option>\r\n                    <option value=\"Lehenga\">Lehenga</option>\r\n                    <option value=\"Dress\">Dress</option>\r\n                    <option value=\"Peticoat\">Peticoat</option>\r\n                  </Select>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={piece.quantity}\r\n                    onChange={(e) =>\r\n                      handleQuantityChange(index, e.target.value)\r\n                    }\r\n                    width=\"20%\"\r\n                    min=\"1\"\r\n                    background=\"white\"\r\n                    padding=\"5px\"\r\n                    margin=\"0 10px\"\r\n                  />\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Remarks\"\r\n                    value={piece.remarks}\r\n                    onChange={(e) => handleRemarksChange(index, e.target.value)}\r\n                    width=\"40%\"\r\n                    background=\"white\"\r\n                    padding=\"5px\"\r\n                    margin=\"0 10px\"\r\n                  />\r\n                  <Icon\r\n                    category=\"md\"\r\n                    icon={MdDeleteSweep}\r\n                    size=\"24px\"\r\n                    color=\"#ff0000\"\r\n                    onClick={() => removePieceRow(index)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    aria-label={`Delete piece ${index + 1}`}\r\n                  />\r\n                </Box>\r\n              ))}\r\n              <Text margin=\"15px 0px 15px 0px\">\r\n                Total Pieces: {totalPieces}\r\n              </Text>\r\n            </>\r\n          )}\r\n\r\n          <Hr\r\n            min-height=\"10px\"\r\n            min-width=\"100%\"\r\n            margin=\"15px 0px 15px 0px\"\r\n            border-color=\"--color-darkL2\"\r\n            width=\"1200px\"\r\n          />\r\n\r\n          {/* Deadline Section */}\r\n          <Text margin=\"15px 0px 15px 0px\">Deadline</Text>\r\n          <Input\r\n            type=\"date\"\r\n            value={deadlineDate.toISOString().split(\"T\")[0]}\r\n            onChange={(e) => {\r\n              setDeadlineDate(new Date(e.target.value));\r\n            }}\r\n            width=\"40%\"\r\n            background=\"white\"\r\n            padding=\"5px\"\r\n            margin=\"0 10px\"\r\n            required\r\n          />\r\n          <Hr\r\n            min-height=\"10px\"\r\n            min-width=\"100%\"\r\n            margin=\"15px 0px 15px 0px\"\r\n            border-color=\"--color-darkL2\"\r\n            width=\"1200px\"\r\n          />\r\n          {/* Submit Button */}\r\n          <Button\r\n            onClick={handleSubmitOrder}\r\n            margin=\"40px 0\"\r\n            background=\"#cb7731\"\r\n            color=\"white\"\r\n            padding=\"10px 20px\"\r\n            border-radius=\"7.5px\"\r\n          >\r\n            Submit Order\r\n          </Button>\r\n        </Box>\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","// Import necessary modules and components\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Hr,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Icon,\r\n  Select,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdDeleteSweep, MdNoteAdd, MdArrowBack } from \"react-icons/md\";\r\nimport {\r\n  fetchOrderById,\r\n  editOrderById,\r\n  uploadImage,\r\n  uploadAudio,\r\n  deleteImageFromStorage, // Import delete functions (to be implemented)\r\n  deleteAudioFromStorage, // Import delete functions (to be implemented)\r\n} from \"../utils/firebaseConfig\"; // Import Firebase functions\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { FaWhatsapp } from \"react-icons/fa\";\r\n\r\n// Helper function to extract the UUID from the URL query string\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\n// UUID generation function\r\nconst generateUUID = () => {\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  let result = \"\";\r\n  for (let i = 0; i < 7; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\r\n  }\r\n  return result;\r\n};\r\n\r\n// WhatsApp message sending function\r\nconst sendWhatsAppMessage = (phoneNumber, orderUUID) => {\r\n  const message = `Hi, your order with UUID: ${orderUUID} has been successfully placed.`;\r\n  console.log(\r\n    `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n      message\r\n    )}`\r\n  );\r\n  // Uncomment the lines below to enable WhatsApp message sending\r\n  // const whatsappAPIUrl = `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n  //   message\r\n  // )}`;\r\n  // window.open(whatsappAPIUrl, \"_blank\");\r\n};\r\n\r\n// Custom File Uploader Component\r\nconst FileUploader = ({ handleFile }) => {\r\n  const hiddenFileInput = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    handleFile(files);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"button-upload\"\r\n        onClick={handleClick}\r\n        margin=\"20px 0\"\r\n        background=\"#cb7731\"\r\n        color=\"white\"\r\n        padding=\"10px 20px\"\r\n        border-radius=\"7.5px\"\r\n      >\r\n        Upload Images\r\n      </Button>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleChange}\r\n        ref={hiddenFileInput}\r\n        style={{ display: \"none\" }}\r\n        multiple\r\n        accept=\"image/*\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// Audio Recorder Component with Deletion Capability\r\nconst AudioRecorder = ({\r\n  handleAudioUpload,\r\n  handleDeleteAudio,\r\n  audioLink,\r\n}) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunks = useRef([]);\r\n\r\n  const handleStartRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      mediaRecorderRef.current = mediaRecorder;\r\n\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        audioChunks.current.push(event.data);\r\n      };\r\n\r\n      mediaRecorder.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunks.current, { type: \"audio/wav\" });\r\n        const audioURL = await handleAudioUpload(audioBlob);\r\n        audioChunks.current = [];\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error accessing microphone:\", error);\r\n      alert(\"Error accessing microphone\");\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        margin=\"20px 0\"\r\n        background=\"#cb7731\"\r\n        color=\"white\"\r\n        padding=\"10px 20px\"\r\n        border-radius=\"7.5px\"\r\n        onClick={isRecording ? handleStopRecording : handleStartRecording}\r\n      >\r\n        {isRecording ? \"Stop Recording\" : \"Record Audio\"}\r\n      </Button>\r\n      {audioLink && (\r\n        <Box display=\"flex\" align-items=\"center\">\r\n          <audio controls>\r\n            <source src={audioLink} type=\"audio/wav\" />\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n          <Icon\r\n            category=\"md\"\r\n            icon={MdDeleteSweep}\r\n            size=\"24px\"\r\n            color=\"#ff0000\"\r\n            margin=\"0 0 0 10px\"\r\n            onClick={handleDeleteAudio}\r\n            style={{ cursor: \"pointer\" }}\r\n            aria-label=\"Delete Audio\"\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const uuid = query.get(\"uuid\"); // Extract UUID from URL\r\n  const [orderData, setOrderData] = useState(null); // To store fetched order data\r\n  const [pieces, setPieces] = useState([]); // For pieces list\r\n  const [progress, setProgress] = useState(\"\"); // To track the progress status\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n  const [error, setError] = useState(null); // Add error state\r\n  const [imageUrls, setImageUrls] = useState([]); // For storing image URLs\r\n  const [audioURL, setAudioURL] = useState(null); // For storing audio URLs\r\n  const [modalOpen, setModalOpen] = useState(false); // For modal state\r\n  const [modalImageUrl, setModalImageUrl] = useState(\"\"); // For the image in modal\r\n  const [deadline, setDeadline] = useState(\"\"); // For storing the deadline date\r\n\r\n  // Helper function to format dates\r\n  const convertToInputDateFormat = (dateString) => {\r\n    // Parse the date string, e.g., \"November 8, 2024\"\r\n    const parsedDate = new Date(dateString);\r\n\r\n    // Format as YYYY-MM-DD for input date compatibility\r\n    const year = parsedDate.getFullYear();\r\n    const month = `0${parsedDate.getMonth() + 1}`.slice(-2); // Months are zero-based\r\n    const day = `0${parsedDate.getDate()}`.slice(-2);\r\n\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Fetch order details on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (uuid) {\r\n          fetchOrderById(uuid, (data) => {\r\n            if (data) {\r\n              setOrderData(data);\r\n              setPieces(data?.pieces?.details || []);\r\n              setProgress(data?.progress || \"Pending\");\r\n              setImageUrls(data.images || []);\r\n              setAudioURL(data.audio_link || null);\r\n              setDeadline(convertToInputDateFormat(data.deadline_raw) || \"\"); // Set deadline if available\r\n            } else {\r\n              setError(\"Order not found or invalid UUID.\");\r\n            }\r\n            setLoading(false);\r\n          });\r\n        } else {\r\n          setError(\"Invalid order UUID.\");\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching order data.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [uuid]);\r\n\r\n  // Handle file upload for additional images\r\n  const handleFileUpload = async (files) => {\r\n    try {\r\n      const uploadedImageUrls = await Promise.all(\r\n        files.map((file) => uploadImage(file)) // Use uploadImage function\r\n      );\r\n      setImageUrls((prevUrls) => [...prevUrls, ...uploadedImageUrls]);\r\n    } catch (error) {\r\n      console.error(\"Error uploading images:\", error);\r\n      alert(\"Failed to upload images. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Handle audio upload\r\n  const handleAudioUpload = async (audioBlob) => {\r\n    try {\r\n      const audioLink = await uploadAudio(audioBlob);\r\n      setAudioURL(audioLink);\r\n      return audioLink;\r\n    } catch (error) {\r\n      console.error(\"Error uploading audio:\", error);\r\n      alert(\"Failed to upload audio. Please try again.\");\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  // Handle deleting an image\r\n  const handleDeleteImage = async (index) => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to delete this image? This action cannot be undone.\"\r\n      )\r\n    ) {\r\n      try {\r\n        const imageToDelete = imageUrls[index];\r\n        // If imageToDelete is a URL, extract the storage path if possible\r\n        // This depends on how your image URLs are structured\r\n        // Example: Assuming image URLs contain the storage path after a specific base URL\r\n        const storagePath = extractStoragePathFromURL(imageToDelete); // Implement this function based on your URL structure\r\n        if (storagePath) {\r\n          await deleteImageFromStorage(storagePath); // Implement deleteImageFromStorage in firebaseConfig.js\r\n        }\r\n        const updatedImages = imageUrls.filter((_, i) => i !== index);\r\n        setImageUrls(updatedImages);\r\n      } catch (error) {\r\n        console.error(\"Error deleting image:\", error);\r\n        alert(\"Failed to delete image. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Helper function to extract storage path from URL (Implementation depends on your storage setup)\r\n  const extractStoragePathFromURL = (url) => {\r\n    // Example implementation:\r\n    // Assuming your Firebase storage URLs are structured as:\r\n    // https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/path%2Fto%2Fimage.jpg?...\r\n    // You need to extract 'path/to/image.jpg'\r\n    try {\r\n      const baseURL = \"https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/\";\r\n      if (url.startsWith(baseURL)) {\r\n        const encodedPath = url.substring(baseURL.length, url.indexOf(\"?\"));\r\n        return decodeURIComponent(encodedPath);\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error extracting storage path:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Handle deleting audio\r\n  const handleDeleteAudio = async () => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to delete the audio recording? This action cannot be undone.\"\r\n      )\r\n    ) {\r\n      try {\r\n        if (audioURL) {\r\n          // Extract storage path from audio URL\r\n          const storagePath = extractStoragePathFromURL(audioURL); // Implement this function based on your URL structure\r\n          if (storagePath) {\r\n            await deleteAudioFromStorage(storagePath); // Implement deleteAudioFromStorage in firebaseConfig.js\r\n          }\r\n          setAudioURL(null);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error deleting audio:\", error);\r\n        alert(\"Failed to delete audio. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Audio Recorder Component with Deletion Capability\r\n  const AudioRecorderWithDeletion = ({\r\n    handleAudioUpload,\r\n    handleDeleteAudio,\r\n    audioLink,\r\n  }) => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const mediaRecorderRef = useRef(null);\r\n    const audioChunks = useRef([]);\r\n\r\n    const handleStartRecording = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const mediaRecorder = new MediaRecorder(stream);\r\n        mediaRecorderRef.current = mediaRecorder;\r\n\r\n        mediaRecorder.ondataavailable = (event) => {\r\n          audioChunks.current.push(event.data);\r\n        };\r\n\r\n        mediaRecorder.onstop = async () => {\r\n          const audioBlob = new Blob(audioChunks.current, { type: \"audio/wav\" });\r\n          const audioURL = await handleAudioUpload(audioBlob);\r\n          audioChunks.current = [];\r\n        };\r\n\r\n        mediaRecorder.start();\r\n        setIsRecording(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing microphone:\", error);\r\n        alert(\"Error accessing microphone\");\r\n      }\r\n    };\r\n\r\n    const handleStopRecording = () => {\r\n      if (mediaRecorderRef.current) {\r\n        mediaRecorderRef.current.stop();\r\n        setIsRecording(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          margin=\"20px 0\"\r\n          background=\"#cb7731\"\r\n          color=\"white\"\r\n          padding=\"10px 20px\"\r\n          border-radius=\"7.5px\"\r\n          onClick={isRecording ? handleStopRecording : handleStartRecording}\r\n        >\r\n          {isRecording ? \"Stop Recording\" : \"Record Audio\"}\r\n        </Button>\r\n        {audioLink && (\r\n          <Box display=\"flex\" align-items=\"center\">\r\n            <audio controls>\r\n              <source src={audioLink} type=\"audio/wav\" />\r\n              Your browser does not support the audio element.\r\n            </audio>\r\n            <Icon\r\n              category=\"md\"\r\n              icon={MdDeleteSweep}\r\n              size=\"24px\"\r\n              color=\"#ff0000\"\r\n              margin=\"0 0 0 10px\"\r\n              onClick={handleDeleteAudio}\r\n              style={{ cursor: \"pointer\" }}\r\n              aria-label=\"Delete Audio\"\r\n            />\r\n          </Box>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Function to format phone number for WhatsApp API\r\n  const formatPhoneNumber = (phone) => {\r\n    // Remove any non-digit characters\r\n    return phone.replace(/\\D/g, \"\");\r\n  };\r\n\r\n  // Handle WhatsApp click\r\n  const handleWhatsAppClick = () => {\r\n    const message = `Your order has been confirmed.\\nVisit https://internal.gundojus.in /#/orders/view?uuid=${uuid} to check the progress.\\n\\n- Sujatha Reddy`;\r\n    const phoneNumber = formatPhoneNumber(orderData.phone_number);\r\n    const url = `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n      message\r\n    )}`;\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  // Handle updating order data in Firebase\r\n  const handleSaveOrder = async () => {\r\n    try {\r\n      const convertToReadableDate = (inputDate) => {\r\n        // Parse the input date string\r\n        const date = new Date(inputDate);\r\n\r\n        // Array of month names\r\n        const monthNames = [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ];\r\n\r\n        // Get day, month, and year\r\n        const day = date.getDate();\r\n        const month = monthNames[date.getMonth()]; // Get the month name\r\n        const year = date.getFullYear();\r\n\r\n        return `${month} ${day}, ${year}`;\r\n      };\r\n\r\n      const updatedOrderData = {\r\n        ...orderData,\r\n        pieces: {\r\n          ...orderData.pieces,\r\n          details: pieces,\r\n          number_of_pieces: totalPieces,\r\n        },\r\n        progress,\r\n        images: imageUrls, // Include updated images array\r\n        audio_link: audioURL, // Include audio URL\r\n        deadline_raw: deadline, // Include deadline in YYYY-MM-DD format\r\n        deadline_formatted: convertToReadableDate(deadline), // Include deadline formatted\r\n      };\r\n      await editOrderById(uuid, updatedOrderData);\r\n      alert(\"Order updated successfully\");\r\n      history.push(\"/orders\");\r\n    } catch (err) {\r\n      console.error(\"Error updating order:\", err);\r\n      alert(\"Error updating order. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Open image in modal\r\n  const openImageInModal = (url) => {\r\n    setModalImageUrl(url);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Close modal\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setModalImageUrl(\"\");\r\n  };\r\n\r\n  // Handle adding a new piece row\r\n  const addPieceRow = () => {\r\n    setPieces([...pieces, { type: \"Blouse\", quantity: 1, remarks: \"\" }]);\r\n  };\r\n\r\n  // Handle removing a piece row\r\n  const removePieceRow = (index) => {\r\n    setPieces(pieces.filter((_, i) => i !== index));\r\n  };\r\n\r\n  // Handle piece type change\r\n  const handleTypeChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, type: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  // Handle piece quantity change\r\n  const handleQuantityChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, quantity: Number(value) } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  // Handle piece remarks change\r\n  const handleRemarksChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, remarks: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  // Calculate total pieces\r\n  const totalPieces = pieces.reduce((acc, piece) => acc + piece.quantity, 0);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"orders-edit\"} />\r\n        <Helmet>\r\n          <title>Edit Order</title>\r\n          <link\r\n            rel={\"shortcut icon\"}\r\n            href={\"https://i.imgur.com/crcVWqA.png\"}\r\n            type={\"image/x-icon\"}\r\n          />\r\n        </Helmet>\r\n        <Section padding=\"90px 0 100px 0\" quarkly-title=\"Schedule-5\">\r\n          <Text>Loading...</Text>\r\n        </Section>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"orders-edit\"} />\r\n        <Helmet>\r\n          <title>Edit Order</title>\r\n          <link\r\n            rel={\"shortcut icon\"}\r\n            href={\"https://i.imgur.com/crcVWqA.png\"}\r\n            type={\"image/x-icon\"}\r\n          />\r\n        </Helmet>\r\n        <Section padding=\"90px 0 100px 0\" quarkly-title=\"Schedule-5\">\r\n          <Text>{error}</Text>\r\n        </Section>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-edit\"} />\r\n      <Helmet>\r\n        <title>Edit Order</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://i.imgur.com/crcVWqA.png\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      {/* Main Content */}\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Schedule-5\">\r\n        {/* Begin Fixed-Width Container */}\r\n        <Box\r\n          min-width=\"1200px\"\r\n          overflow=\"auto\"\r\n          margin=\"0 auto\"\r\n          padding=\"0 10px\" // Optional: Add horizontal padding\r\n        >\r\n          {/* Header Section */}\r\n          <Box\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            justify-content=\"center\"\r\n            position=\"relative\"\r\n          >\r\n            <Icon\r\n              category=\"md\"\r\n              icon={MdArrowBack}\r\n              size=\"40px\"\r\n              margin=\"16px\"\r\n              padding=\"0px 0px 16px 0px\"\r\n              onClick={() => history.push(\"/orders\")}\r\n              style={{ cursor: \"pointer\", position: \"absolute\", left: \"0\" }}\r\n              aria-label=\"Back to Orders\"\r\n            />\r\n            <Text\r\n              margin=\"0px 0px 20px 0px\"\r\n              text-align=\"center\"\r\n              font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n              color=\"--dark\"\r\n              sm-margin=\"0px 0px 30px 0px\"\r\n            >\r\n              Edit Order\r\n            </Text>\r\n          </Box>\r\n\r\n          <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n            {/* Customer Name */}\r\n            <Box display=\"flex\" align-items=\"center\" margin=\"15px 0px 15px 0px\">\r\n              <Text margin=\"0\">Customer Name</Text>\r\n              <FaWhatsapp\r\n                size=\"24px\"\r\n                style={{ cursor: \"pointer\", marginLeft: \"10px\" }}\r\n                onClick={handleWhatsAppClick}\r\n                aria-label=\"Send WhatsApp Message\"\r\n              />\r\n            </Box>\r\n            <Input\r\n              display=\"block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              width=\"50%\"\r\n              value={orderData.customer_name || \"\"}\r\n              readOnly\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Phone Number */}\r\n            <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n            <Input\r\n              display=\"block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              width=\"50%\"\r\n              value={orderData.phone_number || \"\"}\r\n              readOnly\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Progress */}\r\n            <Text margin=\"15px 0px 15px 0px\">Progress</Text>\r\n            <Select\r\n              value={progress}\r\n              onChange={(e) => setProgress(e.target.value)}\r\n              background=\"white\"\r\n              width=\"50%\"\r\n              padding=\"5px\"\r\n              border-radius=\"7.5px\"\r\n            >\r\n              <option value=\"Pending\">Pending</option>\r\n              <option value=\"In Progress\">In Progress</option>\r\n              <option value=\"Completed\">Completed</option>\r\n            </Select>\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Pieces Section */}\r\n            <Box\r\n              display=\"flex\"\r\n              align-items=\"center\"\r\n              justify-content=\"space-between\"\r\n            >\r\n              <Text margin=\"15px 0px 15px 0px\">Add Pieces</Text>\r\n              <Icon\r\n                category=\"md\"\r\n                icon={MdNoteAdd}\r\n                size=\"32px\"\r\n                margin=\"16px 0px 16px 0px\"\r\n                onClick={addPieceRow}\r\n                style={{ cursor: \"pointer\" }}\r\n                aria-label=\"Add Piece\"\r\n              />\r\n            </Box>\r\n            {pieces.length > 0 && (\r\n              <>\r\n                {pieces.map((piece, index) => (\r\n                  <Box\r\n                    key={index}\r\n                    display=\"flex\"\r\n                    align-items=\"center\"\r\n                    margin=\"10px 0\"\r\n                  >\r\n                    <Text width=\"5%\" textAlign=\"center\">\r\n                      {index + 1}\r\n                    </Text>\r\n                    <Select\r\n                      value={piece.type}\r\n                      onChange={(e) => handleTypeChange(index, e.target.value)}\r\n                      background=\"white\"\r\n                      width=\"20%\"\r\n                      padding=\"5px\"\r\n                      margin=\"0 10px\"\r\n                    >\r\n                      <option value=\"Blouse\">Blouse</option>\r\n                      <option value=\"Lehenga\">Lehenga</option>\r\n                      <option value=\"Dress\">Dress</option>\r\n                      <option value=\"Peticoat\">Peticoat</option>\r\n                    </Select>\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={piece.quantity}\r\n                      onChange={(e) => handleQuantityChange(index, e.target.value)}\r\n                      width=\"20%\"\r\n                      min=\"1\"\r\n                      background=\"white\"\r\n                      padding=\"5px\"\r\n                      margin=\"0 10px\"\r\n                    />\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Remarks\"\r\n                      value={piece.remarks}\r\n                      onChange={(e) => handleRemarksChange(index, e.target.value)}\r\n                      width=\"40%\"\r\n                      background=\"white\"\r\n                      padding=\"5px\"\r\n                      margin=\"0 10px\"\r\n                    />\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"24px\"\r\n                      color=\"#ff0000\"\r\n                      onClick={() => removePieceRow(index)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      aria-label={`Delete Piece ${index + 1}`}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n                <Text margin=\"15px 0px 15px 0px\">\r\n                  Total Pieces: {totalPieces}\r\n                </Text>\r\n              </>\r\n            )}\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Images Section */}\r\n            <Text margin=\"15px 0px 15px 0px\">Images</Text>\r\n            <FileUploader handleFile={handleFileUpload} />\r\n            {imageUrls.length > 0 && (\r\n              <Box\r\n                display=\"grid\"\r\n                grid-template-columns={`repeat(${Math.min(\r\n                  imageUrls.length,\r\n                  4\r\n                )}, 225px)`}\r\n                grid-auto-rows=\"225px\"\r\n                grid-gap=\"15px\"\r\n                width={`${\r\n                  Math.min(imageUrls.length, 4) * 225 +\r\n                  (Math.min(imageUrls.length, 4) - 1) * 15\r\n                }px`}\r\n                overflow=\"auto\"\r\n                padding=\"15px\"\r\n                border=\"1px solid #ccc\"\r\n                margin=\"15px 0\"\r\n              >\r\n                {imageUrls.map((url, index) => (\r\n                  <Box\r\n                    key={index}\r\n                    as=\"div\"\r\n                    position=\"relative\" // To position the delete icon\r\n                  >\r\n                    {/* Image Thumbnail */}\r\n                    <Box\r\n                      as=\"img\"\r\n                      src={url}\r\n                      width=\"225px\"\r\n                      height=\"225px\"\r\n                      object-fit=\"cover\"\r\n                      border-radius=\"5px\"\r\n                      onClick={() => openImageInModal(url)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      alt={`Order Image ${index + 1}`}\r\n                    />\r\n                    {/* Delete Icon */}\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"24px\"\r\n                      color=\"#ff0000\"\r\n                      position=\"absolute\"\r\n                      top=\"5px\"\r\n                      right=\"5px\"\r\n                      onClick={() => handleDeleteImage(index)}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"rgba(255,255,255,0.7)\",\r\n                        borderRadius: \"50%\",\r\n                      }}\r\n                      aria-label={`Delete Image ${index + 1}`}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            )}\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Audio Recording Section */}\r\n            <Text margin=\"15px 0px 15px 0px\">Audio</Text>\r\n            <AudioRecorderWithDeletion\r\n              handleAudioUpload={handleAudioUpload}\r\n              handleDeleteAudio={handleDeleteAudio}\r\n              audioLink={audioURL}\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Deadline Section */}\r\n            <Text margin=\"15px 0px 15px 0px\">Deadline</Text>\r\n            <Input\r\n              type=\"date\"\r\n              value={deadline}\r\n              onChange={(e) => {\r\n                setDeadline(e.target.value);\r\n              }}\r\n              width=\"40%\"\r\n              background=\"white\"\r\n              padding=\"5px\"\r\n              margin=\"0 10px\"\r\n              required\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Save Button */}\r\n            <Button\r\n              onClick={handleSaveOrder}\r\n              margin=\"40px 0\"\r\n              background=\"#cb7731\"\r\n              color=\"white\"\r\n              padding=\"10px 20px\"\r\n              border-radius=\"7.5px\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </Box>\r\n          {/* End Fixed-Width Container */}\r\n        </Box>\r\n\r\n        {/* Image Modal */}\r\n        {modalOpen && (\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              backgroundColor: \"rgba(0,0,0,0.8)\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              zIndex: 1000,\r\n            }}\r\n            onClick={closeModal}\r\n          >\r\n            <img\r\n              src={modalImageUrl}\r\n              alt=\"Full Size\"\r\n              style={{ maxHeight: \"90%\", maxWidth: \"90%\" }}\r\n              onClick={(e) => e.stopPropagation()}\r\n            />\r\n          </div>\r\n        )}\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Text, Input, Box, Section, Hr } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { fetchOrderById } from \"../utils/firebaseConfig\"; // Import the function to fetch order data from Firebase\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\"; // Import ProgressBar\r\n\r\n// Helper function to extract UUID from the URL\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\n// Function to get progress color based on status\r\nconst getProgressColor = (progress) => {\r\n  if (progress === \"Completed\") return \"#31a931\"; // Green for completed\r\n  if (progress === \"In Progress\") return \"#ffaa00\"; // Orange for in progress\r\n  return \"#ff0000\"; // Red for others (e.g., Pending)\r\n};\r\n\r\nexport default () => {\r\n  const query = useQuery();\r\n  const uuid = query.get(\"uuid\"); // Extract UUID from URL\r\n  const [orderData, setOrderData] = useState(null); // To store the fetched order data\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n  const [error, setError] = useState(null); // Add error state\r\n\r\n  // Fetch order details on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (uuid) {\r\n          fetchOrderById(uuid, (data) => {\r\n            if (data) {\r\n              setOrderData(data); // Set the fetched data into state\r\n            } else {\r\n              setError(\"Order not found.\");\r\n            }\r\n            setLoading(false);\r\n          });\r\n        } else {\r\n          setError(\"Invalid order UUID.\");\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching order data.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [uuid]);\r\n\r\n  // Show loading message if data is not yet fetched\r\n  if (loading) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"orders-view\"} />\r\n        <Text>Loading order details...</Text>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"orders-view\"} />\r\n        <Text>{error}</Text> {/* Display error if occurred */}\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  // Map the progress to numeric values for progress bar\r\n  const progressLevels = {\r\n    Pending: 0,\r\n    \"In Progress\": 50,\r\n    Completed: 100,\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-view\"} />\r\n      <Helmet>\r\n        <title>View Order</title><link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://i.imgur.com/crcVWqA.png\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"View-Order\">\r\n        <Box\r\n          display=\"flex\"\r\n          align-items=\"center\"\r\n          justify-content=\"center\"\r\n          position=\"relative\"\r\n        >\r\n          <Text\r\n            margin=\"0px 0px 20px 0px\"\r\n            text-align=\"center\"\r\n            font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n            color=\"--dark\"\r\n            sm-margin=\"0px 0px 30px 0px\"\r\n          >\r\n            Order Details\r\n          </Text>\r\n        </Box>\r\n\r\n        {/* Customer Information Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Customer Name</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.customer_name || \"\"}\r\n            readOnly\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.phone_number || \"\"}\r\n            readOnly\r\n          />\r\n        </Box>\r\n\r\n        {/* Horizontal Rule */}\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Order Information Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Order Creation Date</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.orderCreationDate || \"\"}\r\n            readOnly\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Order Creation Time</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.orderCreationTime || \"\"}\r\n            readOnly\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Deadline</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.deadline || \"\"}\r\n            readOnly\r\n          />\r\n        </Box>\r\n\r\n        {/* Horizontal Rule */}\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Pieces Information Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Pieces</Text>\r\n          {orderData.pieces?.details?.map((piece, index) => (\r\n            <Box key={index} display=\"flex\" align-items=\"center\" margin=\"5px 0\">\r\n              <Text width=\"200px\">{piece.type}</Text>\r\n              <Text>Quantity: {piece.quantity}</Text>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n\r\n        {/* Horizontal Rule */}\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Progress Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Progress</Text>\r\n          <ProgressBar\r\n            completed={progressLevels[orderData.progress] || 0}\r\n            bgColor={getProgressColor(orderData.progress)}\r\n            labelAlignment=\"center\"\r\n            labelColor=\"#ffffff\"\r\n            width=\"50%\"\r\n          />\r\n        </Box>\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Select,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { getDatabase, ref as dbRef, push, set } from \"firebase/database\"; // Firebase database imports\r\nimport { NavBar } from \"../utils/navbar\";\r\n// Firebase configuration is initialized elsewhere in firebaseConfig.js\r\n\r\n// Function to add a new user to the database\r\nconst addUserToDatabase = async (email, password, role) => {\r\n  const db = getDatabase();\r\n  const usersRef = dbRef(db, \"users\");\r\n  const newUserRef = push(usersRef);\r\n  await set(newUserRef, {\r\n    email,\r\n    password,\r\n    role,\r\n  });\r\n  alert(\"User added successfully\");\r\n};\r\n\r\nexport default () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"manager\"); // Default role is set to manager\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!email || !password) {\r\n      alert(\"Please fill in both email and password\");\r\n      return;\r\n    }\r\n    addUserToDatabase(email, password, role); // Call the function to add user\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setRole(\"manager\");\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"sudo-add-users\"} />\r\n      <Helmet>\r\n        <title>Add New User</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://i.imgur.com/crcVWqA.png\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"Add Users\"} />\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Add-User\">\r\n        <Box\r\n          display=\"flex\"\r\n          align-items=\"center\"\r\n          justify-content=\"center\"\r\n          position=\"relative\"\r\n        >\r\n          <Text\r\n            margin=\"0px 0px 20px 0px\"\r\n            text-align=\"center\"\r\n            font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n            color=\"--dark\"\r\n            sm-margin=\"0px 0px 30px 0px\"\r\n          >\r\n            Add New User\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Email</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Password</Text>\r\n          <Input\r\n            type=\"password\"\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Role</Text>\r\n          <Select\r\n            value={role}\r\n            onChange={(e) => setRole(e.target.value)}\r\n            background=\"white\"\r\n            width=\"50%\"\r\n            padding=\"5px\"\r\n            border-radius=\"7.5px\"\r\n          >\r\n            <option value=\"manager\">Manager</option>\r\n            <option value=\"sudo\">Sudo</option>\r\n          </Select>\r\n          <br />\r\n          <Button\r\n            onClick={handleSubmit}\r\n            margin=\"40px 0\"\r\n            background=\"#cb7731\"\r\n            color=\"white\"\r\n            padding=\"10px 20px\"\r\n            border-radius=\"7.5px\"\r\n          >\r\n            Add User\r\n          </Button>\r\n        </Box>\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Link, Text, Box, Section } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { RawHtml, Override } from \"@quarkly/components\";\r\nexport default (() => {\r\n\treturn <Theme theme={theme}>\r\n\t\t<GlobalQuarklyPageStyles pageUrl={\"404\"} />\r\n\t\t<Helmet>\r\n\t\t\t<title>\r\n\t\t\t\tError 404\r\n\t\t\t</title><link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://i.imgur.com/crcVWqA.png\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n\t\t</Helmet>\r\n\t\t<Section padding=\"88px 0 88px 0\" min-height=\"100vh\" quarkly-title=\"404-1\">\r\n\t\t\t<Override slot=\"SectionContent\" max-width=\"1220px\" justify-content=\"center\" />\r\n\t\t\t<Box align-items=\"center\" display=\"flex\" justify-content=\"center\" flex-direction=\"column\">\r\n\t\t\t\t<Text margin=\"0px 0px 0px 0px\" font=\"--headline3\" color=\"--primary\">\r\n\t\t\t\t\t404\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tcolor=\"--dark\"\r\n\t\t\t\t\tmargin=\"8px 0px 16px 0px\"\r\n\t\t\t\t\tsm-font=\"normal 700 42px/1.2 &quot;Source Sans Pro&quot;, sans-serif\"\r\n\t\t\t\t\tfont=\"--headline1\"\r\n\t\t\t\t\tletter-spacing=\"-0.025em\"\r\n\t\t\t\t>\r\n\t\t\t\t\tPage not found\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tlg-width=\"80%\"\r\n\t\t\t\t\tfont=\"--lead\"\r\n\t\t\t\t\tcolor=\"--dark\"\r\n\t\t\t\t\tmargin=\"0px 0px 40px 0px\"\r\n\t\t\t\t\ttext-align=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSorry, we couldn’t find the page you’re looking for.\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tfont=\"--lead\"\r\n\t\t\t\t\tpadding=\"12px 24px 12px 24px\"\r\n\t\t\t\t\tbackground=\"--color-primary\"\r\n\t\t\t\t\tborder-radius=\"8px\"\r\n\t\t\t\t\thref=\"/\"\r\n\t\t\t\t\ttext-decoration-line=\"initial\"\r\n\t\t\t\t\tcolor=\"--light\"\r\n\t\t\t\t\ttransition=\"--opacityOut\"\r\n\t\t\t\t\thover-opacity=\"0.7\"\r\n\t\t\t\t>\r\n\t\t\t\t\tGo back to home\r\n\t\t\t\t</Link>\r\n\t\t\t</Box>\r\n\t\t</Section>\r\n\t\t\r\n\t\t<RawHtml>\r\n\t\t\t<style place={\"endOfHead\"} rawKey={\"66f6d1359710450018a331b3\"}>\r\n\t\t\t\t{\":root {\\n  box-sizing: border-box;\\n}\\n\\n* {\\n  box-sizing: inherit;\\n}\"}\r\n\t\t\t</style>\r\n\t\t</RawHtml>\r\n\t</Theme>;\r\n});","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Text, Theme, Section, Hr } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport theme from \"theme\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./mobile-month-view.css\";\r\nimport { fetchOrdersByDate } from \"../utils/firebaseConfig\";\r\nimport { NavBar } from \"../utils/navbar\";\r\n\r\nconst CalendarPage = () => {\r\n  const [myEvents, setEvents] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [toastMessage, setToastMessage] = useState(null);\r\n\r\n  // Function to format date as YYYY-MM-DD based on local timezone\r\n  const formatDateLocal = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = `0${date.getMonth() + 1}`.slice(-2); // Months are zero-based\r\n    const day = `0${date.getDate()}`.slice(-2);\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Function to determine the color based on progress status\r\n  const getStatusColor = (progress) => {\r\n    if (progress === \"Completed\") return \"#31a931\"; // Green for completed\r\n    if (progress === \"In Progress\") return \"#ffaa00\"; // Orange for in progress\r\n    return \"#ff0000\"; // Red for pending or other statuses\r\n  };\r\n\r\n  // Function to load orders for all dates in the current month\r\n  const loadEventsForMonth = async (date) => {\r\n    const startOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const endOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n\r\n    // Generate all dates in the current month in 'YYYY-MM-DD' format\r\n    const datesInMonth = [];\r\n    for (\r\n      let d = new Date(startOfMonth);\r\n      d <= endOfMonth;\r\n      d.setDate(d.getDate() + 1)\r\n    ) {\r\n      datesInMonth.push(formatDateLocal(new Date(d)));\r\n    }\r\n\r\n    // Fetch orders for each date\r\n    const allOrders = [];\r\n    for (const dateStr of datesInMonth) {\r\n      const orders = await fetchOrdersByDate(dateStr);\r\n      if (orders.length > 0) {\r\n        allOrders.push(...orders);\r\n      }\r\n    }\r\n\r\n    setEvents(allOrders);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load events when the component mounts and whenever the month changes\r\n    loadEventsForMonth(selectedDate);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  // Function to filter events for the selected date\r\n  const getEventsForDate = (date) => {\r\n    const formattedDate = formatDateLocal(date); // \"YYYY-MM-DD\"\r\n    return myEvents.filter((event) => event.deadline_raw === formattedDate);\r\n  };\r\n\r\n  // Function to handle date selection\r\n  const onDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    const events = getEventsForDate(date);\r\n    // Filter out completed orders\r\n    const pendingEvents = events.filter(\r\n      (event) => event.progress !== \"Completed\"\r\n    );\r\n    if (pendingEvents.length > 0) {\r\n      const totalPieces = pendingEvents.reduce(\r\n        (sum, event) => sum + event.pieces.number_of_pieces,\r\n        0\r\n      );\r\n      setToastMessage(\r\n        `You have ${pendingEvents.length} pending order(s) with a total of ${totalPieces} piece(s) on ${date.toDateString()}`\r\n      );\r\n    } else {\r\n      setToastMessage(\"No pending orders on this day\");\r\n    }\r\n  };\r\n\r\n  // Function to add markers on dates with pending or in-progress events\r\n  const tileContent = ({ date, view }) => {\r\n    if (view === \"month\") {\r\n      const events = getEventsForDate(date);\r\n      const hasPending = events.some(\r\n        (event) => event.progress !== \"Completed\"\r\n      );\r\n      if (hasPending) {\r\n        return (\r\n          <Box\r\n            width=\"8px\"\r\n            height=\"8px\"\r\n            borderRadius=\"50%\"\r\n            background=\"red\"\r\n            margin=\"0 auto\"\r\n            marginTop=\"2px\"\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <Helmet>\r\n        <title>Calendar</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://i.imgur.com/crcVWqA.png\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      {/* Navigation Header */}\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"Calendar\"} />\r\n\r\n      {/* Main Calendar Content */}\r\n      <Section padding=\"20px 0 20px 0\">\r\n        <Text\r\n          font=\"normal 500 48px/1.2 --fontFamily-serifGeorgia\"\r\n          text-align=\"center\"\r\n        >\r\n          Calendar\r\n        </Text>\r\n\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          {/* Centered Calendar */}\r\n          <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\r\n            <Calendar\r\n              onChange={onDateChange}\r\n              value={selectedDate}\r\n              tileContent={tileContent}\r\n              onActiveStartDateChange={({ activeStartDate }) =>\r\n                loadEventsForMonth(activeStartDate)\r\n              }\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Section>\r\n      <Section padding=\"20px 0 0px 0\">\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          {/* Conditionally render the table only if there are events */}\r\n          {getEventsForDate(selectedDate).length > 0 && (\r\n            <Box marginTop=\"30px\" width=\"100%\">\r\n              <Box\r\n                as=\"table\"\r\n                width=\"100%\"\r\n                borderCollapse=\"collapse\"\r\n                marginTop=\"30px\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Customer Name\r\n                    </th>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Pieces\r\n                    </th>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Created On\r\n                    </th>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Progress\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getEventsForDate(selectedDate).map((event, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                        {event.customer_name}\r\n                      </td>\r\n                      <td style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                        {event.pieces.number_of_pieces}\r\n                      </td>\r\n                      <td style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                        {event.orderCreationDate}\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          padding: \"10px\",\r\n                          textAlign: \"left\",\r\n                          color: getStatusColor(event.progress),\r\n                        }}\r\n                      >\r\n                        {event.progress}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Toast Notification */}\r\n        {toastMessage && (\r\n          <Box\r\n            background=\"--color-lightD2\"\r\n            padding=\"10px\"\r\n            borderRadius=\"5px\"\r\n            textAlign=\"center\"\r\n            marginTop=\"20px\"\r\n            onClick={() => setToastMessage(null)} // Close toast on click\r\n            cursor=\"pointer\"\r\n          >\r\n            {toastMessage}\r\n          </Box>\r\n        )}\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n\r\nexport default CalendarPage;\r\n","// Import necessary modules and components\r\nimport React, { useState, useRef } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Hr,\r\n  Icon,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\"; // Firebase database imports\r\nimport { NavBar } from \"../utils/navbar\"; // Import your NavBar component\r\nimport {\r\n  uploadImage,\r\n  addCustomerToDatabase,\r\n  deleteImageFromStorage, // Import delete function (to be implemented)\r\n} from \"../utils/firebaseConfig\"; // Import the uploadImage function\r\nimport { MdDeleteSweep, MdArrowBack } from \"react-icons/md\"; // Import Delete Icon\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// The main component for adding a new customer\r\nexport default () => {\r\n  const history = useHistory();\r\n  // State variables for customer information\r\n  const [customerName, setCustomerName] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"+91\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [images, setImages] = useState([]); // For storing measurement images\r\n\r\n  // Function to handle file uploads for measurements\r\n  const handleFileUpload = async (files) => {\r\n    try {\r\n      const uploadedImageUrls = await Promise.all(\r\n        files.map((file) => uploadImage(file)) // Use uploadImage function from firebaseConfig.js\r\n      );\r\n      setImages((prevImages) => [...prevImages, ...uploadedImageUrls]); // Store URLs in state\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n      alert(\"Failed to upload images. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Function to handle deleting an image\r\n  const handleDeleteImage = async (index) => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to delete this measurement image? This action cannot be undone.\"\r\n      )\r\n    ) {\r\n      try {\r\n        const imageToDelete = images[index];\r\n        // Extract storage path from image URL\r\n        const storagePath = extractStoragePathFromURL(imageToDelete); // Implement based on your URL structure\r\n        if (storagePath) {\r\n          await deleteImageFromStorage(storagePath); // Implement deleteImageFromStorage in firebaseConfig.js\r\n        }\r\n        const updatedImages = images.filter((_, i) => i !== index);\r\n        setImages(updatedImages);\r\n      } catch (error) {\r\n        console.error(\"Error deleting image:\", error);\r\n        alert(\"Failed to delete image. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Helper function to extract storage path from URL (Implementation depends on your storage setup)\r\n  const extractStoragePathFromURL = (url) => {\r\n    // Example implementation:\r\n    // Assuming your Firebase storage URLs are structured as:\r\n    // https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/path%2Fto%2Fimage.jpg?...\r\n    // You need to extract 'path/to/image.jpg'\r\n    try {\r\n      const baseURL = \"https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/\";\r\n      if (url.startsWith(baseURL)) {\r\n        const encodedPath = url.substring(baseURL.length, url.indexOf(\"?\"));\r\n        return decodeURIComponent(encodedPath);\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error extracting storage path:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // FileUploader component for uploading images\r\n  const FileUploader = ({ handleFile }) => {\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const handleClick = () => {\r\n      hiddenFileInput.current.click();\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n      const files = Array.from(event.target.files);\r\n      handleFile(files);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          className=\"button-upload\"\r\n          onClick={handleClick}\r\n          margin=\"20px 0\"\r\n          background=\"#cb7731\"\r\n          color=\"white\"\r\n          padding=\"10px 20px\"\r\n          border-radius=\"7.5px\"\r\n        >\r\n          Upload Measurements\r\n        </Button>\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleChange}\r\n          ref={hiddenFileInput}\r\n          style={{ display: \"none\" }}\r\n          multiple\r\n          accept=\"image/*\"\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Function to add the customer to Firebase Realtime Database\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!customerName || !phoneNumber) {\r\n      alert(\"Please fill in customer name and phone number\");\r\n      return;\r\n    }\r\n    const fullPhoneNumber = `${countryCode}${phoneNumber}`;\r\n    try {\r\n      await addCustomerToDatabase(customerName, fullPhoneNumber, images);\r\n      // Reset form fields after successful submission\r\n      setCustomerName(\"\");\r\n      setPhoneNumber(\"\");\r\n      setCountryCode(\"+91\");\r\n      setImages([]);\r\n      alert(\"Customer added successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error adding customer:\", error);\r\n      alert(\"Failed to add customer. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"add-customer\"} />\r\n      <Helmet>\r\n        <title>Add New Customer</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://i.imgur.com/crcVWqA.png\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      {/* Navigation Bar */}\r\n      <NavBar />\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Add-Customer\">\r\n      \r\n        <Box\r\n          display=\"flex\"\r\n          align-items=\"center\"\r\n          justify-content=\"center\"\r\n          position=\"relative\"\r\n        >\r\n          <Icon\r\n            category=\"md\"\r\n            icon={MdArrowBack}\r\n            size=\"40px\"\r\n            margin=\"16px\"\r\n            padding=\"0px 0px 16px 0px\"\r\n            onClick={() => history.push(\"/customers/view\")}\r\n            style={{ cursor: \"pointer\", position: \"absolute\", left: \"0\" }}\r\n            aria-label=\"Back to Orders\"\r\n          />\r\n          <Text\r\n            margin=\"0px 0px 20px 0px\"\r\n            text-align=\"center\"\r\n            font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n            color=\"--dark\"\r\n            sm-margin=\"0px 0px 30px 0px\"\r\n          >\r\n            Add New Customer\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          {/* Customer Name Input */}\r\n          <Text margin=\"15px 0px 15px 0px\">Customer Name</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            required\r\n            value={customerName}\r\n            onChange={(e) => setCustomerName(e.target.value)}\r\n            aria-label=\"Customer Name\"\r\n          />\r\n\r\n          {/* Phone Number Input */}\r\n          <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n          <Box\r\n            min-width=\"100px\"\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            padding=\"15px 0px 15px 0px\"\r\n          >\r\n            <Input\r\n              display=\"inline-block\"\r\n              background=\"white\"\r\n              value={countryCode}\r\n              border-color=\"--color-darkL2\"\r\n              width=\"5%\"\r\n              padding=\"6px 8px\"\r\n              border-radius=\"7.5px\"\r\n              margin=\"0px 4px 0px 0px\"\r\n              required\r\n              onChange={(e) => setCountryCode(e.target.value)}\r\n              aria-label=\"Country Code\"\r\n            />\r\n            <Input\r\n              display=\"inline-block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              required\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n              aria-label=\"Phone Number\"\r\n            />\r\n          </Box>\r\n\r\n          {/* Measurements Upload */}\r\n          <Text margin=\"15px 0px 15px 0px\">Measurements</Text>\r\n          <FileUploader handleFile={handleFileUpload} />\r\n          {images.length > 0 && (\r\n            <Box\r\n              display=\"grid\"\r\n              grid-template-columns={`repeat(${Math.min(images.length, 4)}, 225px)`}\r\n              grid-auto-rows=\"225px\"\r\n              grid-gap=\"15px\"\r\n              width={`${\r\n                Math.min(images.length, 4) * 225 +\r\n                (Math.min(images.length, 4) - 1) * 15\r\n              }px`}\r\n              overflow=\"auto\"\r\n              padding=\"15px\"\r\n              border=\"1px solid #ccc\"\r\n              margin=\"15px 0\"\r\n            >\r\n              {images.map((image, index) => (\r\n                <Box\r\n                  key={index}\r\n                  as=\"div\"\r\n                  position=\"relative\" // To position the delete icon\r\n                >\r\n                  {/* Measurement Image Thumbnail */}\r\n                  <Box\r\n                    as=\"img\"\r\n                    src={image}\r\n                    width=\"225px\"\r\n                    height=\"225px\"\r\n                    object-fit=\"cover\"\r\n                    border-radius=\"5px\"\r\n                    onClick={() => window.open(image, \"_blank\")}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    alt={`Measurement Image ${index + 1}`}\r\n                  />\r\n                  {/* Delete Icon */}\r\n                  <Icon\r\n                    category=\"md\"\r\n                    icon={MdDeleteSweep}\r\n                    size=\"24px\"\r\n                    color=\"#ff0000\"\r\n                    position=\"absolute\"\r\n                    top=\"5px\"\r\n                    right=\"5px\"\r\n                    onClick={() => handleDeleteImage(index)}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      backgroundColor: \"rgba(255,255,255,0.7)\",\r\n                      borderRadius: \"50%\",\r\n                    }}\r\n                    aria-label={`Delete Measurement Image ${index + 1}`}\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          )}\r\n\r\n          {/* Horizontal Rule */}\r\n          <Hr\r\n            min-height=\"10px\"\r\n            min-width=\"100%\"\r\n            margin=\"15px 0px 15px 0px\"\r\n            border-color=\"--color-darkL2\"\r\n            width=\"1200px\"\r\n          />\r\n\r\n          {/* Submit Button */}\r\n          <Button\r\n            onClick={handleSubmit}\r\n            margin=\"40px 0\"\r\n            background=\"#cb7731\"\r\n            color=\"white\"\r\n            padding=\"10px 20px\"\r\n            border-radius=\"7.5px\"\r\n            aria-label=\"Add Customer\"\r\n          >\r\n            Add Customer\r\n          </Button>\r\n        </Box>\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","// CustomersList.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Text, Icon, Box, Section, Strong, Input } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdCreate, MdDeleteSweep, MdPersonAdd } from \"react-icons/md\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDatabase, ref as dbRef, onValue } from \"firebase/database\";\r\nimport { deleteCustomerById } from \"../utils/firebaseConfig\";\r\nimport { NavBar } from \"../utils/navbar\";\r\n\r\nconst fetchCustomers = (setCustomers) => {\r\n  const db = getDatabase();\r\n  const customersRef = dbRef(db, \"customers\");\r\n\r\n  onValue(customersRef, (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data) {\r\n      const customersArray = Object.keys(data).map((key) => ({\r\n        uuid: key,\r\n        ...data[key],\r\n      }));\r\n      setCustomers(customersArray);\r\n    } else {\r\n      setCustomers([]); // No customers found\r\n    }\r\n  });\r\n};\r\n\r\nconst deleteCustomer = async (uuid) => {\r\n  try {\r\n    await deleteCustomerById(uuid);\r\n    window.location.reload(); // Reload the page after deletion\r\n  } catch (error) {\r\n    console.error(\"Error deleting customer: \", error);\r\n    alert(\"Failed to delete the customer. Please try again.\");\r\n  }\r\n};\r\n\r\nexport default () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // State for search input\r\n  const history = useHistory();\r\n\r\n  // Fetch all customers on component mount\r\n  useEffect(() => {\r\n    fetchCustomers(setCustomers);\r\n  }, []);\r\n\r\n  // Handle editing a customer\r\n  const editCustomer = (uuid) => {\r\n    history.push(`/customers/edit?uuid=${uuid}`);\r\n  };\r\n\r\n  // Handle deleting a customer\r\n  const handleDelete = (uuid) => {\r\n    if (window.confirm(\"Are you sure you want to delete this customer?\")) {\r\n      deleteCustomer(uuid);\r\n    }\r\n  };\r\n\r\n  // Navigate to Add Customer page\r\n  const addCustomer = () => {\r\n    history.push(\"/customers/add\");\r\n  };\r\n\r\n  // Function to normalize phone numbers (remove non-digit characters)\r\n  const normalizePhoneNumber = (phone) => {\r\n    return String(phone).replace(/\\D/g, \"\");\r\n  };\r\n\r\n  // Filter customers based on search term\r\n  const filteredCustomers = customers.filter((customer) => {\r\n    try {\r\n      if (!customer) return false;\r\n\r\n      const nameField = String(customer.name || \"\").toLowerCase().trim();\r\n      const term = String(searchTerm || \"\").toLowerCase().trim();\r\n      const nameMatch = nameField.includes(term);\r\n\r\n      const phoneField = String(customer.phone || customer.phone_number || \"\");\r\n      const normalizedPhoneField = normalizePhoneNumber(phoneField);\r\n      const normalizedSearchTerm = normalizePhoneNumber(searchTerm);\r\n\r\n      let phoneMatch = false;\r\n      if (normalizedSearchTerm !== \"\") {\r\n        phoneMatch = normalizedPhoneField.includes(normalizedSearchTerm);\r\n      }\r\n\r\n      return nameMatch || phoneMatch;\r\n    } catch (error) {\r\n      console.error(\"Error filtering customers:\", error);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"customers-list\"} />\r\n      <Helmet>\r\n        <title>Customers</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://i.imgur.com/crcVWqA.png\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"View Customers\"} />\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Customers-List\">\r\n        <Text\r\n          margin=\"0px 0px 20px 0px\"\r\n          text-align=\"center\"\r\n          font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n          color=\"--dark\"\r\n          sm-margin=\"0px 0px 30px 0px\"\r\n        >\r\n          Customers\r\n        </Text>\r\n        <Icon\r\n          category=\"md\"\r\n          icon={MdPersonAdd}\r\n          onClick={() => addCustomer()}\r\n          size=\"32px\"\r\n          align-self=\"flex-end\"\r\n          margin=\"16px 0px 16px 0px\"\r\n          style={{ cursor: \"pointer\" }}\r\n        />\r\n\r\n        {/* Search Box */}\r\n        <Box display=\"flex\" justify-content=\"center\" margin=\"20px 0\">\r\n          <Input\r\n            width=\"50%\"\r\n            placeholder=\"Search by name or phone number\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            padding=\"10px\"\r\n            border-radius=\"7.5px\"\r\n            border=\"1px solid #ccc\"\r\n          />\r\n        </Box>\r\n\r\n        {/* Begin Fixed-Width Container with Desktop Dimensions and Scrolls */}\r\n        <Box\r\n          min-width=\"1200px\" // Ensures the container doesn't shrink below 1200px\r\n          overflow=\"auto\" // Enables horizontal and vertical scrolling when content overflows\r\n          margin=\"0 auto\"\r\n          padding=\"0 10px\"\r\n        >\r\n          {/* Header Row */}\r\n          <Box\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            padding=\"10px\"\r\n            border-width=\"0 0 2px 0\"\r\n            border-style=\"solid\"\r\n            border-color=\"#d1d7de\"\r\n            margin=\"0px 0px 10px 0px\"\r\n          >\r\n            <Text flex=\"1\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Name</Strong>\r\n            </Text>\r\n            <Text flex=\"1\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Phone Number</Strong>\r\n            </Text>\r\n            <Text width=\"100px\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Edit</Strong>\r\n            </Text>\r\n            <Text width=\"100px\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Delete</Strong>\r\n            </Text>\r\n          </Box>\r\n\r\n          {filteredCustomers.length > 0 ? (\r\n            <Box>\r\n              {filteredCustomers.map((customer) => (\r\n                <Box\r\n                  key={customer.uuid}\r\n                  display=\"flex\"\r\n                  align-items=\"center\"\r\n                  padding=\"10px\"\r\n                  border-width=\"0 0 1px 0\"\r\n                  border-style=\"solid\"\r\n                  border-color=\"#d1d7de\"\r\n                  background=\"#ffffff\"\r\n                  margin=\"0px 0px 10px 0px\"\r\n                >\r\n                  {/* Customer Name */}\r\n                  <Text\r\n                    flex=\"1\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 500 24px/1.2 --fontFamily-serifGeorgia\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {customer.name || customer.customer_name || \"N/A\"}\r\n                  </Text>\r\n\r\n                  {/* Phone Number */}\r\n                  <Text\r\n                    flex=\"1\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 20px/1.5 --fontFamily-sans\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {customer.phone || customer.phone_number || \"N/A\"}\r\n                  </Text>\r\n\r\n                  {/* Edit Icon */}\r\n                  <Box\r\n                    width=\"100px\" // Fixed width for adequate space\r\n                    display=\"flex\"\r\n                    justify-content=\"center\"\r\n                    align-items=\"center\"\r\n                    padding=\"0 10px\" // Adds space around the icon\r\n                  >\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdCreate}\r\n                      size=\"32px\"\r\n                      onClick={() => editCustomer(customer.uuid)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Delete Icon */}\r\n                  <Box\r\n                    width=\"100px\" // Fixed width for adequate space\r\n                    display=\"flex\"\r\n                    justify-content=\"center\"\r\n                    align-items=\"center\"\r\n                    padding=\"0 10px\" // Adds space around the icon\r\n                  >\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"32px\"\r\n                      onClick={() => handleDelete(customer.uuid)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Text text-align=\"center\">No customers available</Text>\r\n          )}\r\n        </Box>\r\n        {/* End Fixed-Width Container */}\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","// Import necessary modules and components\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Hr,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Icon,\r\n  Select,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdDeleteSweep, MdNoteAdd, MdArrowBack } from \"react-icons/md\";\r\nimport {\r\n  fetchCustomerById,\r\n  editCustomerById,\r\n  uploadImage,\r\n  uploadAudio,\r\n  deleteImageFromStorage, // Import delete functions (to be implemented)\r\n  deleteAudioFromStorage, // Import delete functions (to be implemented)\r\n} from \"../utils/firebaseConfig\"; // Import Firebase functions\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { FaWhatsapp } from \"react-icons/fa\";\r\n\r\n// Helper function to extract the UUID from the URL query string\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\n// Custom File Uploader Component\r\nconst FileUploader = ({ handleFile }) => {\r\n  const hiddenFileInput = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    handleFile(files);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"button-upload\"\r\n        onClick={handleClick}\r\n        margin=\"20px 0\"\r\n        background=\"#cb7731\"\r\n        color=\"white\"\r\n        padding=\"10px 20px\"\r\n        border-radius=\"7.5px\"\r\n        aria-label=\"Upload Measurement Images\"\r\n      >\r\n        Upload Measurement Images\r\n      </Button>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleChange}\r\n        ref={hiddenFileInput}\r\n        style={{ display: \"none\" }}\r\n        multiple\r\n        accept=\"image/*\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// Audio Recorder Component with Deletion Capability\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const uuid = query.get(\"uuid\"); // Extract UUID from URL\r\n  const [customerData, setCustomerData] = useState(null); // To store fetched customer data\r\n \r\n  const [loading, setLoading] = useState(true); // Loading state\r\n  const [error, setError] = useState(null); // Error state\r\n  const [imageUrls, setImageUrls] = useState([]); // For storing image URLs\r\n \r\n  const [modalOpen, setModalOpen] = useState(false); // For modal state\r\n  const [modalImageUrl, setModalImageUrl] = useState(\"\"); // For the image in modal\r\n  const [deadline, setDeadline] = useState(\"\"); // For storing the deadline date if applicable\r\n\r\n  // Fetch customer details on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (uuid) {\r\n          fetchCustomerById(uuid, (data) => {\r\n            if (data) {\r\n              setCustomerData(data);\r\n              setImageUrls(data.images || []);\r\n              // If you have pieces or progress in customer data, set them here\r\n              // setPieces(data.pieces?.details || []);\r\n              // setProgress(data.progress || \"Pending\");\r\n            } else {\r\n              setError(\"Customer not found or invalid UUID.\");\r\n            }\r\n            setLoading(false);\r\n          });\r\n        } else {\r\n          setError(\"Invalid customer UUID.\");\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching customer data.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [uuid]);\r\n\r\n  // Handle file upload for additional images\r\n  const handleFileUpload = async (files) => {\r\n    try {\r\n      const uploadedImageUrls = await Promise.all(\r\n        files.map((file) => uploadImage(file)) // Use uploadImage function\r\n      );\r\n      setImageUrls((prevUrls) => [...prevUrls, ...uploadedImageUrls]);\r\n    } catch (error) {\r\n      console.error(\"Error uploading images:\", error);\r\n      alert(\"Failed to upload images. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Handle audio upload\r\n  \r\n\r\n  // Handle deleting an image\r\n  const handleDeleteImage = async (index) => {\r\n    if (\r\n      window.confirm(\r\n        \"Are you sure you want to delete this image? This action cannot be undone.\"\r\n      )\r\n    ) {\r\n      try {\r\n        const imageToDelete = imageUrls[index];\r\n        // Extract storage path from image URL\r\n        const storagePath = extractStoragePathFromURL(imageToDelete); // Implement this function based on your URL structure\r\n        if (storagePath) {\r\n          await deleteImageFromStorage(storagePath); // Implement deleteImageFromStorage in firebaseConfig.js\r\n        }\r\n        const updatedImages = imageUrls.filter((_, i) => i !== index);\r\n        setImageUrls(updatedImages);\r\n      } catch (error) {\r\n        console.error(\"Error deleting image:\", error);\r\n        alert(\"Failed to delete image. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Helper function to extract storage path from URL (Implementation depends on your storage setup)\r\n  const extractStoragePathFromURL = (url) => {\r\n    // Example implementation:\r\n    // Assuming your Firebase storage URLs are structured as:\r\n    // https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/path%2Fto%2Fimage.jpg?...\r\n    // You need to extract 'path/to/image.jpg'\r\n    try {\r\n      const baseURL = \"https://firebasestorage.googleapis.com/v0/b/your-app.appspot.com/o/\";\r\n      if (url.startsWith(baseURL)) {\r\n        const encodedPath = url.substring(baseURL.length, url.indexOf(\"?\"));\r\n        return decodeURIComponent(encodedPath);\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error extracting storage path:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Handle deleting audio\r\n \r\n\r\n  // Function to format phone number for WhatsApp API\r\n  const formatPhoneNumber = (phone) => {\r\n    // Remove any non-digit characters\r\n    return phone.replace(/\\D/g, \"\");\r\n  };\r\n\r\n  // Handle WhatsApp click\r\n\r\n\r\n  // Handle updating customer data in Firebase\r\n  const handleSaveCustomer = async () => {\r\n    try {\r\n     \r\n      const updatedCustomerData = {\r\n        ...customerData,\r\n        // If you have pieces or progress in customer data, include them here\r\n        // pieces: {\r\n        //   ...customerData.pieces,\r\n        //   details: pieces,\r\n        //   number_of_pieces: totalPieces,\r\n        // },\r\n        \r\n        images: imageUrls, // Include updated images array\r\n        \r\n      };\r\n      await editCustomerById(uuid, updatedCustomerData);\r\n      alert(\"Customer updated successfully\");\r\n      history.push(\"/customers\");\r\n    } catch (err) {\r\n      console.error(\"Error updating customer:\", err);\r\n      alert(\"Error updating customer. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Open image in modal\r\n  const openImageInModal = (url) => {\r\n    setModalImageUrl(url);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Close modal\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setModalImageUrl(\"\");\r\n  };\r\n\r\n\r\n  if (loading) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"edit-customer\"} />\r\n        <Helmet>\r\n          <title>Edit Customer</title>\r\n          <link\r\n            rel={\"shortcut icon\"}\r\n            href={\"https://i.imgur.com/crcVWqA.png\"}\r\n            type={\"image/x-icon\"}\r\n          />\r\n        </Helmet>\r\n        <Section padding=\"90px 0 100px 0\" quarkly-title=\"Edit-Customer\">\r\n          <Text>Loading...</Text>\r\n        </Section>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"edit-customer\"} />\r\n        <Helmet>\r\n          <title>Edit Customer</title>\r\n          <link\r\n            rel={\"shortcut icon\"}\r\n            href={\"https://i.imgur.com/crcVWqA.png\"}\r\n            type={\"image/x-icon\"}\r\n          />\r\n        </Helmet>\r\n        <Section padding=\"90px 0 100px 0\" quarkly-title=\"Edit-Customer\">\r\n          <Text>{error}</Text>\r\n        </Section>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"edit-customer\"} />\r\n      <Helmet>\r\n        <title>Edit Customer</title>\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://i.imgur.com/crcVWqA.png\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      {/* Main Content */}\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Edit-Customer\">\r\n        {/* Begin Fixed-Width Container */}\r\n        <Box\r\n          min-width=\"1200px\"\r\n          overflow=\"auto\"\r\n          margin=\"0 auto\"\r\n          padding=\"0 10px\" // Optional: Add horizontal padding\r\n        >\r\n          {/* Header Section */}\r\n          <Box\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            justify-content=\"center\"\r\n            position=\"relative\"\r\n          >\r\n            <Icon\r\n              category=\"md\"\r\n              icon={MdArrowBack}\r\n              size=\"40px\"\r\n              margin=\"16px\"\r\n              padding=\"0px 0px 16px 0px\"\r\n              onClick={() => history.push(\"/customers\")}\r\n              style={{ cursor: \"pointer\", position: \"absolute\", left: \"0\" }}\r\n              aria-label=\"Back to Customers\"\r\n            />\r\n            <Text\r\n              margin=\"0px 0px 20px 0px\"\r\n              text-align=\"center\"\r\n              font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n              color=\"--dark\"\r\n              sm-margin=\"0px 0px 30px 0px\"\r\n            >\r\n              Edit Customer\r\n            </Text>\r\n          </Box>\r\n\r\n          <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n            {/* Customer Name */}\r\n            \r\n            <Input\r\n              display=\"block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              width=\"50%\"\r\n              value={customerData.customer_name || \"\"}\r\n              readOnly\r\n              aria-label=\"Customer Name\"\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Phone Number */}\r\n            <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n            <Input\r\n              display=\"block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              width=\"50%\"\r\n              value={customerData.phone_number || \"\"}\r\n              readOnly\r\n              aria-label=\"Phone Number\"\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Images Section */}\r\n            <Text margin=\"15px 0px 15px 0px\">Images</Text>\r\n            <FileUploader handleFile={handleFileUpload} />\r\n            {imageUrls.length > 0 && (\r\n              <Box\r\n                display=\"grid\"\r\n                grid-template-columns={`repeat(${Math.min(\r\n                  imageUrls.length,\r\n                  4\r\n                )}, 225px)`}\r\n                grid-auto-rows=\"225px\"\r\n                grid-gap=\"15px\"\r\n                width={`${\r\n                  Math.min(imageUrls.length, 4) * 225 +\r\n                  (Math.min(imageUrls.length, 4) - 1) * 15\r\n                }px`}\r\n                overflow=\"auto\"\r\n                padding=\"15px\"\r\n                border=\"1px solid #ccc\"\r\n                margin=\"15px 0\"\r\n              >\r\n                {imageUrls.map((url, index) => (\r\n                  <Box\r\n                    key={index}\r\n                    as=\"div\"\r\n                    position=\"relative\" // To position the delete icon\r\n                  >\r\n                    {/* Image Thumbnail */}\r\n                    <Box\r\n                      as=\"img\"\r\n                      src={url}\r\n                      width=\"225px\"\r\n                      height=\"225px\"\r\n                      object-fit=\"cover\"\r\n                      border-radius=\"5px\"\r\n                      onClick={() => openImageInModal(url)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      alt={`Customer Image ${index + 1}`}\r\n                    />\r\n                    {/* Delete Icon */}\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"24px\"\r\n                      color=\"#ff0000\"\r\n                      position=\"absolute\"\r\n                      top=\"5px\"\r\n                      right=\"5px\"\r\n                      onClick={() => handleDeleteImage(index)}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"rgba(255,255,255,0.7)\",\r\n                        borderRadius: \"50%\",\r\n                      }}\r\n                      aria-label={`Delete Customer Image ${index + 1}`}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            )}\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Audio Recording Section */}\r\n            <Text margin=\"15px 0px 15px 0px\">Audio</Text>\r\n            \r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Deadline Section (Optional) */}\r\n            <Text margin=\"15px 0px 15px 0px\">Deadline</Text>\r\n            <Input\r\n              type=\"date\"\r\n              value={deadline}\r\n              onChange={(e) => setDeadline(e.target.value)}\r\n              width=\"40%\"\r\n              background=\"white\"\r\n              padding=\"5px\"\r\n              margin=\"0 10px\"\r\n              required\r\n              aria-label=\"Deadline Date\"\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Save Button */}\r\n            <Button\r\n              onClick={handleSaveCustomer}\r\n              margin=\"40px 0\"\r\n              background=\"#cb7731\"\r\n              color=\"white\"\r\n              padding=\"10px 20px\"\r\n              border-radius=\"7.5px\"\r\n              aria-label=\"Save Customer Changes\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </Box>\r\n          {/* End Fixed-Width Container */}\r\n        </Box>\r\n\r\n        {/* Image Modal */}\r\n        {modalOpen && (\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              backgroundColor: \"rgba(0,0,0,0.8)\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              zIndex: 1000,\r\n            }}\r\n            onClick={closeModal}\r\n          >\r\n            <img\r\n              src={modalImageUrl}\r\n              alt=\"Full Size\"\r\n              style={{ maxHeight: \"90%\", maxWidth: \"90%\" }}\r\n              onClick={(e) => e.stopPropagation()}\r\n            />\r\n          </div>\r\n        )}\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Login from \"pages/utils/login\";\r\nimport Orders from \"pages/orders/ordersManagers\";\r\nimport OrdersAdd from \"pages/orders/ordersAdd\";\r\nimport OrdersEdit from \"pages/orders/ordersEdit\";\r\nimport OrdersView from \"pages/orders/ordersView\"; // Public access for customers to view orders\r\nimport UsersAdd from \"pages/sudo/sudoAddUser\"; // Sudo-only route\r\nimport Page404 from \"pages/utils/page404\";\r\nimport CalendarPage from \"pages/calendar/calendar\";\r\nimport AddCustomer from \"pages/customers/AddCustomer\";\r\nimport ViewCustomers from \"pages/customers/ViewCustomers\";\r\nimport EditCustomer from \"pages/customers/EditCustomer\";\r\n// Private route for authenticated users (manager or sudo)\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const role = sessionStorage.getItem(\"role\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        role ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n// Sudo-only route\r\nconst SudoRoute = ({ component: Component, ...rest }) => {\r\n  const role = sessionStorage.getItem(\"role\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        role === \"sudo\" ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {/* Public Routes */}\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/orders/view\" component={OrdersView} /> {/* Publicly accessible */}\r\n        \r\n        {/* Private Routes for Authenticated Users */}\r\n        <PrivateRoute exact path=\"/orders\" component={Orders} />\r\n        <PrivateRoute exact path=\"/orders/add\" component={OrdersAdd} />\r\n        <PrivateRoute exact path=\"/orders/edit\" component={OrdersEdit} />\r\n        <PrivateRoute exact path=\"/calendar\" component={CalendarPage} />\r\n        <PrivateRoute exact path=\"/customers/view\" component={ViewCustomers} />\r\n        <PrivateRoute exact path=\"/customers/add\" component={AddCustomer} />\r\n        <PrivateRoute exact path=\"/customers/edit\" component={EditCustomer} />\r\n\r\n        {/* Sudo Route */}\r\n        <SudoRoute exact path=\"/sudo/users/add\" component={UsersAdd} />\r\n\r\n        {/* Redirect to login if no match */}\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport QAPI from \"qapi\";\r\n\r\nwindow.QAPI = QAPI;\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","export default {\r\n\t\"pages\": {\r\n\t\t\"root\": {\r\n\t\t\t\"id\": \"root\",\r\n\t\t\t\"pageUrl\": \"root\",\r\n\t\t\t\"name\": \"root\",\r\n\t\t\t\"children\": [\r\n\t\t\t\t\"66f6d1359710450018a331ba\",\r\n\t\t\t\t\"66f6d1359710450018a331bd\",\r\n\t\t\t\t\"670bf015e5d277001898945e\",\r\n\t\t\t\t\"670bf0609335410018c70fb2\"\r\n\t\t\t]\r\n\t\t},\r\n\t\t\"66f6d1359710450018a331ba\": {\r\n\t\t\t\"id\": \"66f6d1359710450018a331ba\",\r\n\t\t\t\"name\": \"404\",\r\n\t\t\t\"pageUrl\": \"404\"\r\n\t\t},\r\n\t\t\"66f6d1359710450018a331bd\": {\r\n\t\t\t\"id\": \"66f6d1359710450018a331bd\",\r\n\t\t\t\"name\": \"Login\",\r\n\t\t\t\"pageUrl\": \"index\"\r\n\t\t},\r\n\t\t\"670bf015e5d277001898945e\": {\r\n\t\t\t\"id\": \"670bf015e5d277001898945e\",\r\n\t\t\t\"pageUrl\": \"login\",\r\n\t\t\t\"name\": \"Orders-Managers\"\r\n\t\t},\r\n\t\t\"670bf0609335410018c70fb2\": {\r\n\t\t\t\"id\": \"670bf0609335410018c70fb2\",\r\n\t\t\t\"pageUrl\": \"orders-customers\",\r\n\t\t\t\"name\": \"Orders-Add\"\r\n\t\t}\r\n\t},\r\n\t\"mode\": \"production\",\r\n\t\"projectType\": \"create-react-app\",\r\n\t\"site\": {\r\n\t\t\"styles\": {},\r\n\t\t\"seo\": {}\r\n\t}\r\n}"],"sourceRoot":""}