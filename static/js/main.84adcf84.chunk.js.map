{"version":3,"sources":["theme/index.js","global-page-styles.js","pages/login.js","pages/firebaseConfig.js","pages/navbar.js","pages/ordersManagers.js","pages/ordersAdd.js","pages/ordersEdit.js","pages/ordersView.js","pages/sudoAddUser.js","pages/page404.js","pages/calendar.js","App.js","index.js","qapi.js"],"names":["pageStyles","PageStyles","createGlobalStyle","_ref","styles","Object","entries","map","_ref2","prop","value","transformVar","GlobalQuarklyPageStyles","_ref3","pageUrl","React","createElement","Login","email","setEmail","useState","password","setPassword","error","setError","history","useHistory","Theme","theme","Helmet","name","content","rel","href","type","Section","height","background","padding","sm-padding","Override","slot","align-items","Text","as","font","md-font","margin","text-align","color","align-self","display","Box","flex-wrap","overflow","align-content","flex-direction","justify-content","width","lg-width","gap","grid-gap","sm-width","min-width","Input","onChange","e","target","border-radius","grid-column","Button","onClick","handleLogin","db","getDatabase","usersRef","ref","onValue","snapshot","users","val","userFound","userId","user","sessionStorage","setItem","role","push","RawHtml","place","rawKey","decryptShiftedAscii","text","Array","from","char","String","fromCharCode","charCodeAt","join","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","storage","getStorage","database","uploadImage","async","storageReference","file","uploadBytes","getDownloadURL","uploadAudio","audioName","Date","getTime","audioRef","audioBlob","fetchOrderById","uuid","callback","orderRef","dbRef","order","fetchOrdersByDate","ordersRef","ordersQuery","query","orderByChild","equalTo","date","get","orders","exists","forEach","childSnapshot","id","key","pages","title","path","NavBar","current","pages_content","filter","page","cursor","transition","hover-background","hover-color","Boolean","length","deleteOrder","remove","deleteOrderById","window","location","reload","console","alert","setOrders","useEffect","data","ordersArray","keys","fetchOrders","getItem","quarkly-title","sm-margin","Icon","category","icon","MdNoteAdd","size","style","border-width","border-style","border-color","Strong","_order$pieces","progress","orderCreationDate","orderCreationTime","customer_name","pieces","number_of_pieces","deadline_formatted","MdCreate","editOrder","MdDeleteSweep","handleDelete","confirm","FileUploader","handleFile","hiddenFileInput","useRef","Fragment","className","handleClick","click","event","files","multiple","accept","AudioRecorder","handleAudioUpload","isRecording","setIsRecording","audioURL","setAudioURL","mediaRecorderRef","audioChunks","handleStopRecording","stop","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","onstop","Blob","audioLink","start","controls","src","customerName","setCustomerName","countryCode","setCountryCode","phoneNumber","setPhoneNumber","images","setImages","setPieces","setAudioLink","deadlineDate","setDeadlineDate","totalPieces","reduce","acc","piece","quantity","position","MdArrowBack","left","min-height","placeholder-color","required","Hr","defaultValue","uploadedImageUrls","Promise","all","prevImages","grid-template-columns","Math","min","grid-auto-rows","border","image","index","File","URL","createObjectURL","object-fit","addPieceRow","remarks","textAlign","Select","handleTypeChange","updatedPieces","i","fontSize","handleQuantityChange","Number","placeholder","handleRemarksChange","_","removePieceRow","toISOString","split","now","toLocaleTimeString","hour","minute","hour12","toLocaleDateString","day","year","month","replace","orderUUID","generateUUID","characters","result","charAt","floor","random","validImages","undefined","deadline_raw","getFullYear","getMonth","slice","getDate","orderData","phone_number","details","audio_link","set","saveOrderToDatabase","sendWhatsAppMessage","message","log","encodeURIComponent","URLSearchParams","useLocation","search","setOrderData","setProgress","loading","setLoading","imageUrls","setImageUrls","modalOpen","setModalOpen","modalImageUrl","setModalImageUrl","deadline","setDeadline","_data$pieces","dateString","parsedDate","padStart","convertToInputDateFormat","err","fetchData","FaWhatsapp","marginLeft","handleWhatsAppClick","url","open","readOnly","prevUrls","alt","objectFit","openImageInModal","convertToReadableDate","inputDate","updatedOrderData","updatedFields","update","editOrderById","top","backgroundColor","justifyContent","alignItems","zIndex","closeModal","maxHeight","maxWidth","stopPropagation","_orderData$pieces","_orderData$pieces$det","ProgressBar","completed","Pending","Completed","bgColor","labelAlignment","labelColor","setRole","preventDefault","newUserRef","addUserToDatabase","max-width","sm-font","letter-spacing","Link","text-decoration-line","hover-opacity","CalendarPage","myEvents","setEvents","selectedDate","setSelectedDate","toastMessage","setToastMessage","formatDateLocal","loadEventsForMonth","startOfMonth","endOfMonth","datesInMonth","d","setDate","allOrders","dateStr","getEventsForDate","formattedDate","flexDirection","Calendar","pendingEvents","sum","toDateString","tileContent","view","some","borderRadius","marginTop","onActiveStartDateChange","activeStartDate","borderCollapse","PrivateRoute","component","Component","rest","Route","assign","render","props","Redirect","to","SudoRoute","App","Router","Switch","exact","OrdersView","Orders","OrdersAdd","OrdersEdit","UsersAdd","Page404","QAPI","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.84adcf84.chunk.js","sourcesContent":["export default {\r\n\t\"defaultWidth\": 1280,\r\n\t\"breakpoints\": {\r\n\t\t\"sm\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"max-width\",\r\n\t\t\t\t\"value\": 576\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"md\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"max-width\",\r\n\t\t\t\t\"value\": 768\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"lg\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"max-width\",\r\n\t\t\t\t\"value\": 992\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"color\": {\r\n\t\t\"dark\": \"#04080C\",\r\n\t\t\"darkL1\": \"#0E1317\",\r\n\t\t\"darkL2\": \"#191E22\",\r\n\t\t\"grey\": \"#6F839F\",\r\n\t\t\"greyD1\": \"#637897\",\r\n\t\t\"greyD2\": \"#586D8E\",\r\n\t\t\"light\": \"#F7FBFF\",\r\n\t\t\"lightD1\": \"#EDF2F6\",\r\n\t\t\"lightD2\": \"#E4E8EC\",\r\n\t\t\"green\": \"#00875A\",\r\n\t\t\"primary\": \"#0077CC\",\r\n\t\t\"secondary\": \"#FFC400\",\r\n\t\t\"orange\": \"#FF7C22\",\r\n\t\t\"red\": \"#DE350B\",\r\n\t\t\"purple\": \"#FD6DF9\",\r\n\t\t\"indigo\": \"#9B6CFC\"\r\n\t},\r\n\t\"fontFamily\": {\r\n\t\t\"sans\": \"-apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n\t\t\"sansHeavy\": \"Impact, Haettenschweiler, 'Franklin Gothic Bold', Charcoal, 'Helvetica Inserat', 'Bitstream Vera Sans Bold', 'Arial Black', sans-serif\",\r\n\t\t\"sansHelvetica\": \"Frutiger, 'Frutiger Linotype', Univers, Calibri, 'Gill Sans', 'Gill Sans MT', 'Myriad Pro', Myriad, 'DejaVu Sans Condensed', 'Liberation Sans', 'Nimbus Sans L', Tahoma, Geneva, 'Helvetica Neue', Helvetica, Arial, sans-serif\",\r\n\t\t\"sansVerdana\": \"Corbel, 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', 'Bitstream Vera Sans', 'Liberation Sans', Verdana, 'Verdana Ref', sans-serif\",\r\n\t\t\"sansTrebuchet\": \"'Segoe UI', Candara, 'Bitstream Vera Sans', 'DejaVu Sans', 'Trebuchet MS', Verdana, 'Verdana Ref', sans-serif\",\r\n\t\t\"mono\": \"Consolas, 'Andale Mono WT', 'Andale Mono', 'Lucida Console', 'Lucida Sans Typewriter', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Liberation Mono', 'Nimbus Mono L', Monaco, 'Courier New', Courier, monospace\",\r\n\t\t\"serifTimes\": \"Cambria, 'Hoefler Text', Utopia, 'Liberation Serif', 'Nimbus Roman No9 L Regular', Times, 'Times New Roman', serif\",\r\n\t\t\"serifGeorgia\": \"Constantia, 'Lucida Bright', Lucidabright, 'Lucida Serif', Lucida, 'DejaVu Serif', 'Bitstream Vera Serif', 'Liberation Serif', Georgia, serif\",\r\n\t\t\"serifGaramond\": \"'Palatino Linotype', Palatino, Palladio, 'URW Palladio L', 'Book Antiqua', Baskerville, 'Bookman Old Style', 'Bitstream Charter', 'Nimbus Roman No9 L', Garamond, 'Apple Garamond', 'ITC Garamond Narrow', 'New Century Schoolbook', 'Century Schoolbook', 'Century Schoolbook L', Georgia, serif\"\r\n\t},\r\n\t\"font\": {\r\n\t\t\"headline1\": \"normal 900 72px/1.2 --fontFamily-sans\",\r\n\t\t\"headline2\": \"normal 900 42px/1.2 --fontFamily-sans\",\r\n\t\t\"headline3\": \"normal 500 28px/1.2 --fontFamily-sans\",\r\n\t\t\"base\": \"normal 300 16px/1.5 --fontFamily-sans\",\r\n\t\t\"lead\": \"normal 300 20px/1.5 --fontFamily-sans\"\r\n\t},\r\n\t\"boxShadow\": {\r\n\t\t\"m\": \"0 4px 5px -1px rgba(0, 0, 0, 0.1)\",\r\n\t\t\"l\": \"0 10px 15px -3px rgba(0, 0, 0, 0.1)\",\r\n\t\t\"xl\": \"0 20px 25px -5px rgba(0, 0, 0, 0.1)\",\r\n\t\t\"xxl\": \"0 25px 50px -12px rgba(0, 0, 0, 0.25)\"\r\n\t},\r\n\t\"background\": {\r\n\t\t\"primaryGradient\": \"linear-gradient(180deg, --color-primary, transparent) no-repeat 0 0\",\r\n\t\t\"secondaryGradient\": \"linear-gradient(180deg, --color-secondary, transparent) no-repeat 0 0\"\r\n\t},\r\n\t\"transform\": {\r\n\t\t\"rotate90\": \"rotate(90deg)\",\r\n\t\t\"rotate180\": \"rotate(180deg)\",\r\n\t\t\"flipX\": \"scaleX(-1)\",\r\n\t\t\"flipY\": \"scaleY(-1)\"\r\n\t},\r\n\t\"transition\": {\r\n\t\t\"opacityOut\": \"opacity --transitionDuration-normal --transitionTimingFunction-easeOut\",\r\n\t\t\"transformOut\": \"transform --transitionDuration-normal --transitionTimingFunction-easeOut\",\r\n\t\t\"transformInOut\": \"transform --transitionDuration-normal --transitionTimingFunction-easeInOut\"\r\n\t},\r\n\t\"transitionTimingFunction\": {\r\n\t\t\"easeIn\": \"cubic-bezier(0.4, 0, 1, 1)\",\r\n\t\t\"easeOut\": \"cubic-bezier(0, 0, 0.2, 1)\",\r\n\t\t\"easeInOut\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\r\n\t\t\"sharp\": \"cubic-bezier(0.4, 0, 0.6, 1)\"\r\n\t},\r\n\t\"transitionDuration\": {\r\n\t\t\"fastest\": \"0.1s\",\r\n\t\t\"fast\": \"0.2s\",\r\n\t\t\"normal\": \"0.3s\"\r\n\t},\r\n\t\"filter\": {\r\n\t\t\"grayscale\": \"grayscale(100%)\",\r\n\t\t\"invert\": \"invert(100%)\",\r\n\t\t\"blur\": \"blur(10px)\"\r\n\t},\r\n\t\"animation\": {},\r\n\t\"keyframes\": {\r\n\t\t\"fadeIn\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"from\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 0\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"to\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"fadeOut\": [\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"from\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"key\": \"to\",\r\n\t\t\t\t\"props\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"opacity\": 0\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\"components\": {\r\n\t\t\"section\": {\r\n\t\t\t\"maxWidth\": {\r\n\t\t\t\t\"default\": \"1280px\"\r\n\t\t\t},\r\n\t\t\t\"minWidth\": {\r\n\t\t\t\t\"default\": \"300px\"\r\n\t\t\t},\r\n\t\t\t\"width\": {\r\n\t\t\t\t\"default\": \"90%\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"stack\": {\r\n\t\t\t\"gap\": {\r\n\t\t\t\t\"default\": \"32px\",\r\n\t\t\t\t\"small\": \"16px\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\"version\": 1\r\n}","import React from \"react\";\r\nimport { transformVar } from \"@quarkly/atomize\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst pageStyles = {\r\n    \"404\": {},\r\n    \"index\": {},\r\n    \"login\": {},\r\n    \"orders-customers\": {}\r\n};\r\n\r\nconst PageStyles = createGlobalStyle`\r\n    body {\r\n        ${({ styles }) =>\r\n            Object.entries(styles || {}).map(\r\n                ([prop, value]) => `${prop}: ${transformVar(prop, value)};`\r\n            )}\r\n    }\r\n`;\r\nexport const GlobalQuarklyPageStyles = ({ pageUrl }) => <PageStyles styles={pageStyles[pageUrl]} />\r\n","import React, { useState } from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Text, Section, Input, Box, Button } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { RawHtml, Override } from \"@quarkly/components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDatabase, ref, onValue } from \"firebase/database\"; // Import Firebase\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory(); // Used for redirection\r\n\r\n  // Handle login with Firebase\r\n  const handleLogin = () => {\r\n    const db = getDatabase();\r\n    const usersRef = ref(db, \"users\");\r\n\r\n    onValue(usersRef, (snapshot) => {\r\n      const users = snapshot.val();\r\n      let userFound = false;\r\n\r\n      // Check for matching email and password in Firebase Realtime Database\r\n      for (const userId in users) {\r\n        const user = users[userId];\r\n        if (user.email === email && user.password === password) {\r\n          userFound = true;\r\n\r\n          // Store user role in sessionStorage\r\n          sessionStorage.setItem(\"role\", user.role);\r\n\r\n          // Redirect based on role\r\n          if (user.role === \"manager\" || user.role === \"sudo\") {\r\n            history.push(\"/orders\");\r\n          }\r\n        }\r\n      }\r\n\r\n      // Show error if no match found\r\n      if (!userFound) {\r\n        setError(\"Invalid email or password\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"index\"} />\r\n      <Helmet>\r\n        <title>Login</title>\r\n        <meta name={\"description\"} content={\"Web site created using quarkly.io\"} />\r\n        <link rel={\"shortcut icon\"} href={\"https://uploads.quarkly.io/readme/cra/favicon-32x32.ico\"} type={\"image/x-icon\"} />\r\n      </Helmet>\r\n      <Section height=\"auto\" background=\"--color-light\" padding=\"0 0 0px 0\">\r\n        <Section padding=\"80px 0\" sm-padding=\"40px 0\">\r\n          <Override slot=\"SectionContent\" align-items=\"center\" />\r\n          <Text as=\"h2\" font=\"--headline1\" md-font=\"--headline2\" margin=\"20px 0 0 0\">\r\n            Gundoju's Internal Tools\r\n          </Text>\r\n          <Text as=\"p\" font=\"--lead\" margin=\"0px 0 0px 0\" text-align=\"center\">\r\n            Manager Login\r\n          </Text>\r\n        </Section>\r\n      </Section>\r\n\r\n      <Section background=\"--color-light\" color=\"--dark\" padding=\"0px 0 64px 0\" text-align=\"left\">\r\n        <Override slot=\"SectionContent\" align-self=\"auto\" display=\"flex\" align-items=\"center\" />\r\n        <Box\r\n          margin=\"16px 16px 16px 16px\"\r\n          display=\"inline-block\"\r\n          flex-wrap=\"wrap\"\r\n          overflow=\"visible\"\r\n          align-content=\"space-around\"\r\n          align-items=\"center\"\r\n          flex-direction=\"row\"\r\n          justify-content=\"center\"\r\n          align-self=\"center\"\r\n          text-align=\"left\"\r\n        >\r\n          <Box width=\"100%\" padding=\"8px 8px 8px 8px\" lg-width=\"100%\">\r\n            <Box>\r\n              <Box\r\n                gap=\"16px\"\r\n                display=\"grid\"\r\n                flex-direction=\"row\"\r\n                flex-wrap=\"wrap\"\r\n                grid-gap=\"16px\"\r\n              >\r\n                {/* Error Message */}\r\n                {error && (\r\n                  <Text color=\"red\" text-align=\"center\">\r\n                    {error}\r\n                  </Text>\r\n                )}\r\n\r\n                <Box\r\n                  sm-width=\"100%\"\r\n                  display=\"flex\"\r\n                  flex-direction=\"column\"\r\n                  width=\"100%\"\r\n                  min-width=\"100%\"\r\n                >\r\n                  <Text font=\"--base\" margin=\"0 0 4px 0\">\r\n                    Email\r\n                  </Text>\r\n                  <Input\r\n                    width=\"312px\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)} // Set email state\r\n                    border-radius=\"7.5px\"\r\n                  />\r\n                </Box>\r\n                <br />\r\n                <Box sm-width=\"100%\" display=\"flex\" flex-direction=\"column\">\r\n                  <Text font=\"--base\" margin=\"0 0 4px 0\">\r\n                    Password\r\n                  </Text>\r\n                  <Input\r\n                    width=\"100%\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)} // Set password state\r\n                    border-radius=\"7.5px\"\r\n                  />\r\n                </Box>\r\n\r\n                <Box display=\"flex\" flex-direction=\"column\" align-items=\"flex-start\" grid-column=\"1 / span 2\">\r\n                  <Button onClick={handleLogin} border-radius=\"7.5px\">\r\n                    Login\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Section>\r\n\r\n      <RawHtml>\r\n        <style place={\"endOfHead\"} rawKey={\"66f6d1359710450018a331b3\"}>\r\n          {\":root {\\n  box-sizing: border-box;\\n}\\n\\n* {\\n  box-sizing: inherit;\\n}\"}\r\n        </style>\r\n      </RawHtml>\r\n    </Theme>\r\n  );\r\n}\r\n","import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadBytes,\r\n  getDownloadURL,\r\n} from \"firebase/storage\"; // Import 'ref' directly\r\nimport {\r\n  getDatabase,\r\n  ref as dbRef,\r\n  set,\r\n  onValue,\r\n  query,\r\n  orderByChild,\r\n  equalTo,\r\n  get,\r\n  remove,\r\n  update,\r\n} from \"firebase/database\"; // Import Realtime Database functions\r\n\r\nconst REACT_APP_FIREBASE_API_KEY = \"BJ{bTzCojnx`woWCerUe9PsvpyU3VIXyI.dj5Od\";\r\nconst REACT_APP_FIREBASE_AUTH_DOMAIN = \"hvoepkvt.qspe/gjsfcbtfbqq/dpn\";\r\nconst REACT_APP_FIREBASE_DATABASE_URL = \"iuuqt;00hvoepkvt.qspe.efgbvmu.suec/btjb.tpvuifbtu2/gjsfcbtfebubcbtf/bqq\";\r\nconst REACT_APP_FIREBASE_PROJECT_ID = \"hvoepkvt.qspe\";\r\nconst REACT_APP_FIREBASE_STORAGE_BUCKET = \"hvoepkvt.qspe/bqqtqpu/dpn\";\r\nconst REACT_APP_FIREBASE_MESSAGING_SENDER_ID = \":43279::131:\";\r\nconst REACT_APP_FIREBASE_APP_ID = \"2;:43279::131:;xfc;25geg8c4ef97cd987gdb11\";\r\n\r\nfunction decryptShiftedAscii(text) {\r\n  return Array.from(text).map(char => String.fromCharCode(char.charCodeAt(0) - 1)).join('');\r\n}\r\n\r\n\r\n// Firebase credentials (move to .env)\r\nconst firebaseConfig = {\r\n  apiKey: decryptShiftedAscii(REACT_APP_FIREBASE_API_KEY),\r\n  authDomain: decryptShiftedAscii(REACT_APP_FIREBASE_AUTH_DOMAIN),\r\n  databaseURL: decryptShiftedAscii(REACT_APP_FIREBASE_DATABASE_URL), // This is required to initialize the Realtime Database\r\n  projectId: decryptShiftedAscii(REACT_APP_FIREBASE_PROJECT_ID),\r\n  storageBucket: decryptShiftedAscii(REACT_APP_FIREBASE_STORAGE_BUCKET),\r\n  messagingSenderId: decryptShiftedAscii(REACT_APP_FIREBASE_MESSAGING_SENDER_ID),\r\n  appId: decryptShiftedAscii(REACT_APP_FIREBASE_APP_ID)\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase services\r\nconst storage = getStorage(app);\r\nconst database = getDatabase(app);\r\n\r\n// Function to upload image to Firebase Storage\r\nexport const uploadImage = async (file) => {\r\n  const storageReference = ref(storage, `images/${file.name}`); // Use 'ref' directly for creating storage references\r\n  await uploadBytes(storageReference, file);\r\n  return getDownloadURL(storageReference); // Return the URL of the uploaded image\r\n};\r\n\r\n// Function to upload audio to Firebase Storage\r\nexport const uploadAudio = async (audioBlob) => {\r\n  const audioName = `audio_${new Date().getTime()}.wav`; // Generate a unique filename\r\n  const audioRef = ref(storage, `audio/${audioName}`);\r\n  await uploadBytes(audioRef, audioBlob); // Upload audio to Firebase Storage\r\n  return getDownloadURL(audioRef); // Return the download URL for the uploaded audio\r\n};\r\n\r\n// Function to save order to Firebase Realtime Database\r\nexport const saveOrderToDatabase = async (orderData, orderUUID) => {\r\n  const orderRef = dbRef(database, `orders/${orderUUID}`);\r\n  await set(orderRef, orderData);\r\n};\r\n\r\n// Function to fetch an order by UUID\r\nexport const fetchOrderById = async (uuid, callback) => {\r\n  const orderRef = dbRef(database, `orders/${uuid}`);\r\n  onValue(orderRef, (snapshot) => {\r\n    const order = snapshot.val();\r\n    callback(order); // Return the found order or null if not found\r\n  });\r\n};\r\n\r\n// Function to delete an order by UUID\r\nexport const deleteOrderById = async (uuid) => {\r\n  const orderRef = dbRef(database, `orders/${uuid}`);\r\n  await remove(orderRef);\r\n};\r\n\r\n// Function to edit an order by UUID\r\nexport const editOrderById = async (uuid, updatedFields) => {\r\n  const orderRef = dbRef(database, `orders/${uuid}`);\r\n  await update(orderRef, updatedFields);\r\n};\r\n\r\nexport const fetchOrdersByDate = async (date) => {\r\n  const ordersRef = dbRef(database, 'orders');\r\n  const ordersQuery = query(ordersRef, orderByChild('deadline_raw'), equalTo(date)); // Use 'deadline' as the field\r\n\r\n  const snapshot = await get(ordersQuery);\r\n  const orders = [];\r\n  if (snapshot.exists()) {\r\n    snapshot.forEach((childSnapshot) => {\r\n      orders.push({ id: childSnapshot.key, ...childSnapshot.val() });\r\n    });\r\n  }\r\n\r\n  return orders; // Return the list of orders for the specified date\r\n};","import { Text, Box } from \"@quarkly/widgets\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst pages = [\r\n  // { title: \"Summary\", role: \"manager\", path: \"/summary\" },\r\n  { title: \"Calendar\", role: \"manager\", path: \"/calendar\" },\r\n  { title: \"Orders\", role: \"manager\", path: \"/orders\" },\r\n  { title: \"Add Users\", role: \"sudo\", path: \"/sudo/users/add\" },\r\n];\r\n\r\nexport const NavBar = ({ role, current }) => {\r\n  const history = useHistory();\r\n\r\n  const pages_content = pages\r\n    .filter((page) => page.role === role || role === \"sudo\")\r\n    .map((page) =>\r\n      page.title !== current ? (\r\n        <Text\r\n          key={page.path}\r\n          onClick={() => history.push(page.path)}\r\n          cursor=\"pointer\"\r\n          margin=\"0 10px\"\r\n          font=\"--lead\"\r\n          padding=\"10px\"\r\n          border-radius=\"5px\"\r\n          transition=\"background-color 0.3s\"\r\n          hover-background=\"--color-light\"\r\n          hover-color=\"--primary\"\r\n        >\r\n          {page.title}\r\n        </Text>\r\n      ) : null\r\n    )\r\n    .filter(Boolean); // Removes any `null` or `false` values from the array\r\n\r\n  if (pages_content.length > 0) {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        justify-content=\"space-around\"\r\n        align-items=\"center\"\r\n        padding=\"20px\"\r\n        background=\"--color-lightD2\"\r\n      >\r\n        {pages_content}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Text, Icon, Box, Section, Strong } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdCreate, MdDeleteSweep, MdNoteAdd } from \"react-icons/md\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDatabase, ref as dbRef, onValue } from \"firebase/database\";\r\nimport { deleteOrderById } from \"./firebaseConfig\";\r\nimport { NavBar } from \"./navbar\";\r\n\r\n// Fetch orders from Firebase Realtime Database\r\nconst fetchOrders = (setOrders) => {\r\n  const db = getDatabase();\r\n  const ordersRef = dbRef(db, \"orders\");\r\n\r\n  onValue(ordersRef, (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data) {\r\n      const ordersArray = Object.keys(data).map((key) => ({\r\n        uuid: key,\r\n        ...data[key],\r\n      }));\r\n      setOrders(ordersArray);\r\n    }\r\n  });\r\n};\r\n\r\n// Function to delete an order and reload the page\r\nconst deleteOrder = async (uuid) => {\r\n  try {\r\n    await deleteOrderById(uuid); // Deletes the order from Firebase Database\r\n    window.location.reload(); // Forces page reload after successful deletion\r\n  } catch (error) {\r\n    console.error(\"Error deleting order: \", error);\r\n    alert(\"Failed to delete the order. Please try again.\");\r\n  }\r\n};\r\n\r\nexport default () => {\r\n  const [orders, setOrders] = useState([]); // State to store all orders\r\n  const history = useHistory();\r\n\r\n  // Fetch all orders on component mount\r\n  useEffect(() => {\r\n    fetchOrders(setOrders);\r\n  }, []);\r\n\r\n  // Handle editing an order\r\n  const editOrder = (uuid) => {\r\n    history.push(`/orders/edit?uuid=${uuid}`);\r\n  };\r\n\r\n  // Handle deleting an order\r\n  const handleDelete = (uuid) => {\r\n    if (window.confirm(\"Are you sure you want to delete this order?\")) {\r\n      deleteOrder(uuid);\r\n    }\r\n  };\r\n\r\n  // Determine the color of the status text based on the order's progress\r\n  const getStatusColor = (progress) => {\r\n    if (progress === \"Completed\") return \"#31a931\"; // Green for completed\r\n    if (progress === \"In Progress\") return \"#ffaa00\"; // Orange for in progress\r\n    return \"#ff0000\"; // Red for others (e.g., Pending)\r\n  };\r\n\r\n  const addOrder = () => {\r\n    history.push(\"/orders/add\");\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-managers\"} />\r\n      <Helmet>\r\n        <title>Orders Manager</title>\r\n        <meta name={\"description\"} content={\"Manage all customer orders\"} />\r\n      </Helmet>\r\n\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"Orders\"} />\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Orders-Manager\">\r\n        <Text\r\n          margin=\"0px 0px 20px 0px\"\r\n          text-align=\"center\"\r\n          font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n          color=\"--dark\"\r\n          sm-margin=\"0px 0px 30px 0px\"\r\n        >\r\n          Orders\r\n        </Text>\r\n        <Icon\r\n          category=\"md\"\r\n          icon={MdNoteAdd}\r\n          onClick={() => addOrder()}\r\n          size=\"32px\"\r\n          align-self=\"flex-end\"\r\n          margin=\"16px 0px 16px 0px\"\r\n          style={{ cursor: \"pointer\" }}\r\n        />\r\n\r\n        {/* Begin Fixed-Width Container */}\r\n        <Box\r\n          min-width=\"1200px\"\r\n          overflow=\"auto\"\r\n          margin=\"0 auto\"\r\n          padding=\"0 10px\" // Optional: Add horizontal padding\r\n        >\r\n          {/* Header Row */}\r\n          <Box\r\n            display=\"flex\"\r\n            justify-content=\"space-between\"\r\n            align-items=\"center\"\r\n            padding=\"10px\"\r\n            border-width=\"0 0 2px 0\"\r\n            border-style=\"solid\"\r\n            border-color=\"#d1d7de\"\r\n            margin=\"0px 0px 10px 0px\"\r\n          >\r\n            <Text width=\"20%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Order Time</Strong>\r\n            </Text>\r\n            <Text width=\"25%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Customer Name</Strong>\r\n            </Text>\r\n            <Text width=\"15%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Status</Strong>\r\n            </Text>\r\n            <Text width=\"10%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Pieces</Strong>\r\n            </Text>\r\n            <Text width=\"20%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Deadline</Strong>\r\n            </Text>\r\n            <Text width=\"5%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Edit</Strong>\r\n            </Text>\r\n            <Text width=\"5%\" text-align=\"center\" font=\"--lead\" color=\"--dark\">\r\n              <Strong>Delete</Strong>\r\n            </Text>\r\n          </Box>\r\n\r\n          {orders.length > 0 ? (\r\n            <Box>\r\n              {orders.map((order) => (\r\n                <Box\r\n                  key={order.uuid}\r\n                  display=\"flex\"\r\n                  justify-content=\"space-between\"\r\n                  align-items=\"center\"\r\n                  padding=\"10px\"\r\n                  border-width=\"0 0 1px 0\"\r\n                  border-style=\"solid\"\r\n                  border-color=\"#d1d7de\"\r\n                  background=\"#ffffff\"\r\n                  margin=\"0px 0px 10px 0px\"\r\n                >\r\n                  {/* Order Time */}\r\n                  <Text\r\n                    width=\"20%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.orderCreationDate} / {order.orderCreationTime}\r\n                  </Text>\r\n\r\n                  {/* Order Name */}\r\n                  <Text\r\n                    width=\"25%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 500 28px/1.2 --fontFamily-serifGeorgia\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.customer_name}\r\n                  </Text>\r\n\r\n                  {/* Status with Conditional Color */}\r\n                  <Text\r\n                    width=\"15%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color={getStatusColor(order.progress)}\r\n                  >\r\n                    <Strong>{order.progress}</Strong>\r\n                  </Text>\r\n\r\n                  {/* Pieces */}\r\n                  <Text\r\n                    width=\"10%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.pieces?.number_of_pieces || \"N/A\"}\r\n                  </Text>\r\n\r\n                  {/* Deadline */}\r\n                  <Text\r\n                    width=\"20%\"\r\n                    text-align=\"center\"\r\n                    font=\"normal 400 16px/1.5 -apple-system, system-ui, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\r\n                    color=\"--dark\"\r\n                  >\r\n                    {order.deadline_formatted || \"N/A\"}\r\n                  </Text>\r\n\r\n                  {/* Edit Icon */}\r\n                  <Box\r\n                    width=\"5%\"\r\n                    display=\"flex\"\r\n                    justify-content=\"center\"\r\n                    align-items=\"center\"\r\n                  >\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdCreate}\r\n                      size=\"32px\"\r\n                      margin=\"0px\"\r\n                      onClick={() => editOrder(order.uuid)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Delete Icon */}\r\n                  <Box\r\n                    width=\"5%\"\r\n                    display=\"flex\"\r\n                    justify-content=\"center\"\r\n                    align-items=\"center\"\r\n                  >\r\n                    <Icon\r\n                      category=\"md\"\r\n                      icon={MdDeleteSweep}\r\n                      size=\"32px\"\r\n                      margin=\"0px\"\r\n                      onClick={() => handleDelete(order.uuid)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Text>No orders available</Text>\r\n          )}\r\n        </Box>\r\n        {/* End Fixed-Width Container */}\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Hr,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Icon,\r\n  Select,\r\n} from \"@quarkly/widgets\";\r\nimport { Override } from \"@quarkly/components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdDeleteSweep, MdNoteAdd, MdArrowBack } from \"react-icons/md\";\r\nimport {\r\n  uploadImage,\r\n  uploadAudio,\r\n  saveOrderToDatabase,\r\n} from \"./firebaseConfig\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// UUID generation function\r\nconst generateUUID = () => {\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  let result = \"\";\r\n  for (let i = 0; i < 7; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\r\n  }\r\n  return result;\r\n};\r\n\r\n// WhatsApp message sending function\r\nconst sendWhatsAppMessage = (phoneNumber, orderUUID) => {\r\n  const message = `Hi, your order with UUID: ${orderUUID} has been successfully placed.`;\r\n  console.log(\r\n    `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n      message\r\n    )}`\r\n  );\r\n  // const whatsappAPIUrl = `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n  //   message\r\n  // )}`;\r\n  // window.open(whatsappAPIUrl, \"_blank\");\r\n};\r\n\r\n// Custom File Uploader Component\r\nconst FileUploader = ({ handleFile }) => {\r\n  const hiddenFileInput = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    handleFile(files);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"button-upload\"\r\n        onClick={handleClick}\r\n        margin=\"20px 0\"\r\n        background=\"#cb7731\"\r\n        color=\"white\"\r\n        padding=\"10px 20px\"\r\n        border-radius=\"7.5px\"\r\n      >\r\n        Upload Images\r\n      </Button>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleChange}\r\n        ref={hiddenFileInput}\r\n        style={{ display: \"none\" }}\r\n        multiple\r\n        accept=\"image/*\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// Audio Recorder Component\r\nconst AudioRecorder = ({ handleAudioUpload }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [audioURL, setAudioURL] = useState(\"\");\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunks = useRef([]);\r\n\r\n  const handleStartRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const mediaRecorder = new MediaRecorder(stream);\r\n      mediaRecorderRef.current = mediaRecorder;\r\n\r\n      mediaRecorder.ondataavailable = (event) => {\r\n        audioChunks.current.push(event.data);\r\n      };\r\n\r\n      mediaRecorder.onstop = async () => {\r\n        const audioBlob = new Blob(audioChunks.current, { type: \"audio/wav\" });\r\n        const audioLink = await handleAudioUpload(audioBlob);\r\n        setAudioURL(audioLink);\r\n        audioChunks.current = [];\r\n      };\r\n\r\n      mediaRecorder.start();\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error accessing microphone:\", error);\r\n      alert(\"Error accessing microphone\");\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        margin=\"20px 0\"\r\n        background=\"#cb7731\"\r\n        color=\"white\"\r\n        padding=\"10px 20px\"\r\n        border-radius=\"7.5px\"\r\n        onClick={isRecording ? handleStopRecording : handleStartRecording}\r\n      >\r\n        {isRecording ? \"Stop Recording\" : \"Record Audio\"}\r\n      </Button>\r\n      {audioURL && (\r\n        <audio controls>\r\n          <source src={audioURL} type=\"audio/wav\" />\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const [customerName, setCustomerName] = useState(\"\");\r\n  const [countryCode, setCountryCode] = useState(\"+91\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [pieces, setPieces] = useState([]);\r\n  const [audioLink, setAudioLink] = useState(\"\"); // To store audio URL\r\n  const [deadlineDate, setDeadlineDate] = useState(new Date()); // Added state for deadline date\r\n  const history = useHistory();\r\n\r\n  // Handle file upload and store image paths\r\n  const handleFileUpload = async (files) => {\r\n    try {\r\n      const uploadedImageUrls = await Promise.all(\r\n        files.map((file) => uploadImage(file)) // Use uploadImage function\r\n      );\r\n      setImages((prevImages) => [...prevImages, ...uploadedImageUrls]); // Store URLs\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle audio upload and return the uploaded audio URL\r\n  const handleAudioUpload = async (audioBlob) => {\r\n    const audioURL = await uploadAudio(audioBlob);\r\n    setAudioLink(audioURL);\r\n    return audioURL;\r\n  };\r\n\r\n  // Add a new piece row\r\n  const addPieceRow = () => {\r\n    setPieces([...pieces, { type: \"Blouse\", quantity: 1, remarks: \"\" }]);\r\n  };\r\n\r\n  // Remove a piece row\r\n  const removePieceRow = (index) => {\r\n    setPieces(pieces.filter((_, i) => i !== index));\r\n  };\r\n\r\n  // Handle piece data updates\r\n  const handleTypeChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, type: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const handleQuantityChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, quantity: Number(value) } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const handleRemarksChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, remarks: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const totalPieces = pieces.reduce((acc, piece) => acc + piece.quantity, 0);\r\n\r\n  const formatDateLocal = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = `0${date.getMonth() + 1}`.slice(-2); // Months are zero-based\r\n    const day = `0${date.getDate()}`.slice(-2);\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Submit the order\r\n  const handleSubmitOrder = async () => {\r\n    // Get the current date and time\r\n    const now = new Date();\r\n    const orderCreationTime = now.toLocaleTimeString(\"en-US\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: true,\r\n    });\r\n    const orderCreationDate = now\r\n      .toLocaleDateString(\"en-US\", {\r\n        day: \"numeric\",\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n      })\r\n      .replace(/(\\d+)(th|st|nd|rd)/, \"$1th\");\r\n\r\n    // Generate UUID\r\n    const orderUUID = generateUUID();\r\n\r\n    // Filter out undefined or null images\r\n    const validImages = images.filter(\r\n      (image) => image !== undefined && image !== null\r\n    );\r\n\r\n    const deadline_raw = formatDateLocal(deadlineDate);\r\n    const deadline_formatted = deadlineDate\r\n      .toLocaleDateString(\"en-US\", {\r\n        day: \"numeric\",\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n      })\r\n      .replace(/(\\d+)(th|st|nd|rd)/, \"$1th\");\r\n    // Prepare order data\r\n    const orderData = {\r\n      customer_name: customerName,\r\n      phone_number: `${countryCode}${phoneNumber}`,\r\n      images: validImages, // Ensure only valid image URLs are saved\r\n      pieces: { number_of_pieces: totalPieces, details: pieces },\r\n      audio_link: audioLink,\r\n      orderCreationTime,\r\n      orderCreationDate,\r\n      progress: \"Pending\",\r\n      uuid: orderUUID,\r\n      deadline_raw: deadline_raw,\r\n      deadline_formatted: deadline_formatted,\r\n      // Include the formatted deadline date\r\n    };\r\n    // console.log(orderData);\r\n    // Save order to Firebase Realtime Database\r\n    await saveOrderToDatabase(orderData, orderUUID);\r\n\r\n    // Send WhatsApp message\r\n    sendWhatsAppMessage(`${countryCode}${phoneNumber}`, orderUUID);\r\n\r\n    // Redirect to orders page\r\n    history.push(\"/orders\");\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-customers\"} />\r\n      <Helmet>\r\n        <title>Add Order</title>\r\n        <meta\r\n          name={\"description\"}\r\n          content={\"Web site created using quarkly.io\"}\r\n        />\r\n        <link\r\n          rel={\"shortcut icon\"}\r\n          href={\"https://uploads.quarkly.io/readme/cra/favicon-32x32.ico\"}\r\n          type={\"image/x-icon\"}\r\n        />\r\n      </Helmet>\r\n\r\n      {/* Main Content */}\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Schedule-5\">\r\n        <Box\r\n          display=\"flex\"\r\n          align-items=\"center\"\r\n          justify-content=\"center\"\r\n          position=\"relative\"\r\n        >\r\n          <Icon\r\n            category=\"md\"\r\n            icon={MdArrowBack}\r\n            size=\"40px\"\r\n            margin=\"16px\"\r\n            padding=\"0px 0px 16px 0px\"\r\n            onClick={() => history.push(\"/orders\")}\r\n            style={{ cursor: \"pointer\", position: \"absolute\", left: \"0\" }}\r\n          />\r\n          <Text\r\n            margin=\"0px 0px 20px 0px\"\r\n            text-align=\"center\"\r\n            font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n            color=\"--dark\"\r\n            sm-margin=\"0px 0px 30px 0px\"\r\n          >\r\n            New Order\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Customer Name</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            required\r\n            onChange={(e) => setCustomerName(e.target.value)}\r\n          />\r\n          <Hr\r\n            min-height=\"10px\"\r\n            min-width=\"100%\"\r\n            margin=\"15px 0px 15px 0px\"\r\n            border-color=\"--color-darkL2\"\r\n            width=\"1200px\"\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n          <Box\r\n            min-width=\"100px\"\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            padding=\"15px 0px 15px 0px\"\r\n          >\r\n            <Input\r\n              display=\"inline-block\"\r\n              background=\"white\"\r\n              defaultValue=\"+91\"\r\n              border-color=\"--color-darkL2\"\r\n              width=\"4%\"\r\n              padding=\"6px 8px\"\r\n              border-radius=\"7.5px\"\r\n              margin=\"0px 4px 0px 0px\"\r\n              required\r\n              onChange={(e) => setCountryCode(e.target.value)}\r\n            />\r\n            <Input\r\n              display=\"grid\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              required\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n            />\r\n          </Box>\r\n\r\n          {/* Image Upload Section */}\r\n          <Text margin=\"15px 0px 15px 0px\">Upload Images</Text>\r\n          <FileUploader handleFile={handleFileUpload} />\r\n          {images.length === 0 ? null : (\r\n            <Box\r\n              display=\"grid\"\r\n              grid-template-columns={`repeat(${Math.min(\r\n                images.length,\r\n                4\r\n              )}, 225px)`}\r\n              grid-auto-rows=\"225px\"\r\n              grid-gap=\"15px\"\r\n              width={`${\r\n                Math.min(images.length, 4) * 225 +\r\n                (Math.min(images.length, 4) - 1) * 15\r\n              }px`}\r\n              overflow=\"auto\"\r\n              padding=\"15px\"\r\n              border=\"1px solid #ccc\"\r\n              margin=\"15px 0\"\r\n            >\r\n              {images.map((image, index) => (\r\n                <Box\r\n                  key={index}\r\n                  as=\"img\"\r\n                  // Check if the image is a File object or already uploaded (URL string)\r\n                  src={\r\n                    image instanceof File ? URL.createObjectURL(image) : image\r\n                  }\r\n                  width=\"225px\"\r\n                  height=\"225px\"\r\n                  object-fit=\"cover\"\r\n                />\r\n              ))}\r\n            </Box>\r\n          )}\r\n\r\n          <Hr\r\n            min-height=\"10px\"\r\n            min-width=\"100%\"\r\n            margin=\"15px 0px 15px 0px\"\r\n            border-color=\"--color-darkL2\"\r\n            width=\"1200px\"\r\n          />\r\n\r\n          {/* Audio Recording Section */}\r\n          <Text margin=\"15px 0px 15px 0px\">Record Audio</Text>\r\n          <AudioRecorder handleAudioUpload={handleAudioUpload} />\r\n\r\n          {/* Pieces Section */}\r\n          <Box\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            justify-content=\"space-between\"\r\n          >\r\n            <Text margin=\"15px 0px 15px 0px\">Add Pieces</Text>\r\n            <Icon\r\n              category=\"md\"\r\n              icon={MdNoteAdd}\r\n              size=\"32px\"\r\n              margin=\"16px 0px 16px 0px\"\r\n              onClick={addPieceRow}\r\n              style={{ cursor: \"pointer\" }}\r\n            />\r\n          </Box>\r\n\r\n          {pieces.length > 0 && (\r\n            <>\r\n              {pieces.map((piece, index) => (\r\n                <Box\r\n                  key={index}\r\n                  display=\"flex\"\r\n                  align-items=\"center\"\r\n                  margin=\"10px 0\"\r\n                >\r\n                  <Text width=\"5%\" textAlign=\"center\">\r\n                    {index + 1}\r\n                  </Text>\r\n                  <Select\r\n                    value={piece.type}\r\n                    onChange={(e) => handleTypeChange(index, e.target.value)}\r\n                    background=\"white\"\r\n                    width=\"20%\"\r\n                    padding=\"5px\"\r\n                    fontSize=\"16px\"\r\n                    margin=\"0 10px\"\r\n                  >\r\n                    <option value=\"Blouse\">Blouse</option>\r\n                    <option value=\"Lehenga\">Lehenga</option>\r\n                    <option value=\"Dress\">Dress</option>\r\n                    <option value=\"Peticoat\">Peticoat</option>\r\n                  </Select>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={piece.quantity}\r\n                    onChange={(e) =>\r\n                      handleQuantityChange(index, e.target.value)\r\n                    }\r\n                    width=\"20%\"\r\n                    min=\"1\"\r\n                    background=\"white\"\r\n                    padding=\"5px\"\r\n                    margin=\"0 10px\"\r\n                  />\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Remarks\"\r\n                    value={piece.remarks}\r\n                    onChange={(e) => handleRemarksChange(index, e.target.value)}\r\n                    width=\"40%\"\r\n                    background=\"white\"\r\n                    padding=\"5px\"\r\n                    margin=\"0 10px\"\r\n                  />\r\n                  <Icon\r\n                    category=\"md\"\r\n                    icon={MdDeleteSweep}\r\n                    size=\"32px\"\r\n                    margin=\"0px 15px\"\r\n                    onClick={() => removePieceRow(index)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                </Box>\r\n              ))}\r\n              <Text margin=\"15px 0px 15px 0px\">\r\n                Total Pieces: {totalPieces}\r\n              </Text>\r\n            </>\r\n          )}\r\n\r\n          <Hr\r\n            min-height=\"10px\"\r\n            min-width=\"100%\"\r\n            margin=\"15px 0px 15px 0px\"\r\n            border-color=\"--color-darkL2\"\r\n            width=\"1200px\"\r\n          />\r\n\r\n          {/* Deadline Section */}\r\n          <Text margin=\"15px 0px 15px 0px\">Deadline</Text>\r\n          <Input\r\n            type=\"date\"\r\n            value={deadlineDate.toISOString().split(\"T\")[0]}\r\n            onChange={(e) => {\r\n              setDeadlineDate(new Date(e.target.value));\r\n            }}\r\n            width=\"40%\"\r\n            background=\"white\"\r\n            padding=\"5px\"\r\n            margin=\"0 10px\"\r\n          />\r\n          <Hr\r\n            min-height=\"10px\"\r\n            min-width=\"100%\"\r\n            margin=\"15px 0px 15px 0px\"\r\n            border-color=\"--color-darkL2\"\r\n            width=\"1200px\"\r\n          />\r\n          <Button\r\n            onClick={handleSubmitOrder}\r\n            margin=\"40px 0\"\r\n            background=\"#cb7731\"\r\n            color=\"white\"\r\n            padding=\"10px 20px\"\r\n            border-radius=\"7.5px\"\r\n          >\r\n            Submit Order\r\n          </Button>\r\n        </Box>\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Hr,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Icon,\r\n  Select,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { MdDeleteSweep, MdNoteAdd, MdArrowBack } from \"react-icons/md\";\r\nimport {\r\n  fetchOrderById,\r\n  editOrderById,\r\n  uploadImage,\r\n  uploadAudio,\r\n} from \"./firebaseConfig\"; // Import Firebase functions\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { FaWhatsapp } from \"react-icons/fa\";\r\n\r\n// Helper function to extract the UUID from the URL query string\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const uuid = query.get(\"uuid\"); // Extract UUID from URL\r\n  const [orderData, setOrderData] = useState(null); // To store fetched order data\r\n  const [pieces, setPieces] = useState([]); // For pieces list\r\n  const [progress, setProgress] = useState(\"\"); // To track the progress status\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n  const [error, setError] = useState(null); // Add error state\r\n  const [imageUrls, setImageUrls] = useState([]); // For storing image URLs\r\n  const [audioURL, setAudioURL] = useState(null); // For storing audio URLs\r\n  const [modalOpen, setModalOpen] = useState(false); // For modal state\r\n  const [modalImageUrl, setModalImageUrl] = useState(\"\"); // For the image in modal\r\n  const [deadline, setDeadline] = useState(\"\"); // For storing the deadline date\r\n\r\n  const convertToInputDateFormat = (dateString) => {\r\n    // Parse the date string, e.g., \"November 8, 2024\"\r\n    const parsedDate = new Date(dateString);\r\n\r\n    // Format as YYYY-MM-DD for input date compatibility\r\n    const year = parsedDate.getFullYear();\r\n    const month = String(parsedDate.getMonth() + 1).padStart(2, \"0\"); // Months are 0-indexed\r\n    const day = String(parsedDate.getDate()).padStart(2, \"0\");\r\n\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Fetch order details on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (uuid) {\r\n          fetchOrderById(uuid, (data) => {\r\n            if (data) {\r\n              setOrderData(data);\r\n              setPieces(data?.pieces?.details || []);\r\n              setProgress(data?.progress || \"Pending\");\r\n              setImageUrls(data.images || []);\r\n              setAudioURL(data.audio_link || null);\r\n              setDeadline(convertToInputDateFormat(data.deadline_raw) || \"\"); // Set deadline if available\r\n            } else {\r\n              setError(\"Order not found or invalid UUID.\");\r\n            }\r\n            setLoading(false);\r\n          });\r\n        } else {\r\n          setError(\"Invalid order UUID.\");\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching order data.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [uuid]);\r\n\r\n  // Handle file upload for additional images\r\n  const handleFileUpload = async (files) => {\r\n    try {\r\n      const uploadedImageUrls = await Promise.all(\r\n        files.map((file) => uploadImage(file))\r\n      );\r\n      setImageUrls((prevUrls) => [...prevUrls, ...uploadedImageUrls]);\r\n    } catch (error) {\r\n      console.error(\"Error uploading images:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle audio upload\r\n  const handleAudioUpload = async (audioBlob) => {\r\n    try {\r\n      const audioLink = await uploadAudio(audioBlob);\r\n      setAudioURL(audioLink);\r\n    } catch (error) {\r\n      console.error(\"Error uploading audio:\", error);\r\n    }\r\n  };\r\n\r\n  const FileUploader = ({ handleFile }) => {\r\n    const hiddenFileInput = useRef(null);\r\n\r\n    const handleClick = () => {\r\n      hiddenFileInput.current.click();\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n      const files = Array.from(event.target.files);\r\n      handleFile(files);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          className=\"button-upload\"\r\n          onClick={handleClick}\r\n          margin=\"20px 0\"\r\n          background=\"#cb7731\"\r\n          color=\"white\"\r\n          padding=\"10px 20px\"\r\n          border-radius=\"7.5px\"\r\n        >\r\n          Upload Images\r\n        </Button>\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleChange}\r\n          ref={hiddenFileInput}\r\n          style={{ display: \"none\" }}\r\n          multiple\r\n          accept=\"image/*\"\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Audio Recorder Component\r\n  const AudioRecorder = ({ handleAudioUpload }) => {\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [audioURL, setAudioURL] = useState(\"\");\r\n    const mediaRecorderRef = useRef(null);\r\n    const audioChunks = useRef([]);\r\n\r\n    const handleStartRecording = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const mediaRecorder = new MediaRecorder(stream);\r\n        mediaRecorderRef.current = mediaRecorder;\r\n\r\n        mediaRecorder.ondataavailable = (event) => {\r\n          audioChunks.current.push(event.data);\r\n        };\r\n\r\n        mediaRecorder.onstop = async () => {\r\n          const audioBlob = new Blob(audioChunks.current, { type: \"audio/wav\" });\r\n          const audioLink = await handleAudioUpload(audioBlob);\r\n          setAudioURL(audioLink);\r\n          audioChunks.current = [];\r\n        };\r\n\r\n        mediaRecorder.start();\r\n        setIsRecording(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing microphone:\", error);\r\n        alert(\"Error accessing microphone\");\r\n      }\r\n    };\r\n\r\n    const handleStopRecording = () => {\r\n      if (mediaRecorderRef.current) {\r\n        mediaRecorderRef.current.stop();\r\n        setIsRecording(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          margin=\"20px 0\"\r\n          background=\"#cb7731\"\r\n          color=\"white\"\r\n          padding=\"10px 20px\"\r\n          border-radius=\"7.5px\"\r\n          onClick={isRecording ? handleStopRecording : handleStartRecording}\r\n        >\r\n          {isRecording ? \"Stop Recording\" : \"Record Audio\"}\r\n        </Button>\r\n        {audioURL && (\r\n          <audio controls>\r\n            <source src={audioURL} type=\"audio/wav\" />\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  // Function to format phone number for WhatsApp API\r\n  const formatPhoneNumber = (phone) => {\r\n    // Remove any non-digit characters\r\n    return phone.replace(/\\D/g, \"\");\r\n  };\r\n\r\n  // Handle WhatsApp click\r\n  const handleWhatsAppClick = () => {\r\n    const message = `Your order has been confirmed.\\nVisit gundojus.github.io/Gundojus-internal-tools/#/orders/view?uuid=${uuid} to check the progress.\\n\\n- Sujatha Reddy`;\r\n    const phoneNumber = formatPhoneNumber(orderData.phone_number);\r\n    const url = `https://api.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n      message\r\n    )}`;\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  // Handle updating order data in Firebase\r\n  const handleSaveOrder = async () => {\r\n    try {\r\n      const convertToReadableDate = (inputDate) => {\r\n        // Parse the input date string\r\n        const date = new Date(inputDate);\r\n\r\n        // Array of month names\r\n        const monthNames = [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ];\r\n\r\n        // Get day, month, and year\r\n        const day = date.getDate();\r\n        const month = monthNames[date.getMonth()]; // Get the month name\r\n        const year = date.getFullYear();\r\n\r\n        return `${month} ${day}, ${year}`;\r\n      };\r\n\r\n      const updatedOrderData = {\r\n        ...orderData,\r\n        pieces: {\r\n          ...orderData.pieces,\r\n          details: pieces,\r\n          number_of_pieces: totalPieces,\r\n        },\r\n        progress,\r\n        images: imageUrls, // Include updated images array\r\n        audio_link: audioURL, // Include audio URL\r\n        deadline_raw: deadline, // Include deadline in YYYY-MM-DD format\r\n        deadline_formatted: convertToReadableDate(deadline), // Include deadline formatted\r\n      };\r\n      await editOrderById(uuid, updatedOrderData);\r\n      alert(\"Order updated successfully\");\r\n      history.push(\"/orders\");\r\n    } catch (err) {\r\n      alert(\"Error updating order. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Add a new piece row\r\n  const addPieceRow = () => {\r\n    setPieces([...pieces, { type: \"Blouse\", quantity: 1, remarks: \"\" }]);\r\n  };\r\n\r\n  // Remove a piece row\r\n  const removePieceRow = (index) => {\r\n    setPieces(pieces.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleTypeChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, type: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const handleQuantityChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, quantity: Number(value) } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const handleRemarksChange = (index, value) => {\r\n    const updatedPieces = pieces.map((piece, i) =>\r\n      i === index ? { ...piece, remarks: value } : piece\r\n    );\r\n    setPieces(updatedPieces);\r\n  };\r\n\r\n  const totalPieces = pieces.reduce((acc, piece) => acc + piece.quantity, 0);\r\n\r\n  // Open image in modal\r\n  const openImageInModal = (url) => {\r\n    setModalImageUrl(url);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Close modal\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setModalImageUrl(\"\");\r\n  };\r\n\r\n  if (loading) {\r\n    return <Text>Loading...</Text>;\r\n  }\r\n\r\n  if (error) {\r\n    return <Text>{error}</Text>;\r\n  }\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-edit\"} />\r\n      <Helmet>\r\n        <title>Edit Order</title>\r\n        <meta name={\"description\"} content={\"Edit an existing order\"} />\r\n      </Helmet>\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Schedule-5\">\r\n        {/* Begin Fixed-Width Container */}\r\n        <Box\r\n          min-width=\"1200px\"\r\n          overflow=\"auto\"\r\n          margin=\"0 auto\"\r\n          padding=\"0 10px\" // Optional: Add horizontal padding\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            align-items=\"center\"\r\n            justify-content=\"center\"\r\n            position=\"relative\"\r\n          >\r\n            <Icon\r\n              category=\"md\"\r\n              icon={MdArrowBack}\r\n              size=\"40px\"\r\n              margin=\"16px\"\r\n              padding=\"0px 0px 16px 0px\"\r\n              onClick={() => history.push(\"/orders\")}\r\n              style={{ cursor: \"pointer\", position: \"absolute\", left: \"0\" }}\r\n            />\r\n            <Text\r\n              margin=\"0px 0px 20px 0px\"\r\n              text-align=\"center\"\r\n              font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n              color=\"--dark\"\r\n              sm-margin=\"0px 0px 30px 0px\"\r\n            >\r\n              Edit Order\r\n            </Text>\r\n          </Box>\r\n\r\n          <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n            {/* Your existing content goes here */}\r\n            {/* Customer Name */}\r\n            <Box display=\"flex\" align-items=\"center\" margin=\"15px 0px 15px 0px\">\r\n              <Text margin=\"0\">Customer Name</Text>\r\n              <FaWhatsapp\r\n                size=\"24px\"\r\n                style={{ cursor: \"pointer\", marginLeft: \"10px\" }}\r\n                onClick={handleWhatsAppClick}\r\n              />\r\n            </Box>\r\n            <Input\r\n              display=\"block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              width=\"50%\"\r\n              value={orderData.customer_name || \"\"}\r\n              readOnly\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Phone Number */}\r\n            <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n            <Input\r\n              display=\"block\"\r\n              background=\"white\"\r\n              border-color=\"--color-darkL2\"\r\n              border-radius=\"7.5px\"\r\n              width=\"50%\"\r\n              value={orderData.phone_number || \"\"}\r\n              readOnly\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Progress */}\r\n            <Text margin=\"15px 0px 15px 0px\">Progress</Text>\r\n            <Select\r\n              value={progress}\r\n              onChange={(e) => setProgress(e.target.value)}\r\n              background=\"white\"\r\n              width=\"50%\"\r\n              padding=\"5px\"\r\n              border-radius=\"7.5px\"\r\n            >\r\n              <option value=\"Pending\">Pending</option>\r\n              <option value=\"In Progress\">In Progress</option>\r\n              <option value=\"Completed\">Completed</option>\r\n            </Select>\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Pieces */}\r\n            <Box\r\n              display=\"flex\"\r\n              align-items=\"center\"\r\n              justify-content=\"space-between\"\r\n            >\r\n              <Text margin=\"15px 0px 15px 0px\">Add Pieces</Text>\r\n              <Icon\r\n                category=\"md\"\r\n                icon={MdNoteAdd}\r\n                size=\"32px\"\r\n                margin=\"16px 0px 16px 0px\"\r\n                onClick={addPieceRow}\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n            </Box>\r\n            {pieces.map((piece, index) => (\r\n              <Box key={index} display=\"flex\" align-items=\"center\" margin=\"10px 0\">\r\n                <Text width=\"5%\" textAlign=\"center\">\r\n                  {index + 1}\r\n                </Text>\r\n                <Select\r\n                  value={piece.type}\r\n                  onChange={(e) => handleTypeChange(index, e.target.value)}\r\n                  background=\"white\"\r\n                  width=\"20%\"\r\n                  padding=\"5px\"\r\n                  margin=\"0 10px\"\r\n                >\r\n                  <option value=\"Blouse\">Blouse</option>\r\n                  <option value=\"Lehenga\">Lehenga</option>\r\n                  <option value=\"Dress\">Dress</option>\r\n                  <option value=\"Peticoat\">Peticoat</option>\r\n                </Select>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={piece.quantity}\r\n                  onChange={(e) => handleQuantityChange(index, e.target.value)}\r\n                  width=\"20%\"\r\n                  min=\"1\"\r\n                  background=\"white\"\r\n                  padding=\"5px\"\r\n                  margin=\"0 10px\"\r\n                />\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Remarks\"\r\n                  value={piece.remarks}\r\n                  onChange={(e) => handleRemarksChange(index, e.target.value)}\r\n                  width=\"40%\"\r\n                  background=\"white\"\r\n                  padding=\"5px\"\r\n                  margin=\"0 10px\"\r\n                />\r\n                <Icon\r\n                  category=\"md\"\r\n                  icon={MdDeleteSweep}\r\n                  size=\"32px\"\r\n                  margin=\"0px 15px\"\r\n                  onClick={() => removePieceRow(index)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </Box>\r\n            ))}\r\n            <Text margin=\"15px 0px 15px 0px\">Total Pieces: {totalPieces}</Text>\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Images */}\r\n            <Text margin=\"15px 0px 15px 0px\">Images</Text>\r\n            <FileUploader handleFile={handleFileUpload} />\r\n            {imageUrls.length > 0 && (\r\n              <Box display=\"flex\" flex-wrap=\"wrap\">\r\n                {imageUrls.map((url, index) => (\r\n                  <img\r\n                    key={index}\r\n                    src={url}\r\n                    alt={`Order Image ${index + 1}`}\r\n                    style={{\r\n                      width: \"150px\",\r\n                      height: \"150px\",\r\n                      margin: \"10px\",\r\n                      cursor: \"pointer\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                    onClick={() => openImageInModal(url)}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Audio */}\r\n            <Text margin=\"15px 0px 15px 0px\">Audio</Text>\r\n            {!audioURL && <AudioRecorder handleAudioUpload={handleAudioUpload} />}\r\n            {audioURL && (\r\n              <audio controls style={{ margin: \"10px 0\" }}>\r\n                <source src={audioURL} />\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n            )}\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Deadline */}\r\n            <Text margin=\"15px 0px 15px 0px\">Deadline</Text>\r\n            <Input\r\n              type=\"date\"\r\n              value={deadline}\r\n              onChange={(e) => setDeadline(e.target.value)}\r\n              width=\"40%\"\r\n              background=\"white\"\r\n              padding=\"5px\"\r\n            />\r\n            <Hr margin=\"15px 0px 15px 0px\" width=\"1200px\" />\r\n\r\n            {/* Save Button */}\r\n            <Button\r\n              onClick={handleSaveOrder}\r\n              margin=\"40px 0\"\r\n              background=\"#cb7731\"\r\n              color=\"white\"\r\n              padding=\"10px 20px\"\r\n              border-radius=\"7.5px\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        {/* End Fixed-Width Container */}\r\n      </Section>\r\n\r\n      {modalOpen && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            backgroundColor: \"rgba(0,0,0,0.8)\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            zIndex: 1000,\r\n          }}\r\n          onClick={closeModal}\r\n        >\r\n          <img\r\n            src={modalImageUrl}\r\n            alt=\"Full Size\"\r\n            style={{ maxHeight: \"90%\", maxWidth: \"90%\" }}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n        </div>\r\n      )}\r\n    </Theme>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Text, Input, Box, Section, Hr } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { fetchOrderById } from \"./firebaseConfig\"; // Import the function to fetch order data from Firebase\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\"; // Import ProgressBar\r\n\r\n// Helper function to extract UUID from the URL\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\n\r\n// Function to get progress color based on status\r\nconst getProgressColor = (progress) => {\r\n  if (progress === \"Completed\") return \"#31a931\"; // Green for completed\r\n  if (progress === \"In Progress\") return \"#ffaa00\"; // Orange for in progress\r\n  return \"#ff0000\"; // Red for others (e.g., Pending)\r\n};\r\n\r\nexport default () => {\r\n  const query = useQuery();\r\n  const uuid = query.get(\"uuid\"); // Extract UUID from URL\r\n  const [orderData, setOrderData] = useState(null); // To store the fetched order data\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n  const [error, setError] = useState(null); // Add error state\r\n\r\n  // Fetch order details on component mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (uuid) {\r\n          fetchOrderById(uuid, (data) => {\r\n            if (data) {\r\n              setOrderData(data); // Set the fetched data into state\r\n            } else {\r\n              setError(\"Order not found.\");\r\n            }\r\n            setLoading(false);\r\n          });\r\n        } else {\r\n          setError(\"Invalid order UUID.\");\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching order data.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [uuid]);\r\n\r\n  // Show loading message if data is not yet fetched\r\n  if (loading) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"orders-view\"} />\r\n        <Text>Loading order details...</Text>\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Theme theme={theme}>\r\n        <GlobalQuarklyPageStyles pageUrl={\"orders-view\"} />\r\n        <Text>{error}</Text> {/* Display error if occurred */}\r\n      </Theme>\r\n    );\r\n  }\r\n\r\n  // Map the progress to numeric values for progress bar\r\n  const progressLevels = {\r\n    Pending: 0,\r\n    \"In Progress\": 50,\r\n    Completed: 100,\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"orders-view\"} />\r\n      <Helmet>\r\n        <title>View Order</title>\r\n        <meta name={\"description\"} content={\"View an existing order\"} />\r\n      </Helmet>\r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"View-Order\">\r\n        <Box\r\n          display=\"flex\"\r\n          align-items=\"center\"\r\n          justify-content=\"center\"\r\n          position=\"relative\"\r\n        >\r\n          <Text\r\n            margin=\"0px 0px 20px 0px\"\r\n            text-align=\"center\"\r\n            font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\"\r\n            color=\"--dark\"\r\n            sm-margin=\"0px 0px 30px 0px\"\r\n          >\r\n            Order Details\r\n          </Text>\r\n        </Box>\r\n\r\n        {/* Customer Information Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Customer Name</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.customer_name || \"\"}\r\n            readOnly\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Phone Number</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.phone_number || \"\"}\r\n            readOnly\r\n          />\r\n        </Box>\r\n\r\n        {/* Horizontal Rule */}\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Order Information Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Order Creation Date</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.orderCreationDate || \"\"}\r\n            readOnly\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Order Creation Time</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.orderCreationTime || \"\"}\r\n            readOnly\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Deadline</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            value={orderData.deadline || \"\"}\r\n            readOnly\r\n          />\r\n        </Box>\r\n\r\n        {/* Horizontal Rule */}\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Pieces Information Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Pieces</Text>\r\n          {orderData.pieces?.details?.map((piece, index) => (\r\n            <Box key={index} display=\"flex\" align-items=\"center\" margin=\"5px 0\">\r\n              <Text width=\"200px\">{piece.type}</Text>\r\n              <Text>Quantity: {piece.quantity}</Text>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n\r\n        {/* Horizontal Rule */}\r\n        <Hr\r\n          min-height=\"10px\"\r\n          min-width=\"100%\"\r\n          margin=\"15px 0px 15px 0px\"\r\n          border-color=\"--color-darkL2\"\r\n          width=\"1200px\"\r\n        />\r\n\r\n        {/* Progress Section */}\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Progress</Text>\r\n          <ProgressBar\r\n            completed={progressLevels[orderData.progress] || 0}\r\n            bgColor={getProgressColor(orderData.progress)}\r\n            labelAlignment=\"center\"\r\n            labelColor=\"#ffffff\"\r\n            width=\"50%\"\r\n          />\r\n        </Box>\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport theme from \"theme\";\r\nimport {\r\n  Theme,\r\n  Text,\r\n  Input,\r\n  Box,\r\n  Button,\r\n  Section,\r\n  Select,\r\n} from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { getDatabase, ref as dbRef, push, set } from \"firebase/database\"; // Firebase database imports\r\nimport { NavBar } from \"./navbar\";\r\n// Firebase configuration is initialized elsewhere in firebaseConfig.js\r\n\r\n// Function to add a new user to the database\r\nconst addUserToDatabase = async (email, password, role) => {\r\n  const db = getDatabase();\r\n  const usersRef = dbRef(db, \"users\");\r\n  const newUserRef = push(usersRef);\r\n  await set(newUserRef, {\r\n    email,\r\n    password,\r\n    role,\r\n  });\r\n  alert(\"User added successfully\");\r\n};\r\n\r\nexport default () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"manager\"); // Default role is set to manager\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!email || !password) {\r\n      alert(\"Please fill in both email and password\");\r\n      return;\r\n    }\r\n    addUserToDatabase(email, password, role); // Call the function to add user\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setRole(\"manager\");\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <GlobalQuarklyPageStyles pageUrl={\"sudo-add-users\"} />\r\n      <Helmet>\r\n        <title>Add New User</title>\r\n        <meta name={\"description\"} content={\"Add new user by sudo\"} />\r\n      </Helmet>\r\n\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"Add Users\"} />  \r\n\r\n      <Section padding=\"90px 0 100px 0\" quarkly-title=\"Add-User\">\r\n        <Box display=\"flex\" align-items=\"center\" justify-content=\"center\" position=\"relative\">\r\n          <Text margin=\"0px 0px 20px 0px\" text-align=\"center\" font=\"normal 500 56px/1.2 --fontFamily-serifGeorgia\" color=\"--dark\" sm-margin=\"0px 0px 30px 0px\">\r\n            Add New User\r\n          </Text>\r\n        </Box>\r\n\r\n        <Box min-width=\"100px\" min-height=\"100px\" padding=\"15px 0px 15px 0px\">\r\n          <Text margin=\"15px 0px 15px 0px\">Email</Text>\r\n          <Input\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Password</Text>\r\n          <Input\r\n            type=\"password\"\r\n            display=\"block\"\r\n            placeholder-color=\"LightGray\"\r\n            background=\"white\"\r\n            border-color=\"--color-darkL2\"\r\n            border-radius=\"7.5px\"\r\n            width=\"50%\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <Text margin=\"15px 0px 15px 0px\">Role</Text>\r\n          <Select\r\n            value={role}\r\n            onChange={(e) => setRole(e.target.value)}\r\n            background=\"white\"\r\n            width=\"50%\"\r\n            padding=\"5px\"\r\n            border-radius=\"7.5px\"\r\n          >\r\n            <option value=\"manager\">Manager</option>\r\n            <option value=\"sudo\">Sudo</option>\r\n          </Select>\r\n          <br />\r\n          <Button\r\n            onClick={handleSubmit}\r\n            margin=\"40px 0\"\r\n            background=\"#cb7731\"\r\n            color=\"white\"\r\n            padding=\"10px 20px\"\r\n            border-radius=\"7.5px\"\r\n          >\r\n            Add User\r\n          </Button>\r\n        </Box>\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport theme from \"theme\";\r\nimport { Theme, Link, Text, Box, Section } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GlobalQuarklyPageStyles } from \"global-page-styles\";\r\nimport { RawHtml, Override } from \"@quarkly/components\";\r\nexport default (() => {\r\n\treturn <Theme theme={theme}>\r\n\t\t<GlobalQuarklyPageStyles pageUrl={\"404\"} />\r\n\t\t<Helmet>\r\n\t\t\t<title>\r\n\t\t\t\tError 404\r\n\t\t\t</title>\r\n\t\t\t<meta name={\"description\"} content={\"Web site created using quarkly.io\"} />\r\n\t\t\t<link rel={\"shortcut icon\"} href={\"https://uploads.quarkly.io/readme/cra/favicon-32x32.ico\"} type={\"image/x-icon\"} />\r\n\t\t</Helmet>\r\n\t\t<Section padding=\"88px 0 88px 0\" min-height=\"100vh\" quarkly-title=\"404-1\">\r\n\t\t\t<Override slot=\"SectionContent\" max-width=\"1220px\" justify-content=\"center\" />\r\n\t\t\t<Box align-items=\"center\" display=\"flex\" justify-content=\"center\" flex-direction=\"column\">\r\n\t\t\t\t<Text margin=\"0px 0px 0px 0px\" font=\"--headline3\" color=\"--primary\">\r\n\t\t\t\t\t404\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tcolor=\"--dark\"\r\n\t\t\t\t\tmargin=\"8px 0px 16px 0px\"\r\n\t\t\t\t\tsm-font=\"normal 700 42px/1.2 &quot;Source Sans Pro&quot;, sans-serif\"\r\n\t\t\t\t\tfont=\"--headline1\"\r\n\t\t\t\t\tletter-spacing=\"-0.025em\"\r\n\t\t\t\t>\r\n\t\t\t\t\tPage not found\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tlg-width=\"80%\"\r\n\t\t\t\t\tfont=\"--lead\"\r\n\t\t\t\t\tcolor=\"--dark\"\r\n\t\t\t\t\tmargin=\"0px 0px 40px 0px\"\r\n\t\t\t\t\ttext-align=\"center\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSorry, we couldn’t find the page you’re looking for.\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tfont=\"--lead\"\r\n\t\t\t\t\tpadding=\"12px 24px 12px 24px\"\r\n\t\t\t\t\tbackground=\"--color-primary\"\r\n\t\t\t\t\tborder-radius=\"8px\"\r\n\t\t\t\t\thref=\"/\"\r\n\t\t\t\t\ttext-decoration-line=\"initial\"\r\n\t\t\t\t\tcolor=\"--light\"\r\n\t\t\t\t\ttransition=\"--opacityOut\"\r\n\t\t\t\t\thover-opacity=\"0.7\"\r\n\t\t\t\t>\r\n\t\t\t\t\tGo back to home\r\n\t\t\t\t</Link>\r\n\t\t\t</Box>\r\n\t\t</Section>\r\n\t\t\r\n\t\t<RawHtml>\r\n\t\t\t<style place={\"endOfHead\"} rawKey={\"66f6d1359710450018a331b3\"}>\r\n\t\t\t\t{\":root {\\n  box-sizing: border-box;\\n}\\n\\n* {\\n  box-sizing: inherit;\\n}\"}\r\n\t\t\t</style>\r\n\t\t</RawHtml>\r\n\t</Theme>;\r\n});","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Text, Theme, Section, Hr } from \"@quarkly/widgets\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport theme from \"theme\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./mobile-month-view.css\";\r\nimport { fetchOrdersByDate } from \"./firebaseConfig\";\r\nimport { NavBar } from \"./navbar\";\r\n\r\nconst CalendarPage = () => {\r\n  const [myEvents, setEvents] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [toastMessage, setToastMessage] = useState(null);\r\n\r\n  // Function to format date as YYYY-MM-DD based on local timezone\r\n  const formatDateLocal = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = `0${date.getMonth() + 1}`.slice(-2); // Months are zero-based\r\n    const day = `0${date.getDate()}`.slice(-2);\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Function to determine the color based on progress status\r\n  const getStatusColor = (progress) => {\r\n    if (progress === \"Completed\") return \"#31a931\"; // Green for completed\r\n    if (progress === \"In Progress\") return \"#ffaa00\"; // Orange for in progress\r\n    return \"#ff0000\"; // Red for pending or other statuses\r\n  };\r\n\r\n  // Function to load orders for all dates in the current month\r\n  const loadEventsForMonth = async (date) => {\r\n    const startOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const endOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n\r\n    // Generate all dates in the current month in 'YYYY-MM-DD' format\r\n    const datesInMonth = [];\r\n    for (\r\n      let d = new Date(startOfMonth);\r\n      d <= endOfMonth;\r\n      d.setDate(d.getDate() + 1)\r\n    ) {\r\n      datesInMonth.push(formatDateLocal(new Date(d)));\r\n    }\r\n\r\n    // Fetch orders for each date\r\n    const allOrders = [];\r\n    for (const dateStr of datesInMonth) {\r\n      const orders = await fetchOrdersByDate(dateStr);\r\n      if (orders.length > 0) {\r\n        allOrders.push(...orders);\r\n      }\r\n    }\r\n\r\n    setEvents(allOrders);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load events when the component mounts and whenever the month changes\r\n    loadEventsForMonth(selectedDate);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedDate]);\r\n\r\n  // Function to filter events for the selected date\r\n  const getEventsForDate = (date) => {\r\n    const formattedDate = formatDateLocal(date); // \"YYYY-MM-DD\"\r\n    return myEvents.filter((event) => event.deadline_raw === formattedDate);\r\n  };\r\n\r\n  // Function to handle date selection\r\n  const onDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    const events = getEventsForDate(date);\r\n    // Filter out completed orders\r\n    const pendingEvents = events.filter(\r\n      (event) => event.progress !== \"Completed\"\r\n    );\r\n    if (pendingEvents.length > 0) {\r\n      const totalPieces = pendingEvents.reduce(\r\n        (sum, event) => sum + event.pieces.number_of_pieces,\r\n        0\r\n      );\r\n      setToastMessage(\r\n        `You have ${pendingEvents.length} pending order(s) with a total of ${totalPieces} piece(s) on ${date.toDateString()}`\r\n      );\r\n    } else {\r\n      setToastMessage(\"No pending orders on this day\");\r\n    }\r\n  };\r\n\r\n  // Function to add markers on dates with pending or in-progress events\r\n  const tileContent = ({ date, view }) => {\r\n    if (view === \"month\") {\r\n      const events = getEventsForDate(date);\r\n      const hasPending = events.some(\r\n        (event) => event.progress !== \"Completed\"\r\n      );\r\n      if (hasPending) {\r\n        return (\r\n          <Box\r\n            width=\"8px\"\r\n            height=\"8px\"\r\n            borderRadius=\"50%\"\r\n            background=\"red\"\r\n            margin=\"0 auto\"\r\n            marginTop=\"2px\"\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Theme theme={theme}>\r\n      <Helmet>\r\n        <title>Calendar</title>\r\n        <meta name=\"description\" content=\"Order Calendar\" />\r\n      </Helmet>\r\n\r\n      {/* Navigation Header */}\r\n      <NavBar role={sessionStorage.getItem(\"role\")} current={\"Calendar\"} />\r\n\r\n      {/* Main Calendar Content */}\r\n      <Section padding=\"20px 0 20px 0\">\r\n        <Text\r\n          font=\"normal 500 48px/1.2 --fontFamily-serifGeorgia\"\r\n          text-align=\"center\"\r\n        >\r\n          Calendar\r\n        </Text>\r\n\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          {/* Centered Calendar */}\r\n          <Box display=\"flex\" justifyContent=\"center\" width=\"100%\">\r\n            <Calendar\r\n              onChange={onDateChange}\r\n              value={selectedDate}\r\n              tileContent={tileContent}\r\n              onActiveStartDateChange={({ activeStartDate }) =>\r\n                loadEventsForMonth(activeStartDate)\r\n              }\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Section>\r\n      <Section padding=\"20px 0 0px 0\">\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          {/* Conditionally render the table only if there are events */}\r\n          {getEventsForDate(selectedDate).length > 0 && (\r\n            <Box marginTop=\"30px\" width=\"100%\">\r\n              <Box\r\n                as=\"table\"\r\n                width=\"100%\"\r\n                borderCollapse=\"collapse\"\r\n                marginTop=\"30px\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Customer Name\r\n                    </th>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Pieces\r\n                    </th>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Created On\r\n                    </th>\r\n                    <th style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                      Progress\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getEventsForDate(selectedDate).map((event, index) => (\r\n                    <tr key={index}>\r\n                      <td style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                        {event.customer_name}\r\n                      </td>\r\n                      <td style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                        {event.pieces.number_of_pieces}\r\n                      </td>\r\n                      <td style={{ padding: \"10px\", textAlign: \"left\" }}>\r\n                        {event.orderCreationDate}\r\n                      </td>\r\n                      <td\r\n                        style={{\r\n                          padding: \"10px\",\r\n                          textAlign: \"left\",\r\n                          color: getStatusColor(event.progress),\r\n                        }}\r\n                      >\r\n                        {event.progress}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Toast Notification */}\r\n        {toastMessage && (\r\n          <Box\r\n            background=\"--color-lightD2\"\r\n            padding=\"10px\"\r\n            borderRadius=\"5px\"\r\n            textAlign=\"center\"\r\n            marginTop=\"20px\"\r\n            onClick={() => setToastMessage(null)} // Close toast on click\r\n            cursor=\"pointer\"\r\n          >\r\n            {toastMessage}\r\n          </Box>\r\n        )}\r\n      </Section>\r\n    </Theme>\r\n  );\r\n};\r\n\r\nexport default CalendarPage;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Login from \"pages/login\";\r\nimport Orders from \"pages/ordersManagers\";\r\nimport OrdersAdd from \"pages/ordersAdd\";\r\nimport OrdersEdit from \"pages/ordersEdit\";\r\nimport OrdersView from \"pages/ordersView\"; // Public access for customers to view orders\r\nimport UsersAdd from \"pages/sudoAddUser\"; // Sudo-only route\r\nimport Page404 from \"pages/page404\";\r\nimport CalendarPage from \"pages/calendar\";\r\n// Private route for authenticated users (manager or sudo)\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const role = sessionStorage.getItem(\"role\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        role ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n// Sudo-only route\r\nconst SudoRoute = ({ component: Component, ...rest }) => {\r\n  const role = sessionStorage.getItem(\"role\");\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        role === \"sudo\" ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {/* Public Routes */}\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/orders/view\" component={OrdersView} /> {/* Publicly accessible */}\r\n        \r\n        {/* Private Routes for Authenticated Users */}\r\n        <PrivateRoute exact path=\"/orders\" component={Orders} />\r\n        <PrivateRoute exact path=\"/orders/add\" component={OrdersAdd} />\r\n        <PrivateRoute exact path=\"/orders/edit\" component={OrdersEdit} />\r\n        <PrivateRoute exact path=\"/calendar\" component={CalendarPage} />\r\n        {/* Sudo Route */}\r\n        <SudoRoute exact path=\"/sudo/users/add\" component={UsersAdd} />\r\n\r\n        {/* Redirect to login if no match */}\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport QAPI from \"qapi\";\r\n\r\nwindow.QAPI = QAPI;\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","export default {\r\n\t\"pages\": {\r\n\t\t\"root\": {\r\n\t\t\t\"id\": \"root\",\r\n\t\t\t\"pageUrl\": \"root\",\r\n\t\t\t\"name\": \"root\",\r\n\t\t\t\"children\": [\r\n\t\t\t\t\"66f6d1359710450018a331ba\",\r\n\t\t\t\t\"66f6d1359710450018a331bd\",\r\n\t\t\t\t\"670bf015e5d277001898945e\",\r\n\t\t\t\t\"670bf0609335410018c70fb2\"\r\n\t\t\t]\r\n\t\t},\r\n\t\t\"66f6d1359710450018a331ba\": {\r\n\t\t\t\"id\": \"66f6d1359710450018a331ba\",\r\n\t\t\t\"name\": \"404\",\r\n\t\t\t\"pageUrl\": \"404\"\r\n\t\t},\r\n\t\t\"66f6d1359710450018a331bd\": {\r\n\t\t\t\"id\": \"66f6d1359710450018a331bd\",\r\n\t\t\t\"name\": \"Login\",\r\n\t\t\t\"pageUrl\": \"index\"\r\n\t\t},\r\n\t\t\"670bf015e5d277001898945e\": {\r\n\t\t\t\"id\": \"670bf015e5d277001898945e\",\r\n\t\t\t\"pageUrl\": \"login\",\r\n\t\t\t\"name\": \"Orders-Managers\"\r\n\t\t},\r\n\t\t\"670bf0609335410018c70fb2\": {\r\n\t\t\t\"id\": \"670bf0609335410018c70fb2\",\r\n\t\t\t\"pageUrl\": \"orders-customers\",\r\n\t\t\t\"name\": \"Orders-Add\"\r\n\t\t}\r\n\t},\r\n\t\"mode\": \"production\",\r\n\t\"projectType\": \"create-react-app\",\r\n\t\"site\": {\r\n\t\t\"styles\": {},\r\n\t\t\"seo\": {}\r\n\t}\r\n}"],"sourceRoot":""}